{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1","program":"/home/hangleang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","dbus","--edition=2018","/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9c2f052c373a7bf6","-C","extra-filename=-9c2f052c373a7bf6","--out-dir","/home/hangleang/Documents/system-api/target/rls/debug/deps","-L","dependency=/home/hangleang/Documents/system-api/target/rls/debug/deps","--extern","libc=/home/hangleang/Documents/system-api/target/rls/debug/deps/liblibc-86381fa49fa3a1f6.rmeta","--extern","libdbus_sys=/home/hangleang/Documents/system-api/target/rls/debug/deps/liblibdbus_sys-9496c9817f7e2986.rmeta","--cap-lints","allow","-L","native=/usr/lib","--error-format=json","--sysroot","/home/hangleang/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/hangleang/Documents/system-api/target/rls/debug/deps/libdbus-9c2f052c373a7bf6.rmeta"},"prelude":{"crate_id":{"name":"dbus","disambiguator":[14703353030559519140,1918173382715517098]},"crate_root":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src","external_crates":[{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9744254129402482468,12445345062611050884]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[9942249472390543209,15863006584859964888]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[1795893391416169141,8075121191677772249]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[1572415099058457553,2135166978196155506]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[13603829026942055011,2471063435589406066]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[3150535728137067081,14418570958612661587]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[7556171729466642164,9608667095244489899]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[10806810126330215714,2553684360462883780]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1818097271180387350,15438349324121503308]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[4437646126609693087,6536018436310544926]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[11991037487279530558,3795792059683432706]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":12,"id":{"name":"addr2line","disambiguator":[1437858958743878161,787253638674005063]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":13,"id":{"name":"gimli","disambiguator":[4592710621585877372,1780610752140463821]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":14,"id":{"name":"object","disambiguator":[6338654217379816643,7168927451833124687]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":15,"id":{"name":"miniz_oxide","disambiguator":[18193432317814560663,14768114254071685082]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":16,"id":{"name":"adler","disambiguator":[12647259490832872807,4960225096531867135]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":17,"id":{"name":"panic_unwind","disambiguator":[8559662747993890479,3650412061717966503]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":18,"id":{"name":"libc","disambiguator":[7290286353258925666,2882582840816946827]}},{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","num":19,"id":{"name":"libdbus_sys","disambiguator":[3574217554498648926,16032498450405876341]}}],"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":0,"byte_end":1918,"line_start":1,"line_end":68,"column_start":1,"column_end":72}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":84},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1057,"byte_end":1064,"line_start":25,"line_end":25,"column_start":26,"column_end":33},"alias_span":null,"name":"Message","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1828},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1066,"byte_end":1077,"line_start":25,"line_end":25,"column_start":35,"column_end":46},"alias_span":null,"name":"MessageType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":45},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2829,"byte_end":2839,"line_start":24,"line_end":24,"column_start":27,"column_end":37},"alias_span":null,"name":"SignalArgs","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":1859},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2882,"byte_end":2891,"line_start":27,"line_end":27,"column_start":26,"column_end":35},"alias_span":null,"name":"MatchRule","value":"","parent":{"krate":0,"index":8}},{"kind":"Use","ref_id":{"krate":0,"index":310},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44141,"byte_end":44145,"line_start":19,"line_end":19,"column_start":37,"column_end":41},"alias_span":null,"name":"OrgFreedesktopDBusPeer","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44210,"byte_end":44224,"line_start":21,"line_end":21,"column_start":37,"column_end":51},"alias_span":null,"name":"OrgFreedesktopDBusIntrospectable","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":0,"index":259},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44299,"byte_end":44309,"line_start":23,"line_end":23,"column_start":37,"column_end":47},"alias_span":null,"name":"OrgFreedesktopDBusProperties","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":0,"index":287},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44380,"byte_end":44393,"line_start":25,"line_end":25,"column_start":37,"column_end":50},"alias_span":null,"name":"OrgFreedesktopDBusObjectManager","value":"","parent":{"krate":0,"index":240}},{"kind":"Use","ref_id":{"krate":0,"index":369},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32479,"byte_end":32489,"line_start":16,"line_end":16,"column_start":22,"column_end":32},"alias_span":null,"name":"Connection","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":0,"index":1901},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32491,"byte_end":32499,"line_start":16,"line_end":16,"column_start":34,"column_end":42},"alias_span":null,"name":"ConnMsgs","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":19,"index":192},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35328,"byte_end":35348,"line_start":81,"line_end":81,"column_start":21,"column_end":41},"alias_span":null,"name":"RequestNameReply","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":19,"index":213},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35390,"byte_end":35410,"line_start":82,"line_end":82,"column_start":21,"column_end":41},"alias_span":null,"name":"ReleaseNameReply","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":19,"index":174},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35452,"byte_end":35463,"line_start":83,"line_end":83,"column_start":21,"column_end":32},"alias_span":null,"name":"BusType","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":0,"index":1947},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35511,"byte_end":35516,"line_start":87,"line_end":87,"column_start":23,"column_end":28},"alias_span":null,"name":"Watch","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":0,"index":1926},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35518,"byte_end":35528,"line_start":87,"line_end":87,"column_start":30,"column_end":40},"alias_span":null,"name":"WatchEvent","value":"","parent":{"krate":0,"index":223}},{"kind":"Use","ref_id":{"krate":0,"index":549},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1144,"byte_end":1149,"line_start":32,"line_end":32,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2039},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1151,"byte_end":1160,"line_start":32,"line_end":32,"column_start":24,"column_end":33},"alias_span":null,"name":"MethodErr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2094},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94103,"byte_end":94110,"line_start":12,"line_end":12,"column_start":21,"column_end":28},"alias_span":null,"name":"Channel","value":"","parent":{"krate":0,"index":607}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115789,"byte_end":115790,"line_start":24,"line_end":24,"column_start":78,"column_end":79},"alias_span":null,"name":"*","value":"Properties","parent":{"krate":0,"index":897}},{"kind":"Use","ref_id":{"krate":0,"index":2408},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1304,"byte_end":1313,"line_start":44,"line_end":44,"column_start":26,"column_end":35},"alias_span":null,"name":"Signature","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2484},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1315,"byte_end":1319,"line_start":44,"line_end":44,"column_start":37,"column_end":41},"alias_span":null,"name":"Path","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1006},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155886,"byte_end":155889,"line_start":68,"line_end":68,"column_start":24,"column_end":27},"alias_span":null,"name":"Arg","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1052},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155891,"byte_end":155901,"line_start":68,"line_end":68,"column_start":29,"column_end":39},"alias_span":null,"name":"FixedArray","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1018},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155903,"byte_end":155906,"line_start":68,"line_end":68,"column_start":41,"column_end":44},"alias_span":null,"name":"Get","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1053},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155908,"byte_end":155915,"line_start":68,"line_end":68,"column_start":46,"column_end":53},"alias_span":null,"name":"DictKey","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1013},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155917,"byte_end":155923,"line_start":68,"line_end":68,"column_start":55,"column_end":61},"alias_span":null,"name":"Append","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1023},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155925,"byte_end":155931,"line_start":68,"line_end":68,"column_start":63,"column_end":69},"alias_span":null,"name":"RefArg","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1016},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155933,"byte_end":155942,"line_start":68,"line_end":68,"column_start":71,"column_end":80},"alias_span":null,"name":"AppendAll","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1021},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155944,"byte_end":155951,"line_start":68,"line_end":68,"column_start":82,"column_end":89},"alias_span":null,"name":"ReadAll","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1009},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155953,"byte_end":155959,"line_start":68,"line_end":68,"column_start":91,"column_end":97},"alias_span":null,"name":"ArgAll","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1041},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155965,"byte_end":155969,"line_start":69,"line_end":69,"column_start":5,"column_end":9},"alias_span":null,"name":"cast","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1044},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155971,"byte_end":155979,"line_start":69,"line_end":69,"column_start":11,"column_end":19},"alias_span":null,"name":"cast_mut","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1048},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155981,"byte_end":155990,"line_start":69,"line_end":69,"column_start":21,"column_end":30},"alias_span":null,"name":"prop_cast","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":1047},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155992,"byte_end":155999,"line_start":69,"line_end":69,"column_start":32,"column_end":39},"alias_span":null,"name":"PropMap","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":4142},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156029,"byte_end":156034,"line_start":70,"line_end":70,"column_start":28,"column_end":33},"alias_span":null,"name":"Array","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":4117},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156036,"byte_end":156040,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"alias_span":null,"name":"Dict","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":3515},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156077,"byte_end":156084,"line_start":71,"line_end":71,"column_start":35,"column_end":42},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":991}},{"kind":"Use","ref_id":{"krate":0,"index":3516},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156077,"byte_end":156084,"line_start":71,"line_end":71,"column_start":35,"column_end":42},"alias_span":null,"name":"Variant","value":"","parent":{"krate":0,"index":1724}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":0,"byte_end":1918,"line_start":1,"line_end":68,"column_start":1,"column_end":72},"name":"","qualname":"::","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":223},{"krate":0,"index":535},{"krate":0,"index":604},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":693},{"krate":0,"index":713},{"krate":0,"index":965},{"krate":0,"index":988},{"krate":0,"index":989},{"krate":0,"index":990},{"krate":0,"index":991},{"krate":0,"index":1819},{"krate":0,"index":1820},{"krate":0,"index":1821},{"krate":0,"index":1822},{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1826},{"krate":0,"index":1827}],"decl_id":null,"docs":" D-Bus bindings for Rust","sig":null,"attributes":[{"value":"/ D-Bus bindings for Rust","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":0,"byte_end":27,"line_start":1,"line_end":1,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":28,"byte_end":31,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ [D-Bus](http://dbus.freedesktop.org/) is a message bus, and is mainly used in Linux","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":32,"byte_end":119,"line_start":3,"line_end":3,"column_start":1,"column_end":88}},{"value":"/ for communication between processes. It is present by default on almost every","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":120,"byte_end":201,"line_start":4,"line_end":4,"column_start":1,"column_end":82}},{"value":"/ Linux distribution out there, and runs in two instances - one per session, and one","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":202,"byte_end":288,"line_start":5,"line_end":5,"column_start":1,"column_end":87}},{"value":"/ system-wide.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":289,"byte_end":305,"line_start":6,"line_end":6,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":306,"byte_end":309,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ In addition to the API documentation, which you're currently reading, you might want to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":310,"byte_end":401,"line_start":8,"line_end":8,"column_start":1,"column_end":92}},{"value":"/ look in the examples directory, which contains many examples and some additional documents.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":402,"byte_end":497,"line_start":9,"line_end":9,"column_start":1,"column_end":96}},{"value":"/ README.md also contains a few quick \"getting started\" examples (as well as information about","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":498,"byte_end":594,"line_start":10,"line_end":10,"column_start":1,"column_end":97}},{"value":"/ the `futures` and `no-string-validation` features).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":595,"byte_end":650,"line_start":11,"line_end":11,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":651,"byte_end":654,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ In addition to this crate, there are some companion crates:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":655,"byte_end":718,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/  * dbus-tokio for integrating D-Bus with [Tokio](http://tokio.rs)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":719,"byte_end":788,"line_start":14,"line_end":14,"column_start":1,"column_end":70}},{"value":"/  * dbus-codegen for generating code from D-Bus introspection data","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":789,"byte_end":858,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/  * libdbus-sys contains the raw bindings to the C libdbus library.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":859,"byte_end":929,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"warn(missing_docs)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":931,"byte_end":953,"line_start":18,"line_end":18,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":8},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"message","qualname":"::message","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":1828},{"krate":0,"index":1858},{"krate":0,"index":1856},{"krate":0,"index":1854},{"krate":0,"index":1851},{"krate":0,"index":1852},{"krate":0,"index":1849},{"krate":0,"index":1846},{"krate":0,"index":1847},{"krate":0,"index":1844},{"krate":0,"index":1841},{"krate":0,"index":34},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":219},{"krate":0,"index":221}],"decl_id":null,"docs":" Contains structs and traits closely related to D-Bus messages.\n","sig":null,"attributes":[{"value":"/ Contains structs and traits closely related to D-Bus messages.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":1920,"byte_end":1986,"line_start":1,"line_end":1,"column_start":1,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1829},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2425,"byte_end":2435,"line_start":14,"line_end":14,"column_start":5,"column_end":15},"name":"MethodCall","qualname":"::message::MessageType::MethodCall","value":"MessageType::MethodCall","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":" This is a method call D-Bus message\n","sig":null,"attributes":[{"value":"/ This is a method call D-Bus message","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2381,"byte_end":2420,"line_start":13,"line_end":13,"column_start":5,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1832},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2556,"byte_end":2568,"line_start":16,"line_end":16,"column_start":5,"column_end":17},"name":"MethodReturn","qualname":"::message::MessageType::MethodReturn","value":"MessageType::MethodReturn","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":" This is a method return Ok D-Bus message, used when the method call message was successfully processed\n","sig":null,"attributes":[{"value":"/ This is a method return Ok D-Bus message, used when the method call message was successfully processed","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2445,"byte_end":2551,"line_start":15,"line_end":15,"column_start":5,"column_end":111}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1835},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2691,"byte_end":2696,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"Error","qualname":"::message::MessageType::Error","value":"MessageType::Error","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":" This is a method return with error D-Bus message, used when the method call message could not be handled\n","sig":null,"attributes":[{"value":"/ This is a method return with error D-Bus message, used when the method call message could not be handled","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2578,"byte_end":2686,"line_start":17,"line_end":17,"column_start":5,"column_end":113}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1838},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2772,"byte_end":2778,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Signal","qualname":"::message::MessageType::Signal","value":"MessageType::Signal","parent":{"krate":0,"index":1828},"children":[],"decl_id":null,"docs":" This is a signal, usually sent to whoever wants to listen\n","sig":null,"attributes":[{"value":"/ This is a signal, usually sent to whoever wants to listen","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2706,"byte_end":2767,"line_start":19,"line_end":19,"column_start":5,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":1828},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2363,"byte_end":2374,"line_start":12,"line_end":12,"column_start":10,"column_end":21},"name":"MessageType","qualname":"::message::MessageType","value":"pub enum MessageType {\n\n    /// This is a method call D-Bus message\n    MethodCall = ,\n\n    /// This is a method return Ok D-Bus message, used when the method call message was successfully processed\n    MethodReturn = ,\n\n    /// This is a method return with error D-Bus message, used when the method call message could not be handled\n    Error = ,\n\n    /// This is a signal, usually sent to whoever wants to listen\n    Signal = ,\n}","parent":null,"children":[{"krate":0,"index":1829},{"krate":0,"index":1832},{"krate":0,"index":1835},{"krate":0,"index":1838}],"decl_id":null,"docs":" One of the four different message types.\n","sig":null,"attributes":[{"value":"/ One of the four different message types.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2309,"byte_end":2353,"line_start":11,"line_end":11,"column_start":1,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24298,"byte_end":24308,"line_start":30,"line_end":30,"column_start":11,"column_end":21},"name":"SignalArgs","qualname":"::message::signalargs::SignalArgs","value":"SignalArgs","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":54}],"decl_id":null,"docs":" Helper methods for structs representing a Signal","sig":null,"attributes":[{"value":"/ Helper methods for structs representing a Signal","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23491,"byte_end":23543,"line_start":6,"line_end":6,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23544,"byte_end":23547,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23548,"byte_end":23561,"line_start":8,"line_end":8,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23562,"byte_end":23565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Listen to InterfacesRemoved signal from org.bluez.obex.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23566,"byte_end":23625,"line_start":10,"line_end":10,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23626,"byte_end":23629,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust,no_run","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23630,"byte_end":23648,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ use dbus::blocking::Connection;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23649,"byte_end":23684,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"/ use dbus::message::SignalArgs;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23685,"byte_end":23719,"line_start":14,"line_end":14,"column_start":1,"column_end":35}},{"value":"/ use dbus::blocking::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved as IR;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23720,"byte_end":23812,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ use std::time::Duration;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23813,"byte_end":23841,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23842,"byte_end":23845,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23846,"byte_end":23893,"line_start":18,"line_end":18,"column_start":1,"column_end":48}},{"value":"/ // Add a match for this signal","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23894,"byte_end":23928,"line_start":19,"line_end":19,"column_start":1,"column_end":35}},{"value":"/ let mr = IR::match_rule(Some(&\"org.bluez.obex\".into()), None).static_clone();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":23929,"byte_end":24010,"line_start":20,"line_end":20,"column_start":1,"column_end":82}},{"value":"/ c.add_match(mr, |ir: IR, _, _| {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24011,"byte_end":24047,"line_start":21,"line_end":21,"column_start":1,"column_end":37}},{"value":"/      println!(\"Interfaces {:?} have been removed from bluez on path {}.\", ir.interfaces, ir.object);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24048,"byte_end":24152,"line_start":22,"line_end":22,"column_start":1,"column_end":105}},{"value":"/      true","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24153,"byte_end":24166,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24167,"byte_end":24174,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24175,"byte_end":24178,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ // Wait for the signal to arrive.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24179,"byte_end":24216,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/ loop { c.process(Duration::from_millis(1000)).unwrap(); }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24217,"byte_end":24278,"line_start":27,"line_end":27,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24279,"byte_end":24286,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Const","id":{"krate":0,"index":46},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24350,"byte_end":24354,"line_start":32,"line_end":32,"column_start":11,"column_end":15},"name":"NAME","qualname":"::message::signalargs::SignalArgs::NAME","value":"&'static str","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" D-Bus name of signal\n","sig":null,"attributes":[{"value":"/ D-Bus name of signal","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24315,"byte_end":24339,"line_start":31,"line_end":31,"column_start":5,"column_end":29}}]},{"kind":"Const","id":{"krate":0,"index":47},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24436,"byte_end":24445,"line_start":35,"line_end":35,"column_start":11,"column_end":20},"name":"INTERFACE","qualname":"::message::signalargs::SignalArgs::INTERFACE","value":"&'static str","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" D-Bus name of interface this signal belongs to\n","sig":null,"attributes":[{"value":"/ D-Bus name of interface this signal belongs to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24375,"byte_end":24425,"line_start":34,"line_end":34,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24518,"byte_end":24533,"line_start":38,"line_end":38,"column_start":8,"column_end":23},"name":"to_emit_message","qualname":"::message::signalargs::SignalArgs::to_emit_message","value":"pub fn to_emit_message(&Self, &Path) -> Message where Self: arg::AppendAll","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Returns a message that emits the signal.\n","sig":null,"attributes":[{"value":"/ Returns a message that emits the signal.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24466,"byte_end":24510,"line_start":37,"line_end":37,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":49},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25046,"byte_end":25058,"line_start":48,"line_end":48,"column_start":8,"column_end":20},"name":"from_message","qualname":"::message::signalargs::SignalArgs::from_message","value":"pub fn from_message(&Message) -> Option<Self> where Self: Sized + arg::ReadAll","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" If the message is a signal of the correct type, return its arguments, otherwise return None.","sig":null,"attributes":[{"value":"/ If the message is a signal of the correct type, return its arguments, otherwise return None.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24793,"byte_end":24889,"line_start":44,"line_end":44,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24894,"byte_end":24897,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This does not check sender and path of the message, which is likely relevant to you as well.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":24902,"byte_end":24998,"line_start":46,"line_end":46,"column_start":5,"column_end":101}},{"value":"allow(clippy :: if_same_then_else)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25003,"byte_end":25038,"line_start":47,"line_end":47,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":52},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25572,"byte_end":25582,"line_start":60,"line_end":60,"column_start":8,"column_end":18},"name":"match_rule","qualname":"::message::signalargs::SignalArgs::match_rule","value":"pub fn match_rule<'a>(Option<&'a BusName>, Option<&'a Path>) -> MatchRule","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Returns a match rule matching this signal.","sig":null,"attributes":[{"value":"/ Returns a match rule matching this signal.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25437,"byte_end":25483,"line_start":57,"line_end":57,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25488,"byte_end":25491,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ If sender and/or path is None, matches all senders and/or paths.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25496,"byte_end":25564,"line_start":59,"line_end":59,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":26098,"byte_end":26107,"line_start":74,"line_end":74,"column_start":8,"column_end":17},"name":"match_str","qualname":"::message::signalargs::SignalArgs::match_str","value":"pub fn match_str(Option<&BusName>, Option<&Path>) -> String","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Returns a string that can be sent to `Connection::add_match`.","sig":null,"attributes":[{"value":"/ Returns a string that can be sent to `Connection::add_match`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":25944,"byte_end":26009,"line_start":71,"line_end":71,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":26014,"byte_end":26017,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ If sender and/or path is None, matches all senders and/or paths.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/signalargs.rs","byte_start":26022,"byte_end":26090,"line_start":73,"line_end":73,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":1859},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27520,"byte_end":27529,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"MatchRule","qualname":"::message::matchrule::MatchRule","value":"MatchRule { msg_type, sender, strict_sender, path, path_is_namespace, interface, member, eavesdrop }","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862},{"krate":0,"index":1863},{"krate":0,"index":1864},{"krate":0,"index":1865},{"krate":0,"index":1866},{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869}],"decl_id":null,"docs":" A \"match rule\", that can match Messages on its headers.","sig":null,"attributes":[{"value":"/ A \"match rule\", that can match Messages on its headers.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27337,"byte_end":27396,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27397,"byte_end":27400,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A field set to \"None\" means no filter for that header,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27401,"byte_end":27459,"line_start":7,"line_end":7,"column_start":1,"column_end":59}},{"value":"/ a field set to \"Some(_)\" must match exactly.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27460,"byte_end":27508,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":1861},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27606,"byte_end":27614,"line_start":11,"line_end":11,"column_start":9,"column_end":17},"name":"msg_type","qualname":"::message::matchrule::MatchRule::msg_type","value":"std::option::Option<message::MessageType>","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Match on message type (you typically want to do this)\n","sig":null,"attributes":[{"value":"/ Match on message type (you typically want to do this)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27540,"byte_end":27597,"line_start":10,"line_end":10,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":1862},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27677,"byte_end":27683,"line_start":13,"line_end":13,"column_start":9,"column_end":15},"name":"sender","qualname":"::message::matchrule::MatchRule::sender","value":"std::option::Option<strings::BusName<'a>>","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Match on message sender\n","sig":null,"attributes":[{"value":"/ Match on message sender","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27641,"byte_end":27668,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":1863},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27841,"byte_end":27854,"line_start":15,"line_end":15,"column_start":9,"column_end":22},"name":"strict_sender","qualname":"::message::matchrule::MatchRule::strict_sender","value":"bool","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" If false (the default), match if sender could possibly match, due to mismatch between unique names and taken bus names\n","sig":null,"attributes":[{"value":"/ If false (the default), match if sender could possibly match, due to mismatch between unique names and taken bus names","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27710,"byte_end":27832,"line_start":14,"line_end":14,"column_start":5,"column_end":127}}]},{"kind":"Field","id":{"krate":0,"index":1864},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27907,"byte_end":27911,"line_start":17,"line_end":17,"column_start":9,"column_end":13},"name":"path","qualname":"::message::matchrule::MatchRule::path","value":"std::option::Option<strings::Path<'a>>","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Match on message object path\n","sig":null,"attributes":[{"value":"/ Match on message object path","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27866,"byte_end":27898,"line_start":16,"line_end":16,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":1865},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28039,"byte_end":28056,"line_start":19,"line_end":19,"column_start":9,"column_end":26},"name":"path_is_namespace","qualname":"::message::matchrule::MatchRule::path_is_namespace","value":"bool","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" If true, will match all subpaths to the path as well as the path itself. Defaults to false.\n","sig":null,"attributes":[{"value":"/ If true, will match all subpaths to the path as well as the path itself. Defaults to false.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":27935,"byte_end":28030,"line_start":18,"line_end":18,"column_start":5,"column_end":100}}]},{"kind":"Field","id":{"krate":0,"index":1866},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28107,"byte_end":28116,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"name":"interface","qualname":"::message::matchrule::MatchRule::interface","value":"std::option::Option<strings::Interface<'a>>","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Match on message interface\n","sig":null,"attributes":[{"value":"/ Match on message interface","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28068,"byte_end":28098,"line_start":20,"line_end":20,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":1867},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28205,"byte_end":28211,"line_start":23,"line_end":23,"column_start":9,"column_end":15},"name":"member","qualname":"::message::matchrule::MatchRule::member","value":"std::option::Option<strings::Member<'a>>","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" Match on message member (signal or method name)\n","sig":null,"attributes":[{"value":"/ Match on message member (signal or method name)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28145,"byte_end":28196,"line_start":22,"line_end":22,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":1868},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28320,"byte_end":28329,"line_start":25,"line_end":25,"column_start":9,"column_end":18},"name":"eavesdrop","qualname":"::message::matchrule::MatchRule::eavesdrop","value":"bool","parent":{"krate":0,"index":1859},"children":[],"decl_id":null,"docs":" If true, also receive messages not intended for us. Defaults to false.\n","sig":null,"attributes":[{"value":"/ If true, also receive messages not intended for us. Defaults to false.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28237,"byte_end":28311,"line_start":24,"line_end":24,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":69},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28712,"byte_end":28721,"line_start":42,"line_end":42,"column_start":12,"column_end":21},"name":"match_str","qualname":"<MatchRule>::match_str","value":"pub fn match_str(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Make a string which you can use in the call to \"add_match\".\n","sig":null,"attributes":[{"value":"/ Make a string which you can use in the call to \"add_match\".","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28637,"byte_end":28700,"line_start":41,"line_end":41,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":30044,"byte_end":30051,"line_start":71,"line_end":71,"column_start":12,"column_end":19},"name":"matches","qualname":"<MatchRule>::matches","value":"pub fn matches(&Self, &Message) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether or not the message matches the rule.\n","sig":null,"attributes":[{"value":"/ Returns whether or not the message matches the rule.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":29976,"byte_end":30032,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":30783,"byte_end":30786,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"new","qualname":"<MatchRule>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches every message.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches every message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":30719,"byte_end":30771,"line_start":86,"line_end":86,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":30910,"byte_end":30925,"line_start":90,"line_end":90,"column_start":12,"column_end":27},"name":"new_method_call","qualname":"<MatchRule>::new_method_call","value":"pub fn new_method_call() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches every incoming method call message.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches every incoming method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":30825,"byte_end":30898,"line_start":89,"line_end":89,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":31135,"byte_end":31145,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"new_signal","qualname":"<MatchRule>::new_signal","value":"pub fn new_signal<I: Into<Interface>, N: Into<Member>>(I, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new struct which matches signals on the interface and member name.\n","sig":null,"attributes":[{"value":"/ Create a new struct which matches signals on the interface and member name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":31044,"byte_end":31123,"line_start":96,"line_end":96,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":31459,"byte_end":31471,"line_start":106,"line_end":106,"column_start":12,"column_end":24},"name":"static_clone","qualname":"<MatchRule>::static_clone","value":"pub fn static_clone(&Self) -> MatchRule","parent":null,"children":[],"decl_id":null,"docs":" Returns a clone with no borrowed references\n","sig":null,"attributes":[{"value":"/ Returns a clone with no borrowed references","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":31400,"byte_end":31447,"line_start":105,"line_end":105,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":84},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3042,"byte_end":3049,"line_start":32,"line_end":32,"column_start":12,"column_end":19},"name":"Message","qualname":"::message::Message","value":"Message {  }","parent":null,"children":[{"krate":0,"index":85}],"decl_id":null,"docs":" A D-Bus message. A message contains headers - usually destination address, path, interface and member,\n and a list of arguments.\n","sig":null,"attributes":[{"value":"/ A D-Bus message. A message contains headers - usually destination address, path, interface and member,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":2895,"byte_end":3001,"line_start":30,"line_end":30,"column_start":1,"column_end":107}},{"value":"/ and a list of arguments.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3002,"byte_end":3030,"line_start":31,"line_end":31,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3189,"byte_end":3204,"line_start":40,"line_end":40,"column_start":12,"column_end":27},"name":"new_method_call","qualname":"<Message>::new_method_call","value":"pub fn new_method_call<'d, 'p, 'i, 'm, D, P, I, M>(D, P, I, M)\n-> Result<Message, String> where D: Into<BusName>, P: Into<Path>,\nI: Into<Interface>, M: Into<Member>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3139,"byte_end":3177,"line_start":39,"line_end":39,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3841,"byte_end":3852,"line_start":52,"line_end":52,"column_start":12,"column_end":23},"name":"method_call","qualname":"<Message>::method_call","value":"pub fn method_call(&BusName, &Path, &Interface, &Member) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3791,"byte_end":3829,"line_start":51,"line_end":51,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":4302,"byte_end":4316,"line_start":63,"line_end":63,"column_start":12,"column_end":26},"name":"call_with_args","qualname":"<Message>::call_with_args","value":"pub fn call_with_args<'d, 'p, 'i, 'm, A, D, P, I, M>(D, P, I, M, A) -> Message\nwhere D: Into<BusName>, P: Into<Path>, I: Into<Interface>, M: Into<Member>,\nA: AppendAll","parent":null,"children":[],"decl_id":null,"docs":" Creates a new method call message.\n","sig":null,"attributes":[{"value":"/ Creates a new method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":4252,"byte_end":4290,"line_start":62,"line_end":62,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":4733,"byte_end":4743,"line_start":71,"line_end":71,"column_start":12,"column_end":22},"name":"new_signal","qualname":"<Message>::new_signal","value":"pub fn new_signal<P, I, M>(P, I, M) -> Result<Message, String> where\nP: Into<String>, I: Into<String>, M: Into<String>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signal message.\n","sig":null,"attributes":[{"value":"/ Creates a new signal message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":4688,"byte_end":4721,"line_start":70,"line_end":70,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5302,"byte_end":5308,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"signal","qualname":"<Message>::signal","value":"pub fn signal(&Path, &Interface, &Member) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new signal message.\n","sig":null,"attributes":[{"value":"/ Creates a new signal message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5257,"byte_end":5290,"line_start":86,"line_end":86,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5697,"byte_end":5714,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"new_method_return","qualname":"<Message>::new_method_return","value":"pub fn new_method_return(&Message) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Creates a method reply for this method call.\n","sig":null,"attributes":[{"value":"/ Creates a method reply for this method call.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5637,"byte_end":5685,"line_start":96,"line_end":96,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5972,"byte_end":5985,"line_start":103,"line_end":103,"column_start":12,"column_end":25},"name":"method_return","qualname":"<Message>::method_return","value":"pub fn method_return(&Self) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a method return (reply) for this method call.\n","sig":null,"attributes":[{"value":"/ Creates a method return (reply) for this method call.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":5903,"byte_end":5960,"line_start":102,"line_end":102,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6343,"byte_end":6359,"line_start":112,"line_end":112,"column_start":12,"column_end":28},"name":"return_with_args","qualname":"<Message>::return_with_args","value":"pub fn return_with_args<A: AppendAll>(&Self, A) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a reply for a method call message.","sig":null,"attributes":[{"value":"/ Creates a reply for a method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6210,"byte_end":6256,"line_start":109,"line_end":109,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6261,"byte_end":6264,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ Panics if called for a message which is not a method call.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6269,"byte_end":6331,"line_start":111,"line_end":111,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6535,"byte_end":6540,"line_start":119,"line_end":119,"column_start":12,"column_end":17},"name":"error","qualname":"<Message>::error","value":"pub fn error(&Self, &ErrorName, &CStr) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates a new error reply\n","sig":null,"attributes":[{"value":"/ Creates a new error reply","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6494,"byte_end":6523,"line_start":118,"line_end":118,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7067,"byte_end":7076,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"get_items","qualname":"<Message>::get_items","value":"pub fn get_items(&Self) -> Vec<crate::arg::messageitem::MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get the MessageItems that make up the message.","sig":null,"attributes":[{"value":"/ Get the MessageItems that make up the message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6841,"byte_end":6891,"line_start":125,"line_end":125,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6896,"byte_end":6899,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ Note: use `iter_init` or `get1`/`get2`/etc instead for faster access to the arguments.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6904,"byte_end":6994,"line_start":127,"line_end":127,"column_start":5,"column_end":95}},{"value":"/ This method is provided for backwards compatibility.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":6999,"byte_end":7055,"line_start":128,"line_end":128,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7393,"byte_end":7403,"line_start":137,"line_end":137,"column_start":12,"column_end":22},"name":"get_serial","qualname":"<Message>::get_serial","value":"pub fn get_serial(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the D-Bus serial of a message, if one was specified.\n","sig":null,"attributes":[{"value":"/ Get the D-Bus serial of a message, if one was specified.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7321,"byte_end":7381,"line_start":136,"line_end":136,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":120},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7635,"byte_end":7651,"line_start":143,"line_end":143,"column_start":12,"column_end":28},"name":"get_reply_serial","qualname":"<Message>::get_reply_serial","value":"pub fn get_reply_serial(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Get the serial of the message this message is a reply to, if present.\n","sig":null,"attributes":[{"value":"/ Get the serial of the message this message is a reply to, if present.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7550,"byte_end":7623,"line_start":142,"line_end":142,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7872,"byte_end":7884,"line_start":149,"line_end":149,"column_start":12,"column_end":24},"name":"get_no_reply","qualname":"<Message>::get_no_reply","value":"pub fn get_no_reply(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message does not expect a reply.\n","sig":null,"attributes":[{"value":"/ Returns true if the message does not expect a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7804,"byte_end":7860,"line_start":148,"line_end":148,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8108,"byte_end":8120,"line_start":154,"line_end":154,"column_start":12,"column_end":24},"name":"set_no_reply","qualname":"<Message>::set_no_reply","value":"pub fn set_no_reply(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Set whether or not the message expects a reply.","sig":null,"attributes":[{"value":"/ Set whether or not the message expects a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":7966,"byte_end":8017,"line_start":151,"line_end":151,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8022,"byte_end":8025,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Set to true if you send a method call and do not want a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8030,"byte_end":8096,"line_start":153,"line_end":153,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8320,"byte_end":8334,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"get_auto_start","qualname":"<Message>::get_auto_start","value":"pub fn get_auto_start(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the message can cause a service to be auto-started.\n","sig":null,"attributes":[{"value":"/ Returns true if the message can cause a service to be auto-started.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8237,"byte_end":8308,"line_start":158,"line_end":158,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8539,"byte_end":8553,"line_start":164,"line_end":164,"column_start":12,"column_end":26},"name":"set_auto_start","qualname":"<Message>::set_auto_start","value":"pub fn set_auto_start(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Sets whether or not the message can cause a service to be auto-started.","sig":null,"attributes":[{"value":"/ Sets whether or not the message can cause a service to be auto-started.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8418,"byte_end":8493,"line_start":161,"line_end":161,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8498,"byte_end":8501,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ Defaults to true.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8506,"byte_end":8527,"line_start":163,"line_end":163,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8902,"byte_end":8914,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"append_items","qualname":"<Message>::append_items","value":"pub fn append_items(&mut Self, &[crate::arg::messageitem::MessageItem])","parent":null,"children":[],"decl_id":null,"docs":" Add one or more MessageItems to this Message.","sig":null,"attributes":[{"value":"/ Add one or more MessageItems to this Message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8672,"byte_end":8721,"line_start":168,"line_end":168,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8726,"byte_end":8729,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Note: using `append1`, `append2` or `append3` might be faster, especially for large arrays.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8734,"byte_end":8829,"line_start":170,"line_end":170,"column_start":5,"column_end":100}},{"value":"/ This method is provided for backwards compatibility.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":8834,"byte_end":8890,"line_start":171,"line_end":171,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9197,"byte_end":9204,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"append1","qualname":"<Message>::append1","value":"pub fn append1<A: Append>(Self, A) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends one argument to this message.\n Use in builder style: e g `m.method_return().append1(7i32)`\n","sig":null,"attributes":[{"value":"/ Appends one argument to this message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9076,"byte_end":9117,"line_start":177,"line_end":177,"column_start":5,"column_end":46}},{"value":"/ Use in builder style: e g `m.method_return().append1(7i32)`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9122,"byte_end":9185,"line_start":178,"line_end":178,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9490,"byte_end":9497,"line_start":189,"line_end":189,"column_start":12,"column_end":19},"name":"append2","qualname":"<Message>::append2","value":"pub fn append2<A1: Append, A2: Append>(Self, A1, A2) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends two arguments to this message.\n Use in builder style: e g `m.method_return().append2(7i32, 6u8)`\n","sig":null,"attributes":[{"value":"/ Appends two arguments to this message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9363,"byte_end":9405,"line_start":187,"line_end":187,"column_start":5,"column_end":47}},{"value":"/ Use in builder style: e g `m.method_return().append2(7i32, 6u8)`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9410,"byte_end":9478,"line_start":188,"line_end":188,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9829,"byte_end":9836,"line_start":199,"line_end":199,"column_start":12,"column_end":19},"name":"append3","qualname":"<Message>::append3","value":"pub fn append3<A1: Append, A2: Append, A3: Append>(Self, A1, A2, A3) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends three arguments to this message.\n Use in builder style: e g `m.method_return().append3(7i32, 6u8, true)`\n","sig":null,"attributes":[{"value":"/ Appends three arguments to this message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9694,"byte_end":9738,"line_start":197,"line_end":197,"column_start":5,"column_end":49}},{"value":"/ Use in builder style: e g `m.method_return().append3(7i32, 6u8, true)`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":9743,"byte_end":9817,"line_start":198,"line_end":198,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10200,"byte_end":10210,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"append_ref","qualname":"<Message>::append_ref","value":"pub fn append_ref<A: RefArg>(Self, &[A]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Appends RefArgs to this message.\n Use in builder style: e g `m.method_return().append_ref(&[7i32, 6u8, true])`\n","sig":null,"attributes":[{"value":"/ Appends RefArgs to this message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10067,"byte_end":10103,"line_start":207,"line_end":207,"column_start":5,"column_end":41}},{"value":"/ Use in builder style: e g `m.method_return().append_ref(&[7i32, 6u8, true])`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10108,"byte_end":10188,"line_start":208,"line_end":208,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10469,"byte_end":10479,"line_start":220,"line_end":220,"column_start":12,"column_end":22},"name":"append_all","qualname":"<Message>::append_all","value":"pub fn append_all<A: AppendAll>(&mut Self, A)","parent":null,"children":[],"decl_id":null,"docs":" Appends arguments to a message.\n","sig":null,"attributes":[{"value":"/ Appends arguments to a message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10422,"byte_end":10457,"line_start":219,"line_end":219,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10763,"byte_end":10767,"line_start":227,"line_end":227,"column_start":12,"column_end":16},"name":"get1","qualname":"<Message>::get1","value":"pub fn get1<'a, G1: Get>(&'a Self) -> Option<G1>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first argument from the message, if that argument is of type G1.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first argument from the message, if that argument is of type G1.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10593,"byte_end":10670,"line_start":225,"line_end":225,"column_start":5,"column_end":82}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10675,"byte_end":10751,"line_start":226,"line_end":226,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11061,"byte_end":11065,"line_start":234,"line_end":234,"column_start":12,"column_end":16},"name":"get2","qualname":"<Message>::get2","value":"pub fn get2<'a, G1: Get, G2: Get>(&'a Self) -> (Option<G1>, Option<G2>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first two arguments from the message, if those arguments are of type G1 and G2.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first two arguments from the message, if those arguments are of type G1 and G2.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10876,"byte_end":10968,"line_start":232,"line_end":232,"column_start":5,"column_end":97}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":10973,"byte_end":11049,"line_start":233,"line_end":233,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11468,"byte_end":11472,"line_start":243,"line_end":243,"column_start":12,"column_end":16},"name":"get3","qualname":"<Message>::get3","value":"pub fn get3<'a, G1: Get, G2: Get, G3: Get>(&'a Self)\n-> (Option<G1>, Option<G2>, Option<G3>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11277,"byte_end":11375,"line_start":241,"line_end":241,"column_start":5,"column_end":103}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11380,"byte_end":11456,"line_start":242,"line_end":242,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":151},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11985,"byte_end":11989,"line_start":254,"line_end":254,"column_start":12,"column_end":16},"name":"get4","qualname":"<Message>::get4","value":"pub fn get4<'a, G1: Get, G2: Get, G3: Get, G4: Get>(&'a Self)\n-> (Option<G1>, Option<G2>, Option<G3>, Option<G4>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.\n Returns None if there are not enough arguments, or if types don't match.\n","sig":null,"attributes":[{"value":"/ Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11791,"byte_end":11892,"line_start":252,"line_end":252,"column_start":5,"column_end":106}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":11897,"byte_end":11973,"line_start":253,"line_end":253,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":157},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":12697,"byte_end":12701,"line_start":268,"line_end":268,"column_start":12,"column_end":16},"name":"get5","qualname":"<Message>::get5","value":"pub fn get5<'a, G1: Get, G2: Get, G3: Get, G4: Get, G5: Get>(&'a Self)\n-> (Option<G1>, Option<G2>, Option<G3>, Option<G4>, Option<G5>)","parent":null,"children":[],"decl_id":null,"docs":" Gets the first five arguments from the message, if those arguments are of type G1, G2, G3 and G4.\n Returns None if there are not enough arguments, or if types don't match.\n Note: If you need more than five arguments, use `iter_init` instead.\n","sig":null,"attributes":[{"value":"/ Gets the first five arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":12426,"byte_end":12527,"line_start":265,"line_end":265,"column_start":5,"column_end":106}},{"value":"/ Returns None if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":12532,"byte_end":12608,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ Note: If you need more than five arguments, use `iter_init` instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":12613,"byte_end":12685,"line_start":267,"line_end":267,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13459,"byte_end":13464,"line_start":284,"line_end":284,"column_start":12,"column_end":17},"name":"read1","qualname":"<Message>::read1","value":"pub fn read1<'a, G1: Arg + Get>(&'a Self) -> Result<G1, TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first argument from the message, if that argument is of type G1.","sig":null,"attributes":[{"value":"/ Gets the first argument from the message, if that argument is of type G1.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13266,"byte_end":13343,"line_start":281,"line_end":281,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13348,"byte_end":13351,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13356,"byte_end":13447,"line_start":283,"line_end":283,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13807,"byte_end":13812,"line_start":292,"line_end":292,"column_start":12,"column_end":17},"name":"read2","qualname":"<Message>::read2","value":"pub fn read2<'a, G1: Arg + Get, G2: Arg + Get>(&'a Self)\n-> Result<(G1, G2), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first two arguments from the message, if those arguments are of type G1 and G2.","sig":null,"attributes":[{"value":"/ Gets the first two arguments from the message, if those arguments are of type G1 and G2.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13599,"byte_end":13691,"line_start":289,"line_end":289,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13696,"byte_end":13699,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13704,"byte_end":13795,"line_start":291,"line_end":291,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14204,"byte_end":14209,"line_start":300,"line_end":300,"column_start":12,"column_end":17},"name":"read3","qualname":"<Message>::read3","value":"pub fn read3<'a, G1: Arg + Get, G2: Arg + Get, G3: Arg + Get>(&'a Self)\n-> Result<(G1, G2, G3), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","sig":null,"attributes":[{"value":"/ Gets the first three arguments from the message, if those arguments are of type G1, G2 and G3.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":13990,"byte_end":14088,"line_start":297,"line_end":297,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14093,"byte_end":14096,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14101,"byte_end":14192,"line_start":299,"line_end":299,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14646,"byte_end":14651,"line_start":309,"line_end":309,"column_start":12,"column_end":17},"name":"read4","qualname":"<Message>::read4","value":"pub fn read4<'a, G1: Arg + Get, G2: Arg + Get, G3: Arg + Get, G4: Arg +\n             Get>(&'a Self) -> Result<(G1, G2, G3, G4), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","sig":null,"attributes":[{"value":"/ Gets the first four arguments from the message, if those arguments are of type G1, G2, G3 and G4.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14429,"byte_end":14530,"line_start":306,"line_end":306,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14535,"byte_end":14538,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14543,"byte_end":14634,"line_start":308,"line_end":308,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15203,"byte_end":15208,"line_start":319,"line_end":319,"column_start":12,"column_end":17},"name":"read5","qualname":"<Message>::read5","value":"pub fn read5<'a, G1: Arg + Get, G2: Arg + Get, G3: Arg + Get, G4: Arg + Get,\n             G5: Arg + Get>(&'a Self)\n-> Result<(G1, G2, G3, G4, G5), TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Gets the first five arguments from the message, if those arguments are of type G1, G2, G3, G4 and G5.","sig":null,"attributes":[{"value":"/ Gets the first five arguments from the message, if those arguments are of type G1, G2, G3, G4 and G5.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":14905,"byte_end":15010,"line_start":315,"line_end":315,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15015,"byte_end":15018,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ Returns a TypeMismatchError if there are not enough arguments, or if types don't match.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15023,"byte_end":15114,"line_start":317,"line_end":317,"column_start":5,"column_end":96}},{"value":"/ Note: If you need more than five arguments, use `iter_init` instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15119,"byte_end":15191,"line_start":318,"line_end":318,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15629,"byte_end":15637,"line_start":328,"line_end":328,"column_start":12,"column_end":20},"name":"read_all","qualname":"<Message>::read_all","value":"pub fn read_all<R: ReadAll>(&Self) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Gets arguments from a message.","sig":null,"attributes":[{"value":"/ Gets arguments from a message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15496,"byte_end":15530,"line_start":325,"line_end":325,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15535,"byte_end":15538,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ If this was an error reply or if types mismatch, an error is returned.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15543,"byte_end":15617,"line_start":327,"line_end":327,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15871,"byte_end":15880,"line_start":334,"line_end":334,"column_start":12,"column_end":21},"name":"iter_init","qualname":"<Message>::iter_init","value":"pub fn iter_init(&Self) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Returns a struct for retreiving the arguments from a message. Supersedes get_items().\n","sig":null,"attributes":[{"value":"/ Returns a struct for retreiving the arguments from a message. Supersedes get_items().","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15770,"byte_end":15859,"line_start":333,"line_end":333,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15974,"byte_end":15982,"line_start":337,"line_end":337,"column_start":12,"column_end":20},"name":"msg_type","qualname":"<Message>::msg_type","value":"pub fn msg_type(&Self) -> MessageType","parent":null,"children":[],"decl_id":null,"docs":" Gets the MessageType of the Message.\n","sig":null,"attributes":[{"value":"/ Gets the MessageType of the Message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":15922,"byte_end":15962,"line_start":336,"line_end":336,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":195},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":16619,"byte_end":16625,"line_start":354,"line_end":354,"column_start":12,"column_end":18},"name":"sender","qualname":"<Message>::sender","value":"pub fn sender(&Self) -> Option<BusName>","parent":null,"children":[],"decl_id":null,"docs":" Gets the name of the connection that originated this message.\n","sig":null,"attributes":[{"value":"/ Gets the name of the connection that originated this message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":16542,"byte_end":16607,"line_start":353,"line_end":353,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":16879,"byte_end":16883,"line_start":360,"line_end":360,"column_start":12,"column_end":16},"name":"path","qualname":"<Message>::path","value":"pub fn path(&Self) -> Option<Path>","parent":null,"children":[],"decl_id":null,"docs":" Gets the object path this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the object path this Message is being sent to.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":16812,"byte_end":16867,"line_start":359,"line_end":359,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17129,"byte_end":17140,"line_start":366,"line_end":366,"column_start":12,"column_end":23},"name":"destination","qualname":"<Message>::destination","value":"pub fn destination(&Self) -> Option<BusName>","parent":null,"children":[],"decl_id":null,"docs":" Gets the destination this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the destination this Message is being sent to.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17062,"byte_end":17117,"line_start":365,"line_end":365,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17468,"byte_end":17483,"line_start":374,"line_end":374,"column_start":12,"column_end":27},"name":"set_destination","qualname":"<Message>::set_destination","value":"pub fn set_destination(&mut Self, Option<BusName>)","parent":null,"children":[],"decl_id":null,"docs":" Sets the destination of this Message","sig":null,"attributes":[{"value":"/ Sets the destination of this Message","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17332,"byte_end":17372,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17377,"byte_end":17380,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If dest is none, that means broadcast to all relevant destinations.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17385,"byte_end":17456,"line_start":373,"line_end":373,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17771,"byte_end":17780,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"interface","qualname":"<Message>::interface","value":"pub fn interface(&Self) -> Option<Interface>","parent":null,"children":[],"decl_id":null,"docs":" Gets the interface this Message is being sent to.\n","sig":null,"attributes":[{"value":"/ Gets the interface this Message is being sent to.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17706,"byte_end":17759,"line_start":379,"line_end":379,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18029,"byte_end":18035,"line_start":386,"line_end":386,"column_start":12,"column_end":18},"name":"member","qualname":"<Message>::member","value":"pub fn member(&Self) -> Option<Member>","parent":null,"children":[],"decl_id":null,"docs":" Gets the interface member being called.\n","sig":null,"attributes":[{"value":"/ Gets the interface member being called.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":17974,"byte_end":18017,"line_start":385,"line_end":385,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":207},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18457,"byte_end":18466,"line_start":395,"line_end":395,"column_start":12,"column_end":21},"name":"as_result","qualname":"<Message>::as_result","value":"pub fn as_result(&mut Self) -> Result<&mut Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" When the remote end returns an error, the message itself is\n correct but its contents is an error. This method will\n transform such an error to a D-Bus Error or otherwise return\n the original message.\n","sig":null,"attributes":[{"value":"/ When the remote end returns an error, the message itself is","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18220,"byte_end":18283,"line_start":391,"line_end":391,"column_start":5,"column_end":68}},{"value":"/ correct but its contents is an error. This method will","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18288,"byte_end":18346,"line_start":392,"line_end":392,"column_start":5,"column_end":63}},{"value":"/ transform such an error to a D-Bus Error or otherwise return","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18351,"byte_end":18415,"line_start":393,"line_end":393,"column_start":5,"column_end":69}},{"value":"/ the original message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":18420,"byte_end":18445,"line_start":394,"line_end":394,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19459,"byte_end":19469,"line_start":419,"line_end":419,"column_start":12,"column_end":22},"name":"set_serial","qualname":"<Message>::set_serial","value":"pub fn set_serial(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets serial number manually - mostly for internal use","sig":null,"attributes":[{"value":"/ Sets serial number manually - mostly for internal use","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19070,"byte_end":19127,"line_start":414,"line_end":414,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19132,"byte_end":19135,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ When sending a message, a serial will be automatically assigned, so you don't need to call","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19140,"byte_end":19234,"line_start":416,"line_end":416,"column_start":5,"column_end":99}},{"value":"/ this method. However, it can be very useful in test code that is supposed to handle a method call.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19239,"byte_end":19341,"line_start":417,"line_end":417,"column_start":5,"column_end":107}},{"value":"/ This way, you can create a method call and handle it without sending it to a real D-Bus instance.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19346,"byte_end":19447,"line_start":418,"line_end":418,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19824,"byte_end":19831,"line_start":427,"line_end":427,"column_start":12,"column_end":19},"name":"marshal","qualname":"<Message>::marshal","value":"pub fn marshal<E, F: FnMut(&[u8]) -> Result<(), E>>(&Self, F) -> Result<(), E>","parent":null,"children":[],"decl_id":null,"docs":" Marshals a message - mostly for internal use","sig":null,"attributes":[{"value":"/ Marshals a message - mostly for internal use","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19568,"byte_end":19616,"line_start":423,"line_end":423,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19621,"byte_end":19624,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The function f will be called one or more times with bytes to be written somewhere.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19629,"byte_end":19716,"line_start":425,"line_end":425,"column_start":5,"column_end":92}},{"value":"/ You should call set_serial to manually set a serial number before calling this function","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":19721,"byte_end":19812,"line_start":426,"line_end":426,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20358,"byte_end":20367,"line_start":440,"line_end":440,"column_start":12,"column_end":21},"name":"demarshal","qualname":"<Message>::demarshal","value":"pub fn demarshal(&[u8]) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Demarshals a message - mostly for internal use\n","sig":null,"attributes":[{"value":"/ Demarshals a message - mostly for internal use","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20296,"byte_end":20346,"line_start":439,"line_end":439,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20899,"byte_end":20921,"line_start":454,"line_end":454,"column_start":12,"column_end":34},"name":"demarshal_bytes_needed","qualname":"<Message>::demarshal_bytes_needed","value":"pub fn demarshal_bytes_needed(&[u8]) -> Result<usize, ()>","parent":null,"children":[],"decl_id":null,"docs":" Returns the size of the message - mostly for internal use","sig":null,"attributes":[{"value":"/ Returns the size of the message - mostly for internal use","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20687,"byte_end":20748,"line_start":450,"line_end":450,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20753,"byte_end":20756,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ Returns Err(()) on protocol errors. Make sure you have at least 16 bytes in the buffer","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20761,"byte_end":20851,"line_start":452,"line_end":452,"column_start":5,"column_end":95}},{"value":"/ before calling this method.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":20856,"byte_end":20887,"line_start":453,"line_end":453,"column_start":5,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":223},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ffidisp","qualname":"::ffidisp","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":4560},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240},{"krate":0,"index":322},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":1911},{"krate":0,"index":1922},{"krate":0,"index":1918},{"krate":0,"index":448},{"krate":0,"index":467},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":471},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":1979},{"krate":0,"index":2002},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1994},{"krate":0,"index":1992},{"krate":0,"index":1991},{"krate":0,"index":1989},{"krate":0,"index":515},{"krate":0,"index":2004},{"krate":0,"index":2016},{"krate":0,"index":517},{"krate":0,"index":2018},{"krate":0,"index":2029},{"krate":0,"index":2027},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":2031},{"krate":0,"index":2037},{"krate":0,"index":2035},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":530}],"decl_id":null,"docs":" A connection that uses FFI callbacks to dispatch messages.","sig":null,"attributes":[{"value":"/ A connection that uses FFI callbacks to dispatch messages.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32061,"byte_end":32123,"line_start":1,"line_end":1,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32124,"byte_end":32127,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This is the legacy design used up to 0.6.x. It is not recommended for new development.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32128,"byte_end":32218,"line_start":3,"line_end":3,"column_start":1,"column_end":91}}]},{"kind":"Mod","id":{"krate":0,"index":240},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stdintf","qualname":"::ffidisp::stdintf","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"decl_id":null,"docs":" This module contains some standard interfaces and an easy way to call them.","sig":null,"attributes":[{"value":"/ This module contains some standard interfaces and an easy way to call them.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43423,"byte_end":43502,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43503,"byte_end":43506,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ See the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces) for more information about these standard interfaces.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43507,"byte_end":43672,"line_start":3,"line_end":3,"column_start":1,"column_end":166}},{"value":"/ ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43673,"byte_end":43677,"line_start":4,"line_end":4,"column_start":1,"column_end":5}},{"value":"/ The code here was originally created by dbus-codegen.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43678,"byte_end":43735,"line_start":5,"line_end":5,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43736,"byte_end":43739,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43740,"byte_end":43753,"line_start":7,"line_end":7,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43754,"byte_end":43761,"line_start":8,"line_end":8,"column_start":1,"column_end":8}},{"value":"/ use dbus::ffidisp::{Connection, BusType};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43762,"byte_end":43807,"line_start":9,"line_end":9,"column_start":1,"column_end":46}},{"value":"/ use dbus::ffidisp::stdintf::org_freedesktop_dbus::Introspectable;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43808,"byte_end":43877,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ let c = Connection::get_private(BusType::Session).unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43878,"byte_end":43941,"line_start":11,"line_end":11,"column_start":1,"column_end":64}},{"value":"/ let p = c.with_path(\"org.freedesktop.DBus\", \"/\", 10000);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":43942,"byte_end":44002,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/ println!(\"Introspection XML: {}\", p.introspect().unwrap());","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44003,"byte_end":44066,"line_start":13,"line_end":13,"column_start":1,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44067,"byte_end":44074,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44075,"byte_end":44078,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"allow(missing_docs)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44080,"byte_end":44103,"line_start":17,"line_end":17,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":245},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44439,"byte_end":44459,"line_start":27,"line_end":27,"column_start":9,"column_end":29},"name":"org_freedesktop_dbus","qualname":"::ffidisp::stdintf::org_freedesktop_dbus","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","parent":null,"children":[{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":250},{"krate":0,"index":253},{"krate":0,"index":259},{"krate":0,"index":267},{"krate":0,"index":1879},{"krate":0,"index":1885},{"krate":0,"index":1883},{"krate":0,"index":280},{"krate":0,"index":282},{"krate":0,"index":284},{"krate":0,"index":287},{"krate":0,"index":290},{"krate":0,"index":1887},{"krate":0,"index":1892},{"krate":0,"index":1890},{"krate":0,"index":296},{"krate":0,"index":298},{"krate":0,"index":300},{"krate":0,"index":1894},{"krate":0,"index":1899},{"krate":0,"index":1897},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307},{"krate":0,"index":310},{"krate":0,"index":314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":250},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44670,"byte_end":44684,"line_start":32,"line_end":32,"column_start":11,"column_end":25},"name":"Introspectable","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable","value":"Introspectable","parent":null,"children":[{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Method of the [org.freedesktop.DBus.Introspectable](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-introspectable) interface.\n","sig":null,"attributes":[{"value":"/ Method of the [org.freedesktop.DBus.Introspectable](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-introspectable) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44500,"byte_end":44659,"line_start":31,"line_end":31,"column_start":1,"column_end":160}}]},{"kind":"Type","id":{"krate":0,"index":251},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44696,"byte_end":44699,"line_start":33,"line_end":33,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable::Err","value":"type Err;","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44708,"byte_end":44718,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"introspect","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Introspectable::introspect","value":"pub fn introspect(&Self) -> Result<String, Self::Err>","parent":{"krate":0,"index":250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":259},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45369,"byte_end":45379,"line_start":51,"line_end":51,"column_start":11,"column_end":21},"name":"Properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties","value":"Properties","parent":null,"children":[{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" Methods of the [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.\n","sig":null,"attributes":[{"value":"/ Methods of the [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45206,"byte_end":45358,"line_start":50,"line_end":50,"column_start":1,"column_end":153}}]},{"kind":"Type","id":{"krate":0,"index":260},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45391,"byte_end":45394,"line_start":52,"line_end":52,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::Err","value":"type Err;","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45403,"byte_end":45406,"line_start":53,"line_end":53,"column_start":8,"column_end":11},"name":"get","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::get","value":"pub fn get<R0: for<'b> arg::Get>(&Self, &str, &str) -> Result<R0, Self::Err>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45516,"byte_end":45523,"line_start":54,"line_end":54,"column_start":8,"column_end":15},"name":"get_all","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::get_all","value":"pub fn get_all(&Self, &str)\n->\n    Result<::std::collections::HashMap<String,\n                                       arg::Variant<Box<arg::RefArg>>>,\n           Self::Err>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45655,"byte_end":45658,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"set","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Properties::set","value":"pub fn set<I2: arg::Arg + arg::Append>(&Self, &str, &str, I2)\n-> Result<(), Self::Err>","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1879},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47673,"byte_end":47700,"line_start":99,"line_end":99,"column_start":12,"column_end":39},"name":"PropertiesPropertiesChanged","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged","value":"PropertiesPropertiesChanged { interface_name, changed_properties, invalidated_properties }","parent":null,"children":[{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1882}],"decl_id":null,"docs":" Struct to send/receive the PropertiesChanged signal of the\n [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the PropertiesChanged signal of the","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47461,"byte_end":47523,"line_start":97,"line_end":97,"column_start":1,"column_end":63}},{"value":"/ [org.freedesktop.DBus.Properties](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-properties) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47524,"byte_end":47661,"line_start":98,"line_end":98,"column_start":1,"column_end":138}}]},{"kind":"Field","id":{"krate":0,"index":1880},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47711,"byte_end":47725,"line_start":100,"line_end":100,"column_start":9,"column_end":23},"name":"interface_name","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::interface_name","value":"std::string::String","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1881},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47743,"byte_end":47761,"line_start":101,"line_end":101,"column_start":9,"column_end":27},"name":"changed_properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::changed_properties","value":"std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1882},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47844,"byte_end":47866,"line_start":102,"line_end":102,"column_start":9,"column_end":31},"name":"invalidated_properties","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::PropertiesPropertiesChanged::invalidated_properties","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":287},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48837,"byte_end":48850,"line_start":129,"line_end":129,"column_start":11,"column_end":24},"name":"ObjectManager","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager","value":"ObjectManager","parent":null,"children":[{"krate":0,"index":288},{"krate":0,"index":289}],"decl_id":null,"docs":" Method of the [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Method of the [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48669,"byte_end":48826,"line_start":128,"line_end":128,"column_start":1,"column_end":158}}]},{"kind":"Type","id":{"krate":0,"index":288},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48862,"byte_end":48865,"line_start":130,"line_end":130,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager::Err","value":"type Err;","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48874,"byte_end":48893,"line_start":131,"line_end":131,"column_start":8,"column_end":27},"name":"get_managed_objects","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManager::get_managed_objects","value":"pub fn get_managed_objects(&Self)\n->\n    Result<::std::collections::HashMap<crate::Path,\n                                       ::std::collections::HashMap<String,\n                                                                   ::std::collections::HashMap<String,\n                                                                                               arg::Variant<Box<arg::RefArg>>>>>,\n           Self::Err>","parent":{"krate":0,"index":287},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1887},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50104,"byte_end":50132,"line_start":150,"line_end":150,"column_start":12,"column_end":40},"name":"ObjectManagerInterfacesAdded","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded","value":"ObjectManagerInterfacesAdded { object, interfaces }","parent":null,"children":[{"krate":0,"index":1888},{"krate":0,"index":1889}],"decl_id":null,"docs":" Struct to send/receive the InterfacesAdded signal of the\n [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the InterfacesAdded signal of the","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":49888,"byte_end":49948,"line_start":148,"line_end":148,"column_start":1,"column_end":61}},{"value":"/ [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":49949,"byte_end":50092,"line_start":149,"line_end":149,"column_start":1,"column_end":144}}]},{"kind":"Field","id":{"krate":0,"index":1888},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50143,"byte_end":50149,"line_start":151,"line_end":151,"column_start":9,"column_end":15},"name":"object","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::object","value":"strings::Path<'static>","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1889},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50181,"byte_end":50191,"line_start":152,"line_end":152,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesAdded::interfaces","value":"std::collections::HashMap<std::string::String, std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>>","parent":{"krate":0,"index":1887},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1894},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51199,"byte_end":51229,"line_start":179,"line_end":179,"column_start":12,"column_end":42},"name":"ObjectManagerInterfacesRemoved","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved","value":"ObjectManagerInterfacesRemoved { object, interfaces }","parent":null,"children":[{"krate":0,"index":1895},{"krate":0,"index":1896}],"decl_id":null,"docs":" Struct to send/receive the InterfacesRemoved signal of the\n [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.\n","sig":null,"attributes":[{"value":"/ Struct to send/receive the InterfacesRemoved signal of the","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50981,"byte_end":51043,"line_start":177,"line_end":177,"column_start":1,"column_end":63}},{"value":"/ [org.freedesktop.DBus.ObjectManager](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-objectmanager) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51044,"byte_end":51187,"line_start":178,"line_end":178,"column_start":1,"column_end":144}}]},{"kind":"Field","id":{"krate":0,"index":1895},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51240,"byte_end":51246,"line_start":180,"line_end":180,"column_start":9,"column_end":15},"name":"object","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::object","value":"strings::Path<'static>","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1896},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51278,"byte_end":51288,"line_start":181,"line_end":181,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::ObjectManagerInterfacesRemoved::interfaces","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":1894},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":310},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52116,"byte_end":52120,"line_start":206,"line_end":206,"column_start":11,"column_end":15},"name":"Peer","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer","value":"Peer","parent":null,"children":[{"krate":0,"index":311},{"krate":0,"index":312},{"krate":0,"index":313}],"decl_id":null,"docs":" Methods of the [org.freedesktop.DBus.Peer](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-peer) interface.\n","sig":null,"attributes":[{"value":"/ Methods of the [org.freedesktop.DBus.Peer](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces-peer) interface.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51965,"byte_end":52105,"line_start":205,"line_end":205,"column_start":1,"column_end":141}}]},{"kind":"Type","id":{"krate":0,"index":311},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52132,"byte_end":52135,"line_start":207,"line_end":207,"column_start":10,"column_end":13},"name":"Err","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::Err","value":"type Err;","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":312},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52144,"byte_end":52148,"line_start":208,"line_end":208,"column_start":8,"column_end":12},"name":"ping","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::ping","value":"pub fn ping(&Self) -> Result<(), Self::Err>","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52189,"byte_end":52203,"line_start":209,"line_end":209,"column_start":8,"column_end":22},"name":"get_machine_id","qualname":"::ffidisp::stdintf::org_freedesktop_dbus::Peer::get_machine_id","value":"pub fn get_machine_id(&Self) -> Result<String, Self::Err>","parent":{"krate":0,"index":310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":54015,"byte_end":54025,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"Connection","qualname":"::ffidisp::connection::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":370}],"decl_id":null,"docs":" A D-Bus connection. Start here if you want to get on the D-Bus!\n","sig":null,"attributes":[{"value":"/ A D-Bus connection. Start here if you want to get on the D-Bus!","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":53936,"byte_end":54003,"line_start":27,"line_end":27,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57112,"byte_end":57123,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"new_session","qualname":"<Connection>::new_session","value":"pub fn new_session() -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection to the session bus.","sig":null,"attributes":[{"value":"/ Creates a new connection to the session bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":56983,"byte_end":57031,"line_start":110,"line_end":110,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57036,"byte_end":57039,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ Just a shortcut for `get_private(BusType::Session)`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57044,"byte_end":57100,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":381},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57327,"byte_end":57337,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"new_system","qualname":"<Connection>::new_system","value":"pub fn new_system() -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new connection to the system bus.","sig":null,"attributes":[{"value":"/ Creates a new connection to the system bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57200,"byte_end":57247,"line_start":115,"line_end":115,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57252,"byte_end":57255,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Just a shortcut for `get_private(BusType::System)`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57260,"byte_end":57315,"line_start":117,"line_end":117,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":382},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57460,"byte_end":57471,"line_start":121,"line_end":121,"column_start":12,"column_end":23},"name":"get_private","qualname":"<Connection>::get_private","value":"pub fn get_private(BusType) -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection.\n","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57413,"byte_end":57448,"line_start":120,"line_end":120,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57911,"byte_end":57923,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"open_private","qualname":"<Connection>::open_private","value":"pub fn open_private(&str) -> Result<Connection, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection to a remote address.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection to a remote address.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57737,"byte_end":57792,"line_start":130,"line_end":130,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57797,"byte_end":57800,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ Note: for all common cases (System / Session bus) you probably want \"get_private\" instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":57805,"byte_end":57899,"line_start":132,"line_end":132,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58371,"byte_end":58379,"line_start":145,"line_end":145,"column_start":12,"column_end":20},"name":"register","qualname":"<Connection>::register","value":"pub fn register(&Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new D-Bus connection with the bus.","sig":null,"attributes":[{"value":"/ Registers a new D-Bus connection with the bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58221,"byte_end":58271,"line_start":142,"line_end":142,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58276,"byte_end":58279,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ Note: `get_private` does this automatically, useful with `open_private`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58284,"byte_end":58359,"line_start":144,"line_end":144,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":385},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58662,"byte_end":58674,"line_start":155,"line_end":155,"column_start":12,"column_end":24},"name":"is_connected","qualname":"<Connection>::is_connected","value":"pub fn is_connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the connection is currently open.\n","sig":null,"attributes":[{"value":"/ Gets whether the connection is currently open.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58600,"byte_end":58650,"line_start":154,"line_end":154,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58894,"byte_end":58919,"line_start":161,"line_end":161,"column_start":12,"column_end":37},"name":"send_with_reply_and_block","qualname":"<Connection>::send_with_reply_and_block","value":"pub fn send_with_reply_and_block(&Self, Message, i32)\n-> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and waits for a reply.\n This is usually used for method calls.\n","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and waits for a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58778,"byte_end":58835,"line_start":159,"line_end":159,"column_start":5,"column_end":62}},{"value":"/ This is usually used for method calls.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":58840,"byte_end":58882,"line_start":160,"line_end":160,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59440,"byte_end":59444,"line_start":174,"line_end":174,"column_start":12,"column_end":16},"name":"send","qualname":"<Connection>::send","value":"pub fn send(&Self, Message) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus without waiting. Useful for sending signals and method call replies.\n","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus without waiting. Useful for sending signals and method call replies.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59325,"byte_end":59428,"line_start":173,"line_end":173,"column_start":5,"column_end":108}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59946,"byte_end":59961,"line_start":185,"line_end":185,"column_start":12,"column_end":27},"name":"send_with_reply","qualname":"<Connection>::send_with_reply","value":"pub fn send_with_reply<'a, F: FnOnce(Result<&Message, Error>) -> () +\n                       'a>(&Self, Message, F) -> Result<MessageReply<F>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus, returning a MessageReply.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus, returning a MessageReply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59736,"byte_end":59797,"line_start":182,"line_end":182,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59802,"byte_end":59805,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ Call add_handler on the result to start waiting for reply. This should be done before next call to `incoming` or `iter`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":59810,"byte_end":59934,"line_start":184,"line_end":184,"column_start":5,"column_end":129}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60925,"byte_end":60936,"line_start":210,"line_end":210,"column_start":12,"column_end":23},"name":"add_handler","qualname":"<Connection>::add_handler","value":"pub fn add_handler<H: MsgHandler + 'static>(&Self, H)","parent":null,"children":[],"decl_id":null,"docs":" Adds a message handler to the connection.","sig":null,"attributes":[{"value":"/ Adds a message handler to the connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60158,"byte_end":60203,"line_start":190,"line_end":190,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60208,"byte_end":60211,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60216,"byte_end":60229,"line_start":192,"line_end":192,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60234,"byte_end":60237,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60242,"byte_end":60249,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ use std::{cell, rc};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60254,"byte_end":60278,"line_start":195,"line_end":195,"column_start":5,"column_end":29}},{"value":"/ use dbus::{ffidisp::Connection, Message};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60283,"byte_end":60328,"line_start":196,"line_end":196,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60333,"byte_end":60336,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60341,"byte_end":60388,"line_start":198,"line_end":198,"column_start":5,"column_end":52}},{"value":"/ let m = Message::new_method_call(\"org.freedesktop.DBus\", \"/\", \"org.freedesktop.DBus\", \"ListNames\").unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60393,"byte_end":60505,"line_start":199,"line_end":199,"column_start":5,"column_end":117}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60510,"byte_end":60513,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ let done: rc::Rc<cell::Cell<bool>> = Default::default();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60518,"byte_end":60578,"line_start":201,"line_end":201,"column_start":5,"column_end":65}},{"value":"/ let done2 = done.clone();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60583,"byte_end":60612,"line_start":202,"line_end":202,"column_start":5,"column_end":34}},{"value":"/ c.add_handler(c.send_with_reply(m, move |reply| {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60617,"byte_end":60670,"line_start":203,"line_end":203,"column_start":5,"column_end":58}},{"value":"/     let v: Vec<&str> = reply.unwrap().read1().unwrap(); ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60675,"byte_end":60735,"line_start":204,"line_end":204,"column_start":5,"column_end":65}},{"value":"/     println!(\"The names on the D-Bus are: {:?}\", v);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60740,"byte_end":60796,"line_start":205,"line_end":205,"column_start":5,"column_end":61}},{"value":"/     done2.set(true);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60801,"byte_end":60825,"line_start":206,"line_end":206,"column_start":5,"column_end":29}},{"value":"/ }).unwrap());","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60830,"byte_end":60847,"line_start":207,"line_end":207,"column_start":5,"column_end":22}},{"value":"/ while !done.get() { c.incoming(100).next(); }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60852,"byte_end":60901,"line_start":208,"line_end":208,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":60906,"byte_end":60913,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61469,"byte_end":61484,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"extract_handler","qualname":"<Connection>::extract_handler","value":"pub fn extract_handler(&Self) -> Option<Box<MsgHandler>>","parent":null,"children":[],"decl_id":null,"docs":" Removes a MsgHandler from the connection.","sig":null,"attributes":[{"value":"/ Removes a MsgHandler from the connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61063,"byte_end":61108,"line_start":215,"line_end":215,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61113,"byte_end":61116,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ If there are many MsgHandlers, it is not specified which one will be returned.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61121,"byte_end":61203,"line_start":217,"line_end":217,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61208,"byte_end":61211,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ There might be more methods added later on, which give better ways to deal","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61216,"byte_end":61294,"line_start":219,"line_end":219,"column_start":5,"column_end":83}},{"value":"/ with the list of MsgHandler currently on the connection. If this would help you,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61299,"byte_end":61383,"line_start":220,"line_end":220,"column_start":5,"column_end":89}},{"value":"/ please [file an issue](https://github.com/diwic/dbus-rs/issues). ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61388,"byte_end":61457,"line_start":221,"line_end":221,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61628,"byte_end":61639,"line_start":227,"line_end":227,"column_start":12,"column_end":23},"name":"unique_name","qualname":"<Connection>::unique_name","value":"pub fn unique_name(&Self) -> String","parent":null,"children":[],"decl_id":null,"docs":" Get the connection's unique name.\n","sig":null,"attributes":[{"value":"/ Get the connection's unique name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61579,"byte_end":61616,"line_start":226,"line_end":226,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62014,"byte_end":62018,"line_start":236,"line_end":236,"column_start":12,"column_end":16},"name":"iter","qualname":"<Connection>::iter","value":"pub fn iter(&Self, i32) -> ConnectionItems","parent":null,"children":[],"decl_id":null,"docs":" Check if there are new incoming events","sig":null,"attributes":[{"value":"/ Check if there are new incoming events","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61794,"byte_end":61836,"line_start":232,"line_end":232,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61841,"byte_end":61844,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ If there are no incoming events, ConnectionItems::Nothing will be returned.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61849,"byte_end":61928,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/ See ConnectionItems::new if you want to customize this behaviour.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":61933,"byte_end":62002,"line_start":235,"line_end":235,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62224,"byte_end":62232,"line_start":243,"line_end":243,"column_start":12,"column_end":20},"name":"incoming","qualname":"<Connection>::incoming","value":"pub fn incoming(&Self, u32) -> ConnMsgs<&Self>","parent":null,"children":[],"decl_id":null,"docs":" Check if there are new incoming events","sig":null,"attributes":[{"value":"/ Check if there are new incoming events","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62135,"byte_end":62177,"line_start":240,"line_end":240,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62182,"byte_end":62185,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ Supersedes \"iter\".","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62190,"byte_end":62212,"line_start":242,"line_end":242,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62392,"byte_end":62412,"line_start":248,"line_end":248,"column_start":12,"column_end":32},"name":"register_object_path","qualname":"<Connection>::register_object_path","value":"pub fn register_object_path(&Self, &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Register an object path.\n","sig":null,"attributes":[{"value":"/ Register an object path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":62352,"byte_end":62380,"line_start":247,"line_end":247,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":63151,"byte_end":63173,"line_start":267,"line_end":267,"column_start":12,"column_end":34},"name":"unregister_object_path","qualname":"<Connection>::unregister_object_path","value":"pub fn unregister_object_path(&Self, &str)","parent":null,"children":[],"decl_id":null,"docs":" Unregister an object path.\n","sig":null,"attributes":[{"value":"/ Unregister an object path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":63109,"byte_end":63139,"line_start":266,"line_end":266,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":63427,"byte_end":63455,"line_start":274,"line_end":274,"column_start":12,"column_end":40},"name":"list_registered_object_paths","qualname":"<Connection>::list_registered_object_paths","value":"pub fn list_registered_object_paths(&Self, &str) -> Vec<String>","parent":null,"children":[],"decl_id":null,"docs":" List registered object paths.\n","sig":null,"attributes":[{"value":"/ List registered object paths.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":63382,"byte_end":63415,"line_start":273,"line_end":273,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64186,"byte_end":64199,"line_start":295,"line_end":295,"column_start":12,"column_end":25},"name":"register_name","qualname":"<Connection>::register_name","value":"pub fn register_name(&Self, &str, u32)\n-> Result<super::RequestNameReply, Error>","parent":null,"children":[],"decl_id":null,"docs":" Register a name.\n","sig":null,"attributes":[{"value":"/ Register a name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64154,"byte_end":64174,"line_start":294,"line_end":294,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64557,"byte_end":64569,"line_start":303,"line_end":303,"column_start":12,"column_end":24},"name":"release_name","qualname":"<Connection>::release_name","value":"pub fn release_name(&Self, &str) -> Result<super::ReleaseNameReply, Error>","parent":null,"children":[],"decl_id":null,"docs":" Release a name.\n","sig":null,"attributes":[{"value":"/ Release a name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64526,"byte_end":64545,"line_start":302,"line_end":302,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65215,"byte_end":65224,"line_start":314,"line_end":314,"column_start":12,"column_end":21},"name":"add_match","qualname":"<Connection>::add_match","value":"pub fn add_match(&Self, &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Add a match rule to match messages on the message bus.","sig":null,"attributes":[{"value":"/ Add a match rule to match messages on the message bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64877,"byte_end":64935,"line_start":310,"line_end":310,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64940,"byte_end":64943,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ See the `unity_focused_window` example for how to use this to catch signals.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":64948,"byte_end":65028,"line_start":312,"line_end":312,"column_start":5,"column_end":85}},{"value":"/ (The syntax of the \"rule\" string is specified in the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#message-bus-routing-match-rules).)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65033,"byte_end":65203,"line_start":313,"line_end":313,"column_start":5,"column_end":175}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65558,"byte_end":65570,"line_start":322,"line_end":322,"column_start":12,"column_end":24},"name":"remove_match","qualname":"<Connection>::remove_match","value":"pub fn remove_match(&Self, &str) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Remove a match rule to match messages on the message bus.\n","sig":null,"attributes":[{"value":"/ Remove a match rule to match messages on the message bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65485,"byte_end":65546,"line_start":321,"line_end":321,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65968,"byte_end":65977,"line_start":332,"line_end":332,"column_start":12,"column_end":21},"name":"watch_fds","qualname":"<Connection>::watch_fds","value":"pub fn watch_fds(&Self) -> Vec<Watch>","parent":null,"children":[],"decl_id":null,"docs":" Async I/O: Get an up-to-date list of file descriptors to watch.","sig":null,"attributes":[{"value":"/ Async I/O: Get an up-to-date list of file descriptors to watch.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65834,"byte_end":65901,"line_start":329,"line_end":329,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65906,"byte_end":65909,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ See the `Watch` struct for an example.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":65914,"byte_end":65956,"line_start":331,"line_end":331,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66347,"byte_end":66359,"line_start":341,"line_end":341,"column_start":12,"column_end":24},"name":"watch_handle","qualname":"<Connection>::watch_handle","value":"pub fn watch_handle(&Self, RawFd, c_uint) -> ConnectionItems","parent":null,"children":[],"decl_id":null,"docs":" Async I/O: Call this function whenever you detected an event on the Fd,\n Flags are a set of WatchEvent bits.\n The returned iterator will return pending items only, never block for new events.","sig":null,"attributes":[{"value":"/ Async I/O: Call this function whenever you detected an event on the Fd,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66071,"byte_end":66146,"line_start":336,"line_end":336,"column_start":5,"column_end":80}},{"value":"/ Flags are a set of WatchEvent bits.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66151,"byte_end":66190,"line_start":337,"line_end":337,"column_start":5,"column_end":44}},{"value":"/ The returned iterator will return pending items only, never block for new events.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66195,"byte_end":66280,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66285,"byte_end":66288,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ See the `Watch` struct for an example.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66293,"byte_end":66335,"line_start":340,"line_end":340,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":406},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66651,"byte_end":66660,"line_start":348,"line_end":348,"column_start":12,"column_end":21},"name":"with_path","qualname":"<Connection>::with_path","value":"pub fn with_path<'a, D: Into<BusName>, P: Into<Path>>(&'a Self, D, P, i32)\n-> ConnPath","parent":null,"children":[],"decl_id":null,"docs":" Create a convenience struct for easier calling of many methods on the same destination and path.\n","sig":null,"attributes":[{"value":"/ Create a convenience struct for easier calling of many methods on the same destination and path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66539,"byte_end":66639,"line_start":347,"line_end":347,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":410},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69970,"byte_end":69994,"line_start":421,"line_end":421,"column_start":12,"column_end":36},"name":"replace_message_callback","qualname":"<Connection>::replace_message_callback","value":"pub fn replace_message_callback(&Self, Option<MessageCallback>)\n-> Option<MessageCallback>","parent":null,"children":[],"decl_id":null,"docs":" Replace the default message callback. Returns the previously set callback.","sig":null,"attributes":[{"value":"/ Replace the default message callback. Returns the previously set callback.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66895,"byte_end":66973,"line_start":353,"line_end":353,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66978,"byte_end":66981,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ By default, when you call ConnectionItems::next, all relevant incoming messages","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":66986,"byte_end":67069,"line_start":355,"line_end":355,"column_start":5,"column_end":88}},{"value":"/ are returned through the ConnectionItems iterator, and ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67074,"byte_end":67133,"line_start":356,"line_end":356,"column_start":5,"column_end":64}},{"value":"/ irrelevant messages are passed on to libdbus's default handler.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67138,"byte_end":67205,"line_start":357,"line_end":357,"column_start":5,"column_end":72}},{"value":"/ If you need to customize this behaviour (i e, to handle all incoming messages yourself),","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67210,"byte_end":67302,"line_start":358,"line_end":358,"column_start":5,"column_end":97}},{"value":"/ you can set this message callback yourself. A few caveats apply:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67307,"byte_end":67375,"line_start":359,"line_end":359,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67380,"byte_end":67383,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Return true from the callback to disable libdbus's internal handling of the message, or","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67388,"byte_end":67479,"line_start":361,"line_end":361,"column_start":5,"column_end":96}},{"value":"/ false to allow it. In other words, true and false correspond to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67484,"byte_end":67551,"line_start":362,"line_end":362,"column_start":5,"column_end":72}},{"value":"/ `DBUS_HANDLER_RESULT_HANDLED` and `DBUS_HANDLER_RESULT_NOT_YET_HANDLED` respectively.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67556,"byte_end":67645,"line_start":363,"line_end":363,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67650,"byte_end":67653,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ Be sure to call the previously set callback from inside your callback,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67658,"byte_end":67732,"line_start":365,"line_end":365,"column_start":5,"column_end":79}},{"value":"/ if you want, e.g. ConnectionItems::next to yield the message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67737,"byte_end":67802,"line_start":366,"line_end":366,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67807,"byte_end":67810,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ You can unset the message callback (might be useful to satisfy the borrow checker), but","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67815,"byte_end":67906,"line_start":368,"line_end":368,"column_start":5,"column_end":96}},{"value":"/ you will get a panic if you call ConnectionItems::next while the message callback is unset.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":67911,"byte_end":68006,"line_start":369,"line_end":369,"column_start":5,"column_end":100}},{"value":"/ The message callback will be temporary unset while inside a message callback, so calling","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68011,"byte_end":68103,"line_start":370,"line_end":370,"column_start":5,"column_end":97}},{"value":"/ ConnectionItems::next recursively will also result in a panic.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68108,"byte_end":68174,"line_start":371,"line_end":371,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68179,"byte_end":68182,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ If your message callback panics, ConnectionItems::next will panic, too.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68187,"byte_end":68262,"line_start":373,"line_end":373,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68267,"byte_end":68270,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68275,"byte_end":68289,"line_start":375,"line_end":375,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68294,"byte_end":68297,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Replace the default callback with our own:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68302,"byte_end":68348,"line_start":377,"line_end":377,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68353,"byte_end":68356,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68361,"byte_end":68374,"line_start":379,"line_end":379,"column_start":5,"column_end":18}},{"value":"/ use dbus::ffidisp::Connection;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68379,"byte_end":68413,"line_start":380,"line_end":380,"column_start":5,"column_end":39}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68418,"byte_end":68465,"line_start":381,"line_end":381,"column_start":5,"column_end":52}},{"value":"/ // Set our callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68470,"byte_end":68493,"line_start":382,"line_end":382,"column_start":5,"column_end":28}},{"value":"/ c.replace_message_callback(Some(Box::new(move |conn, msg| {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68498,"byte_end":68561,"line_start":383,"line_end":383,"column_start":5,"column_end":68}},{"value":"/     println!(\"Got message: {:?}\", msg.get_items());","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68566,"byte_end":68621,"line_start":384,"line_end":384,"column_start":5,"column_end":60}},{"value":"/     // Let libdbus handle some things by default,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68626,"byte_end":68679,"line_start":385,"line_end":385,"column_start":5,"column_end":58}},{"value":"/     // like \"nonexistent object\" error replies to method calls","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68684,"byte_end":68750,"line_start":386,"line_end":386,"column_start":5,"column_end":71}},{"value":"/     false","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68755,"byte_end":68768,"line_start":387,"line_end":387,"column_start":5,"column_end":18}},{"value":"/ })));","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68773,"byte_end":68782,"line_start":388,"line_end":388,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68787,"byte_end":68790,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ for _ in c.iter(1000) {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68795,"byte_end":68822,"line_start":390,"line_end":390,"column_start":5,"column_end":32}},{"value":"/    // Only `ConnectionItem::Nothing` would be ever yielded here.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68827,"byte_end":68895,"line_start":391,"line_end":391,"column_start":5,"column_end":73}},{"value":"/ }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68900,"byte_end":68905,"line_start":392,"line_end":392,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68910,"byte_end":68917,"line_start":393,"line_end":393,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68922,"byte_end":68925,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ Chain our callback to filter out some messages before `iter().next()`:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":68930,"byte_end":69004,"line_start":395,"line_end":395,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69009,"byte_end":69012,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69017,"byte_end":69024,"line_start":397,"line_end":397,"column_start":5,"column_end":12}},{"value":"/ use dbus::{ffidisp::Connection, MessageType};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69029,"byte_end":69078,"line_start":398,"line_end":398,"column_start":5,"column_end":54}},{"value":"/ let c = Connection::new_session().unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69083,"byte_end":69130,"line_start":399,"line_end":399,"column_start":5,"column_end":52}},{"value":"/ // Take the previously set callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69135,"byte_end":69174,"line_start":400,"line_end":400,"column_start":5,"column_end":44}},{"value":"/ let mut old_cb = c.replace_message_callback(None).unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69179,"byte_end":69242,"line_start":401,"line_end":401,"column_start":5,"column_end":68}},{"value":"/ // Set our callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69247,"byte_end":69270,"line_start":402,"line_end":402,"column_start":5,"column_end":28}},{"value":"/ c.replace_message_callback(Some(Box::new(move |conn, msg| {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69275,"byte_end":69338,"line_start":403,"line_end":403,"column_start":5,"column_end":68}},{"value":"/     // Handle all signals on the spot","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69343,"byte_end":69384,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/     if msg.msg_type() == MessageType::Signal {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69389,"byte_end":69439,"line_start":405,"line_end":405,"column_start":5,"column_end":55}},{"value":"/         println!(\"Got signal: {:?}\", msg.get_items());","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69444,"byte_end":69502,"line_start":406,"line_end":406,"column_start":5,"column_end":63}},{"value":"/         // Stop all further processing of the message","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69507,"byte_end":69564,"line_start":407,"line_end":407,"column_start":5,"column_end":62}},{"value":"/         return true;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69569,"byte_end":69593,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/     }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69598,"byte_end":69607,"line_start":409,"line_end":409,"column_start":5,"column_end":14}},{"value":"/     // Delegate the rest of the messages to the previous callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69612,"byte_end":69681,"line_start":410,"line_end":410,"column_start":5,"column_end":74}},{"value":"/     // in chain, e.g. to have them yielded by `iter().next()`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69686,"byte_end":69751,"line_start":411,"line_end":411,"column_start":5,"column_end":70}},{"value":"/     old_cb(conn, msg)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69756,"byte_end":69781,"line_start":412,"line_end":412,"column_start":5,"column_end":30}},{"value":"/ })));","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69786,"byte_end":69795,"line_start":413,"line_end":413,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69800,"byte_end":69803,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # if false {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69808,"byte_end":69824,"line_start":415,"line_end":415,"column_start":5,"column_end":21}},{"value":"/ for _ in c.iter(1000) {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69829,"byte_end":69856,"line_start":416,"line_end":416,"column_start":5,"column_end":32}},{"value":"/    // `ConnectionItem::Signal` would never be yielded here.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69861,"byte_end":69924,"line_start":417,"line_end":417,"column_start":5,"column_end":68}},{"value":"/ }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69929,"byte_end":69934,"line_start":418,"line_end":418,"column_start":5,"column_end":10}},{"value":"/ # }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69939,"byte_end":69946,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":69951,"byte_end":69958,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70879,"byte_end":70897,"line_start":437,"line_end":437,"column_start":12,"column_end":30},"name":"set_watch_callback","qualname":"<Connection>::set_watch_callback","value":"pub fn set_watch_callback(&Self, Box<Fn(Watch) -> () + Send>)","parent":null,"children":[],"decl_id":null,"docs":" Sets a callback to be called if a file descriptor status changes.","sig":null,"attributes":[{"value":"/ Sets a callback to be called if a file descriptor status changes.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70131,"byte_end":70200,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70205,"byte_end":70208,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ For async I/O. In rare cases, the number of fds to poll for read/write can change.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70213,"byte_end":70299,"line_start":427,"line_end":427,"column_start":5,"column_end":91}},{"value":"/ If this ever happens, you'll get a callback. The watch changed is provided as a parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70304,"byte_end":70398,"line_start":428,"line_end":428,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70403,"byte_end":70406,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ In rare cases this might not even happen in the thread calling anything on the connection,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70411,"byte_end":70505,"line_start":430,"line_end":430,"column_start":5,"column_end":99}},{"value":"/ so the callback needs to be `Send`. ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70510,"byte_end":70550,"line_start":431,"line_end":431,"column_start":5,"column_end":45}},{"value":"/ A mutex is held during the callback. If you try to call set_watch_callback from a callback,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70555,"byte_end":70650,"line_start":432,"line_end":432,"column_start":5,"column_end":100}},{"value":"/ you will deadlock.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70655,"byte_end":70677,"line_start":433,"line_end":433,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70682,"byte_end":70685,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ (Previously, this was instead put in a ConnectionItem queue, but this was not working correctly.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70690,"byte_end":70790,"line_start":435,"line_end":435,"column_start":5,"column_end":105}},{"value":"/ see https://github.com/diwic/dbus-rs/issues/99 for additional info.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":70795,"byte_end":70867,"line_start":436,"line_end":436,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":423},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72918,"byte_end":72933,"line_start":501,"line_end":501,"column_start":12,"column_end":27},"name":"ConnectionItems","qualname":"::ffidisp::connection::ConnectionItems","value":"ConnectionItems {  }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":427},{"krate":0,"index":428}],"decl_id":null,"docs":" ConnectionItem iterator\n","sig":null,"attributes":[{"value":"/ ConnectionItem iterator","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72879,"byte_end":72906,"line_start":500,"line_end":500,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73220,"byte_end":73224,"line_start":512,"line_end":512,"column_start":12,"column_end":16},"name":"with","qualname":"<ConnectionItems>::with","value":"pub fn with<H: 'static + MsgHandler>(Self, H) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builder method that adds a new msg handler.","sig":null,"attributes":[{"value":"/ Builder method that adds a new msg handler.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73086,"byte_end":73133,"line_start":509,"line_end":509,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73138,"byte_end":73141,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ Note: Likely to changed/refactored/removed in next release","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73146,"byte_end":73208,"line_start":511,"line_end":511,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73897,"byte_end":73909,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"msg_handlers","qualname":"<ConnectionItems>::msg_handlers","value":"pub fn msg_handlers(&mut Self) -> &mut Vec<Box<MsgHandler>>","parent":null,"children":[],"decl_id":null,"docs":" Access and modify message handlers ","sig":null,"attributes":[{"value":"/ Access and modify message handlers ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73771,"byte_end":73810,"line_start":528,"line_end":528,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73815,"byte_end":73818,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ Note: Likely to changed/refactored/removed in next release","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73823,"byte_end":73885,"line_start":530,"line_end":530,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74432,"byte_end":74435,"line_start":541,"line_end":541,"column_start":12,"column_end":15},"name":"new","qualname":"<ConnectionItems>::new","value":"pub fn new(&'a Connection, Option<i32>, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new ConnectionItems iterator","sig":null,"attributes":[{"value":"/ Creates a new ConnectionItems iterator","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73982,"byte_end":74024,"line_start":533,"line_end":533,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74029,"byte_end":74032,"line_start":534,"line_end":534,"column_start":5,"column_end":8}},{"value":"/ For io_timeout, setting None means the fds will not be read/written. I e, only pending ","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74037,"byte_end":74128,"line_start":535,"line_end":535,"column_start":5,"column_end":96}},{"value":"/ items in libdbus's internal queue will be processed.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74133,"byte_end":74189,"line_start":536,"line_end":536,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74194,"byte_end":74197,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ For end_on_timeout, setting false will means that the iterator will never finish (unless","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74202,"byte_end":74294,"line_start":538,"line_end":538,"column_start":5,"column_end":97}},{"value":"/ the D-Bus server goes down). Instead, ConnectionItem::Nothing will be returned in case no","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74299,"byte_end":74392,"line_start":539,"line_end":539,"column_start":5,"column_end":98}},{"value":"/ items are in queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74397,"byte_end":74420,"line_start":540,"line_end":540,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":1901},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76061,"byte_end":76069,"line_start":581,"line_end":581,"column_start":12,"column_end":20},"name":"ConnMsgs","qualname":"::ffidisp::connection::ConnMsgs","value":"ConnMsgs { conn, timeout_ms }","parent":null,"children":[{"krate":0,"index":1903},{"krate":0,"index":1904}],"decl_id":null,"docs":" Iterator over incoming messages on a connection.\n","sig":null,"attributes":[{"value":"/ Iterator over incoming messages on a connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":75973,"byte_end":76025,"line_start":579,"line_end":579,"column_start":1,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":1903},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76131,"byte_end":76135,"line_start":583,"line_end":583,"column_start":9,"column_end":13},"name":"conn","qualname":"::ffidisp::connection::ConnMsgs::conn","value":"C","parent":{"krate":0,"index":1901},"children":[],"decl_id":null,"docs":" The connection or some reference to it.\n","sig":null,"attributes":[{"value":"/ The connection or some reference to it.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76079,"byte_end":76122,"line_start":582,"line_end":582,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":1904},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76417,"byte_end":76427,"line_start":588,"line_end":588,"column_start":9,"column_end":19},"name":"timeout_ms","qualname":"::ffidisp::connection::ConnMsgs::timeout_ms","value":"std::option::Option<u32>","parent":{"krate":0,"index":1901},"children":[],"decl_id":null,"docs":" How many ms dbus should block, waiting for incoming messages until timing out.","sig":null,"attributes":[{"value":"/ How many ms dbus should block, waiting for incoming messages until timing out.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76144,"byte_end":76226,"line_start":584,"line_end":584,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76231,"byte_end":76234,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ If set to None, the dbus library will not read/write from file descriptors at all.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76239,"byte_end":76325,"line_start":586,"line_end":586,"column_start":5,"column_end":91}},{"value":"/ Instead the iterator will end when there's nothing currently in the queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76330,"byte_end":76408,"line_start":587,"line_end":587,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":1911},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32691,"byte_end":32699,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"ConnPath","qualname":"::ffidisp::ConnPath","value":"ConnPath { conn, dest, path, timeout }","parent":null,"children":[{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1916},{"krate":0,"index":1917}],"decl_id":null,"docs":" A convenience struct that wraps connection, destination and path.","sig":null,"attributes":[{"value":"/ A convenience struct that wraps connection, destination and path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32503,"byte_end":32572,"line_start":18,"line_end":18,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32573,"byte_end":32576,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Useful if you want to make many method calls to the same destination path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32577,"byte_end":32655,"line_start":20,"line_end":20,"column_start":1,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1914},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32796,"byte_end":32800,"line_start":24,"line_end":24,"column_start":9,"column_end":13},"name":"conn","qualname":"::ffidisp::ConnPath::conn","value":"C","parent":{"krate":0,"index":1911},"children":[],"decl_id":null,"docs":" Some way to access the connection, e g a &Connection or Rc<Connection>\n","sig":null,"attributes":[{"value":"/ Some way to access the connection, e g a &Connection or Rc<Connection>","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32713,"byte_end":32787,"line_start":23,"line_end":23,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":1915},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32883,"byte_end":32887,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"name":"dest","qualname":"::ffidisp::ConnPath::dest","value":"strings::BusName<'a>","parent":{"krate":0,"index":1911},"children":[],"decl_id":null,"docs":" Destination, i e what D-Bus service you're communicating with\n","sig":null,"attributes":[{"value":"/ Destination, i e what D-Bus service you're communicating with","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32809,"byte_end":32874,"line_start":25,"line_end":25,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":1916},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32949,"byte_end":32953,"line_start":28,"line_end":28,"column_start":9,"column_end":13},"name":"path","qualname":"::ffidisp::ConnPath::path","value":"strings::Path<'a>","parent":{"krate":0,"index":1911},"children":[],"decl_id":null,"docs":" Object path on the destination\n","sig":null,"attributes":[{"value":"/ Object path on the destination","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32906,"byte_end":32940,"line_start":27,"line_end":27,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":1917},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33031,"byte_end":33038,"line_start":30,"line_end":30,"column_start":9,"column_end":16},"name":"timeout","qualname":"::ffidisp::ConnPath::timeout","value":"i32","parent":{"krate":0,"index":1911},"children":[],"decl_id":null,"docs":" Timeout in milliseconds for blocking method calls\n","sig":null,"attributes":[{"value":"/ Timeout in milliseconds for blocking method calls","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32969,"byte_end":33022,"line_start":29,"line_end":29,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33212,"byte_end":33233,"line_start":35,"line_end":35,"column_start":12,"column_end":33},"name":"method_call_with_args","qualname":"<ConnPath>::method_call_with_args","value":"pub fn method_call_with_args<F: FnOnce(&mut Message) ->\n                             ()>(&Self, &Interface, &Member, F)\n-> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a D-Bus method call, where you can append arguments inside the closure.\n","sig":null,"attributes":[{"value":"/ Make a D-Bus method call, where you can append arguments inside the closure.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33120,"byte_end":33200,"line_start":34,"line_end":34,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":453},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33583,"byte_end":33599,"line_start":42,"line_end":42,"column_start":12,"column_end":28},"name":"signal_with_args","qualname":"<ConnPath>::signal_with_args","value":"pub fn signal_with_args<F: FnOnce(&mut Message) ->\n                        ()>(&Self, &Interface, &Member, F)\n-> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Emit a D-Bus signal, where you can append arguments inside the closure.\n","sig":null,"attributes":[{"value":"/ Emit a D-Bus signal, where you can append arguments inside the closure.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33496,"byte_end":33571,"line_start":41,"line_end":41,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33935,"byte_end":33939,"line_start":49,"line_end":49,"column_start":12,"column_end":16},"name":"emit","qualname":"<ConnPath>::emit","value":"pub fn emit<S: SignalArgs + AppendAll>(&Self, &S) -> Result<u32, Error>","parent":null,"children":[],"decl_id":null,"docs":" Emit a D-Bus signal, where the arguments are in a struct.\n","sig":null,"attributes":[{"value":"/ Emit a D-Bus signal, where the arguments are in a struct.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33862,"byte_end":33923,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34697,"byte_end":34708,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"method_call","qualname":"<ConnPath>::method_call","value":"pub fn method_call<'i, 'm, R: ReadAll, A: AppendAll, I: Into<Interface>,\n                   M: Into<Member>>(&Self, I, M, A) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a method call using typed input and output arguments.","sig":null,"attributes":[{"value":"/ Make a method call using typed input and output arguments.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34159,"byte_end":34221,"line_start":54,"line_end":54,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34226,"byte_end":34229,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34234,"byte_end":34247,"line_start":56,"line_end":56,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34252,"byte_end":34255,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34260,"byte_end":34267,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"/ use dbus::ffidisp::{Connection, BusType};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34272,"byte_end":34317,"line_start":59,"line_end":59,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34322,"byte_end":34325,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ let conn = Connection::get_private(BusType::Session)?;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34330,"byte_end":34388,"line_start":61,"line_end":61,"column_start":5,"column_end":63}},{"value":"/ let dest = conn.with_path(\"org.freedesktop.DBus\", \"/\", 5000);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34393,"byte_end":34458,"line_start":62,"line_end":62,"column_start":5,"column_end":70}},{"value":"/ let (has_owner,): (bool,) = dest.method_call(\"org.freedesktop.DBus\", \"NameHasOwner\", (\"dummy.name.without.owner\",))?;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34463,"byte_end":34584,"line_start":63,"line_end":63,"column_start":5,"column_end":126}},{"value":"/ assert_eq!(has_owner, false);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34589,"byte_end":34622,"line_start":64,"line_end":64,"column_start":5,"column_end":38}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34627,"byte_end":34673,"line_start":65,"line_end":65,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":34678,"byte_end":34685,"line_start":66,"line_end":66,"column_start":5,"column_end":12}}]},{"kind":"Type","id":{"krate":0,"index":467},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35233,"byte_end":35248,"line_start":79,"line_end":79,"column_start":10,"column_end":25},"name":"MessageCallback","qualname":"::ffidisp::MessageCallback","value":"Box<FnMut(&Connection, Message) -> bool + 'static>","parent":null,"children":[],"decl_id":null,"docs":" The type of function to use for replacing the message callback.","sig":null,"attributes":[{"value":"/ The type of function to use for replacing the message callback.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35063,"byte_end":35130,"line_start":76,"line_end":76,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35131,"byte_end":35134,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ See the documentation for Connection::replace_message_callback for more information.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35135,"byte_end":35223,"line_start":78,"line_end":78,"column_start":1,"column_end":89}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1927},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79534,"byte_end":79542,"line_start":44,"line_end":44,"column_start":5,"column_end":13},"name":"Readable","qualname":"::ffidisp::watch::WatchEvent::Readable","value":"WatchEvent::Readable","parent":{"krate":0,"index":1926},"children":[],"decl_id":null,"docs":" The fd is readable\n","sig":null,"attributes":[{"value":"/ The fd is readable","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79507,"byte_end":79529,"line_start":43,"line_end":43,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1930},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79611,"byte_end":79619,"line_start":46,"line_end":46,"column_start":5,"column_end":13},"name":"Writable","qualname":"::ffidisp::watch::WatchEvent::Writable","value":"WatchEvent::Writable","parent":{"krate":0,"index":1926},"children":[],"decl_id":null,"docs":" The fd is writable\n","sig":null,"attributes":[{"value":"/ The fd is writable","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79584,"byte_end":79606,"line_start":45,"line_end":45,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1933},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79696,"byte_end":79701,"line_start":48,"line_end":48,"column_start":5,"column_end":10},"name":"Error","qualname":"::ffidisp::watch::WatchEvent::Error","value":"WatchEvent::Error","parent":{"krate":0,"index":1926},"children":[],"decl_id":null,"docs":" An error occured on the fd\n","sig":null,"attributes":[{"value":"/ An error occured on the fd","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79661,"byte_end":79691,"line_start":47,"line_end":47,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1936},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79774,"byte_end":79780,"line_start":50,"line_end":50,"column_start":5,"column_end":11},"name":"Hangup","qualname":"::ffidisp::watch::WatchEvent::Hangup","value":"WatchEvent::Hangup","parent":{"krate":0,"index":1926},"children":[],"decl_id":null,"docs":" The fd received a hangup.\n","sig":null,"attributes":[{"value":"/ The fd received a hangup.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79740,"byte_end":79769,"line_start":49,"line_end":49,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":1926},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79490,"byte_end":79500,"line_start":42,"line_end":42,"column_start":10,"column_end":20},"name":"WatchEvent","qualname":"::ffidisp::watch::WatchEvent","value":"pub enum WatchEvent {\n\n    /// The fd is readable\n    Readable = ,\n\n    /// The fd is writable\n    Writable = ,\n\n    /// An error occured on the fd\n    Error = ,\n\n    /// The fd received a hangup.\n    Hangup = ,\n}","parent":null,"children":[{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":1933},{"krate":0,"index":1936}],"decl_id":null,"docs":" A file descriptor to watch for incoming events (for async I/O).","sig":null,"attributes":[{"value":"/ A file descriptor to watch for incoming events (for async I/O).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78422,"byte_end":78489,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78490,"byte_end":78493,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78494,"byte_end":78507,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78508,"byte_end":78515,"line_start":13,"line_end":13,"column_start":1,"column_end":8}},{"value":"/ extern crate libc;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78516,"byte_end":78538,"line_start":14,"line_end":14,"column_start":1,"column_end":23}},{"value":"/ extern crate dbus;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78539,"byte_end":78561,"line_start":15,"line_end":15,"column_start":1,"column_end":23}},{"value":"/ fn main() {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78562,"byte_end":78577,"line_start":16,"line_end":16,"column_start":1,"column_end":16}},{"value":"/     use dbus::ffidisp::{Connection, BusType, WatchEvent};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78578,"byte_end":78639,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/     let c = Connection::get_private(BusType::Session).unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78640,"byte_end":78707,"line_start":18,"line_end":18,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78708,"byte_end":78711,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/     // Get a list of fds to poll for","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78712,"byte_end":78752,"line_start":20,"line_end":20,"column_start":1,"column_end":41}},{"value":"/     let mut fds: Vec<_> = c.watch_fds().iter().map(|w| w.to_pollfd()).collect();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78753,"byte_end":78837,"line_start":21,"line_end":21,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78838,"byte_end":78841,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/     // Poll them with a 1 s timeout","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78842,"byte_end":78881,"line_start":23,"line_end":23,"column_start":1,"column_end":40}},{"value":"/     let r = unsafe { libc::poll(fds.as_mut_ptr(), fds.len() as libc::c_ulong, 1000) };","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78882,"byte_end":78972,"line_start":24,"line_end":24,"column_start":1,"column_end":91}},{"value":"/     assert!(r >= 0);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78973,"byte_end":78997,"line_start":25,"line_end":25,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":78998,"byte_end":79001,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/     // And handle incoming events","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79002,"byte_end":79039,"line_start":27,"line_end":27,"column_start":1,"column_end":38}},{"value":"/     for pfd in fds.iter().filter(|pfd| pfd.revents != 0) {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79040,"byte_end":79102,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/         for item in c.watch_handle(pfd.fd, WatchEvent::from_revents(pfd.revents)) {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79103,"byte_end":79190,"line_start":29,"line_end":29,"column_start":1,"column_end":88}},{"value":"/             // Handle item","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79191,"byte_end":79221,"line_start":30,"line_end":30,"column_start":1,"column_end":31}},{"value":"/             println!(\"Received ConnectionItem: {:?}\", item);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79222,"byte_end":79286,"line_start":31,"line_end":31,"column_start":1,"column_end":65}},{"value":"/         }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79287,"byte_end":79300,"line_start":32,"line_end":32,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79301,"byte_end":79310,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79311,"byte_end":79316,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79317,"byte_end":79324,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79326,"byte_end":79336,"line_start":37,"line_end":37,"column_start":1,"column_end":11}},{"value":"/ The enum is here for backwards compatibility mostly.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79378,"byte_end":79434,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79435,"byte_end":79438,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ It should really be bitflags instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79439,"byte_end":79480,"line_start":41,"line_end":41,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79966,"byte_end":79978,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"from_revents","qualname":"<WatchEvent>::from_revents","value":"pub fn from_revents(libc::c_short) -> c_uint","parent":null,"children":[],"decl_id":null,"docs":" After running poll, this transforms the revents into a parameter you can send into `Connection::watch_handle`\n","sig":null,"attributes":[{"value":"/ After running poll, this transforms the revents into a parameter you can send into `Connection::watch_handle`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79841,"byte_end":79954,"line_start":54,"line_end":54,"column_start":5,"column_end":118}}]},{"kind":"Struct","id":{"krate":0,"index":1947},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80555,"byte_end":80560,"line_start":66,"line_end":66,"column_start":12,"column_end":17},"name":"Watch","qualname":"::ffidisp::watch::Watch","value":"Watch {  }","parent":null,"children":[{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950}],"decl_id":null,"docs":" A file descriptor, and an indication whether it should be read from, written to, or both.\n","sig":null,"attributes":[{"value":"/ A file descriptor, and an indication whether it should be read from, written to, or both.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80450,"byte_end":80543,"line_start":65,"line_end":65,"column_start":1,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80678,"byte_end":80680,"line_start":74,"line_end":74,"column_start":12,"column_end":14},"name":"fd","qualname":"<Watch>::fd","value":"pub fn fd(&Self) -> RawFd","parent":null,"children":[],"decl_id":null,"docs":" Get the RawFd this Watch is for\n","sig":null,"attributes":[{"value":"/ Get the RawFd this Watch is for","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80631,"byte_end":80666,"line_start":73,"line_end":73,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80763,"byte_end":80771,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"readable","qualname":"<Watch>::readable","value":"pub fn readable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add POLLIN to events to listen for\n","sig":null,"attributes":[{"value":"/ Add POLLIN to events to listen for","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80713,"byte_end":80751,"line_start":75,"line_end":75,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80856,"byte_end":80864,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"writable","qualname":"<Watch>::writable","value":"pub fn writable(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Add POLLOUT to events to listen for\n","sig":null,"attributes":[{"value":"/ Add POLLOUT to events to listen for","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80805,"byte_end":80844,"line_start":77,"line_end":77,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80982,"byte_end":80991,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"to_pollfd","qualname":"<Watch>::to_pollfd","value":"pub fn to_pollfd(&Self) -> libc::pollfd","parent":null,"children":[],"decl_id":null,"docs":" Returns the current watch as a libc::pollfd, to use with libc::poll\n","sig":null,"attributes":[{"value":"/ Returns the current watch as a libc::pollfd, to use with libc::poll","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80899,"byte_end":80970,"line_start":79,"line_end":79,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1980},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35844,"byte_end":35860,"line_start":97,"line_end":97,"column_start":5,"column_end":21},"name":"AllowReplacement","qualname":"::ffidisp::NameFlag::AllowReplacement","value":"NameFlag::AllowReplacement","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Allow another service to become the primary owner if requested\n","sig":null,"attributes":[{"value":"/ Allow another service to become the primary owner if requested","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35773,"byte_end":35839,"line_start":96,"line_end":96,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1983},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35968,"byte_end":35983,"line_start":99,"line_end":99,"column_start":5,"column_end":20},"name":"ReplaceExisting","qualname":"::ffidisp::NameFlag::ReplaceExisting","value":"NameFlag::ReplaceExisting","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" Request to replace the current primary owner\n","sig":null,"attributes":[{"value":"/ Request to replace the current primary owner","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35915,"byte_end":35963,"line_start":98,"line_end":98,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1986},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36113,"byte_end":36123,"line_start":101,"line_end":101,"column_start":5,"column_end":15},"name":"DoNotQueue","qualname":"::ffidisp::NameFlag::DoNotQueue","value":"NameFlag::DoNotQueue","parent":{"krate":0,"index":1979},"children":[],"decl_id":null,"docs":" If we can not become the primary owner do not place us in the queue\n","sig":null,"attributes":[{"value":"/ If we can not become the primary owner do not place us in the queue","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36037,"byte_end":36108,"line_start":100,"line_end":100,"column_start":5,"column_end":76}}]},{"kind":"Enum","id":{"krate":0,"index":1979},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35758,"byte_end":35766,"line_start":95,"line_end":95,"column_start":10,"column_end":18},"name":"NameFlag","qualname":"::ffidisp::NameFlag","value":"pub enum NameFlag {\n\n    /// Allow another service to become the primary owner if requested\n    AllowReplacement = ,\n\n    /// Request to replace the current primary owner\n    ReplaceExisting = ,\n\n    /// If we can not become the primary owner do not place us in the queue\n    DoNotQueue = ,\n}","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1986}],"decl_id":null,"docs":" Flags to use for Connection::register_name.","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35554,"byte_end":35564,"line_start":90,"line_end":90,"column_start":1,"column_end":11}},{"value":"/ Flags to use for Connection::register_name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35627,"byte_end":35674,"line_start":92,"line_end":92,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35675,"byte_end":35678,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ More than one flag can be specified, if so just add their values.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":35679,"byte_end":35748,"line_start":94,"line_end":94,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36226,"byte_end":36231,"line_start":106,"line_end":106,"column_start":12,"column_end":17},"name":"value","qualname":"<NameFlag>::value","value":"pub fn value(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" u32 value of flag.\n","sig":null,"attributes":[{"value":"/ u32 value of flag.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36192,"byte_end":36214,"line_start":105,"line_end":105,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2005},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36475,"byte_end":36482,"line_start":114,"line_end":114,"column_start":5,"column_end":12},"name":"Nothing","qualname":"::ffidisp::ConnectionItem::Nothing","value":"ConnectionItem::Nothing","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" No event between now and timeout\n","sig":null,"attributes":[{"value":"/ No event between now and timeout","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36434,"byte_end":36470,"line_start":113,"line_end":113,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2007},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36517,"byte_end":36527,"line_start":116,"line_end":116,"column_start":5,"column_end":15},"name":"MethodCall","qualname":"::ffidisp::ConnectionItem::MethodCall","value":"ConnectionItem::MethodCall(Message)","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Incoming method call\n","sig":null,"attributes":[{"value":"/ Incoming method call","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36488,"byte_end":36512,"line_start":115,"line_end":115,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2010},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36566,"byte_end":36572,"line_start":118,"line_end":118,"column_start":5,"column_end":11},"name":"Signal","qualname":"::ffidisp::ConnectionItem::Signal","value":"ConnectionItem::Signal(Message)","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Incoming signal\n","sig":null,"attributes":[{"value":"/ Incoming signal","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36542,"byte_end":36561,"line_start":117,"line_end":117,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2013},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36678,"byte_end":36690,"line_start":120,"line_end":120,"column_start":5,"column_end":17},"name":"MethodReturn","qualname":"::ffidisp::ConnectionItem::MethodReturn","value":"ConnectionItem::MethodReturn(Message)","parent":{"krate":0,"index":2004},"children":[],"decl_id":null,"docs":" Incoming method return, including method return errors (mostly used for Async I/O)\n","sig":null,"attributes":[{"value":"/ Incoming method return, including method return errors (mostly used for Async I/O)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36587,"byte_end":36673,"line_start":119,"line_end":119,"column_start":5,"column_end":91}}]},{"kind":"Enum","id":{"krate":0,"index":2004},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36413,"byte_end":36427,"line_start":112,"line_end":112,"column_start":10,"column_end":24},"name":"ConnectionItem","qualname":"::ffidisp::ConnectionItem","value":"pub enum ConnectionItem {\n\n    /// No event between now and timeout\n    Nothing,\n\n    /// Incoming method call\n    MethodCall(Message),\n\n    /// Incoming signal\n    Signal(Message),\n\n    /// Incoming method return, including method return errors (mostly used for Async I/O)\n    MethodReturn(Message),\n}","parent":null,"children":[{"krate":0,"index":2005},{"krate":0,"index":2007},{"krate":0,"index":2010},{"krate":0,"index":2013}],"decl_id":null,"docs":" When listening for incoming events on the D-Bus, this enum will tell you what type\n of incoming event has happened.\n","sig":null,"attributes":[{"value":"/ When listening for incoming events on the D-Bus, this enum will tell you what type","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36264,"byte_end":36350,"line_start":109,"line_end":109,"column_start":1,"column_end":87}},{"value":"/ of incoming event has happened.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36351,"byte_end":36386,"line_start":110,"line_end":110,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2019},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37417,"byte_end":37420,"line_start":145,"line_end":145,"column_start":5,"column_end":8},"name":"All","qualname":"::ffidisp::MsgHandlerType::All","value":"MsgHandlerType::All","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":" Handle all messages\n","sig":null,"attributes":[{"value":"/ Handle all messages","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37389,"byte_end":37412,"line_start":144,"line_end":144,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2021},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37474,"byte_end":37481,"line_start":147,"line_end":147,"column_start":5,"column_end":12},"name":"MsgType","qualname":"::ffidisp::MsgHandlerType::MsgType","value":"MsgHandlerType::MsgType(MessageType)","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":" Handle only messages of a specific type\n","sig":null,"attributes":[{"value":"/ Handle only messages of a specific type","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37426,"byte_end":37469,"line_start":146,"line_end":146,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37559,"byte_end":37564,"line_start":149,"line_end":149,"column_start":5,"column_end":10},"name":"Reply","qualname":"::ffidisp::MsgHandlerType::Reply","value":"MsgHandlerType::Reply(u32)","parent":{"krate":0,"index":2018},"children":[],"decl_id":null,"docs":" Handle only method replies with this serial number\n","sig":null,"attributes":[{"value":"/ Handle only method replies with this serial number","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37500,"byte_end":37554,"line_start":148,"line_end":148,"column_start":5,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":2018},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37368,"byte_end":37382,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MsgHandlerType","qualname":"::ffidisp::MsgHandlerType","value":"pub enum MsgHandlerType {\n\n    /// Handle all messages\n    All,\n\n    /// Handle only messages of a specific type\n    MsgType(MessageType),\n\n    /// Handle only method replies with this serial number\n    Reply(u32),\n}","parent":null,"children":[{"krate":0,"index":2019},{"krate":0,"index":2021},{"krate":0,"index":2024}],"decl_id":null,"docs":" Type of messages to be handled by a MsgHandler.","sig":null,"attributes":[{"value":"/ Type of messages to be handled by a MsgHandler.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37153,"byte_end":37204,"line_start":139,"line_end":139,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37205,"byte_end":37208,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ Note: More variants can be added in the future; but unless you're writing your own D-Bus engine","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37209,"byte_end":37308,"line_start":141,"line_end":141,"column_start":1,"column_end":100}},{"value":"/ you should not have to match on these anyway.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37309,"byte_end":37358,"line_start":142,"line_end":142,"column_start":1,"column_end":50}}]},{"kind":"Trait","id":{"krate":0,"index":521},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38063,"byte_end":38073,"line_start":166,"line_end":166,"column_start":11,"column_end":21},"name":"MsgHandler","qualname":"::ffidisp::MsgHandler","value":"MsgHandler","parent":null,"children":[{"krate":0,"index":522},{"krate":0,"index":523}],"decl_id":null,"docs":" A trait for handling incoming messages.\n","sig":null,"attributes":[{"value":"/ A trait for handling incoming messages.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38009,"byte_end":38052,"line_start":165,"line_end":165,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":522},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38265,"byte_end":38277,"line_start":170,"line_end":170,"column_start":8,"column_end":20},"name":"handler_type","qualname":"::ffidisp::MsgHandler::handler_type","value":"pub fn handler_type(&Self) -> MsgHandlerType","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Type of messages for which the handler will be called","sig":null,"attributes":[{"value":"/ Type of messages for which the handler will be called","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38080,"byte_end":38137,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38142,"byte_end":38145,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note: The return value of this function might be cached, so it must return the same value all the time.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38150,"byte_end":38257,"line_start":169,"line_end":169,"column_start":5,"column_end":112}}]},{"kind":"Method","id":{"krate":0,"index":523},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38384,"byte_end":38394,"line_start":173,"line_end":173,"column_start":8,"column_end":18},"name":"handle_msg","qualname":"::ffidisp::MsgHandler::handle_msg","value":"pub fn handle_msg(&mut Self, &Message) -> Option<MsgHandlerResult>","parent":{"krate":0,"index":521},"children":[],"decl_id":null,"docs":" Function to be called if the message matches the MsgHandlerType\n","sig":null,"attributes":[{"value":"/ Function to be called if the message matches the MsgHandlerType","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38309,"byte_end":38376,"line_start":172,"line_end":172,"column_start":5,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":2031},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38539,"byte_end":38555,"line_start":178,"line_end":178,"column_start":12,"column_end":28},"name":"MsgHandlerResult","qualname":"::ffidisp::MsgHandlerResult","value":"MsgHandlerResult { handled, done, reply }","parent":null,"children":[{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2034}],"decl_id":null,"docs":" The result from MsgHandler::handle.\n","sig":null,"attributes":[{"value":"/ The result from MsgHandler::handle.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38462,"byte_end":38501,"line_start":176,"line_end":176,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2032},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38658,"byte_end":38665,"line_start":180,"line_end":180,"column_start":9,"column_end":16},"name":"handled","qualname":"::ffidisp::MsgHandlerResult::handled","value":"bool","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Indicates that the message has been dealt with and should not be processed further.\n","sig":null,"attributes":[{"value":"/ Indicates that the message has been dealt with and should not be processed further.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38562,"byte_end":38649,"line_start":179,"line_end":179,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":2033},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38779,"byte_end":38783,"line_start":182,"line_end":182,"column_start":9,"column_end":13},"name":"done","qualname":"::ffidisp::MsgHandlerResult::done","value":"bool","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Indicates that this MsgHandler no longer wants to receive messages and should be removed.\n","sig":null,"attributes":[{"value":"/ Indicates that this MsgHandler no longer wants to receive messages and should be removed.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38677,"byte_end":38770,"line_start":181,"line_end":181,"column_start":5,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":2034},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38856,"byte_end":38861,"line_start":184,"line_end":184,"column_start":9,"column_end":14},"name":"reply","qualname":"::ffidisp::MsgHandlerResult::reply","value":"std::vec::Vec<message::Message>","parent":{"krate":0,"index":2031},"children":[],"decl_id":null,"docs":" Messages to send (e g, a reply to a method call)\n","sig":null,"attributes":[{"value":"/ Messages to send (e g, a reply to a method call)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38795,"byte_end":38847,"line_start":183,"line_end":183,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":525},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":39087,"byte_end":39099,"line_start":193,"line_end":193,"column_start":12,"column_end":24},"name":"MessageReply","qualname":"::ffidisp::MessageReply","value":"","parent":null,"children":[],"decl_id":null,"docs":" The struct returned from `Connection::send_and_reply`.","sig":null,"attributes":[{"value":"/ The struct returned from `Connection::send_and_reply`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38930,"byte_end":38988,"line_start":190,"line_end":190,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38989,"byte_end":38992,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ It implements the `MsgHandler` trait so you can use `Connection::add_handler`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":38993,"byte_end":39075,"line_start":192,"line_end":192,"column_start":1,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":549},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87937,"byte_end":87942,"line_start":11,"line_end":11,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":550}],"decl_id":null,"docs":" D-Bus Error wrapper.","sig":null,"attributes":[{"value":"/ D-Bus Error wrapper.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87840,"byte_end":87864,"line_start":8,"line_end":8,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87865,"byte_end":87868,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is a wrapper around the libc dbus error object.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87869,"byte_end":87925,"line_start":10,"line_end":10,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88294,"byte_end":88304,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"new_custom","qualname":"<Error>::new_custom","value":"pub fn new_custom<'a, N: Into<ErrorName>>(N, &str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new custom D-Bus Error.\n","sig":null,"attributes":[{"value":"/ Create a new custom D-Bus Error.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88246,"byte_end":88282,"line_start":25,"line_end":25,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88705,"byte_end":88715,"line_start":36,"line_end":36,"column_start":12,"column_end":22},"name":"new_failed","qualname":"<Error>::new_failed","value":"pub fn new_failed(&str) -> Error","parent":null,"children":[],"decl_id":null,"docs":" Create a new generic D-Bus Error with \"org.freedesktop.DBus.Error.Failed\" as the Error name.\n","sig":null,"attributes":[{"value":"/ Create a new generic D-Bus Error with \"org.freedesktop.DBus.Error.Failed\" as the Error name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88597,"byte_end":88693,"line_start":35,"line_end":35,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89203,"byte_end":89207,"line_start":53,"line_end":53,"column_start":12,"column_end":16},"name":"name","qualname":"<Error>::name","value":"pub fn name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Error name/type, e g 'org.freedesktop.DBus.Error.Failed'\n","sig":null,"attributes":[{"value":"/ Error name/type, e g 'org.freedesktop.DBus.Error.Failed'","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89131,"byte_end":89191,"line_start":52,"line_end":52,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89356,"byte_end":89363,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"message","qualname":"<Error>::message","value":"pub fn message(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Custom message, e g 'Could not find a matching object path'\n","sig":null,"attributes":[{"value":"/ Custom message, e g 'Could not find a matching object path'","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89281,"byte_end":89344,"line_start":57,"line_end":57,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2039},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90662,"byte_end":90671,"line_start":108,"line_end":108,"column_start":12,"column_end":21},"name":"MethodErr","qualname":"::error::MethodErr","value":"","parent":null,"children":[],"decl_id":null,"docs":" A D-Bus Method Error, containing an error name and a description.","sig":null,"attributes":[{"value":"/ A D-Bus Method Error, containing an error name and a description.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90516,"byte_end":90585,"line_start":105,"line_end":105,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90586,"byte_end":90589,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ Unlike the \"Error\" struct, this is a Rust native struct.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90590,"byte_end":90650,"line_start":107,"line_end":107,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90772,"byte_end":90783,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"invalid_arg","qualname":"<MethodErr>::invalid_arg","value":"pub fn invalid_arg<T: fmt::Debug + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create an Invalid Args MethodErr.\n","sig":null,"attributes":[{"value":"/ Create an Invalid Args MethodErr.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90723,"byte_end":90760,"line_start":111,"line_end":111,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91012,"byte_end":91018,"line_start":116,"line_end":116,"column_start":12,"column_end":18},"name":"no_arg","qualname":"<MethodErr>::no_arg","value":"pub fn no_arg() -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that there are not enough arguments given.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that there are not enough arguments given.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90935,"byte_end":91000,"line_start":115,"line_end":115,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91207,"byte_end":91213,"line_start":120,"line_end":120,"column_start":12,"column_end":18},"name":"failed","qualname":"<MethodErr>::failed","value":"pub fn failed<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the method failed in the way specified.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the method failed in the way specified.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91128,"byte_end":91195,"line_start":119,"line_end":119,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91409,"byte_end":91416,"line_start":125,"line_end":125,"column_start":12,"column_end":19},"name":"no_path","qualname":"<MethodErr>::no_path","value":"pub fn no_path<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Object path was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Object path was unknown.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91341,"byte_end":91397,"line_start":124,"line_end":124,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91640,"byte_end":91652,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"no_interface","qualname":"<MethodErr>::no_interface","value":"pub fn no_interface<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Interface was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Interface was unknown.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91574,"byte_end":91628,"line_start":129,"line_end":129,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91873,"byte_end":91882,"line_start":134,"line_end":134,"column_start":12,"column_end":21},"name":"no_method","qualname":"<MethodErr>::no_method","value":"pub fn no_method<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Method was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Method was unknown.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":91810,"byte_end":91861,"line_start":133,"line_end":133,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92099,"byte_end":92110,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"no_property","qualname":"<MethodErr>::no_property","value":"pub fn no_property<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Property was unknown.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Property was unknown.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92034,"byte_end":92087,"line_start":137,"line_end":137,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":588},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92333,"byte_end":92344,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"ro_property","qualname":"<MethodErr>::ro_property","value":"pub fn ro_property<T: fmt::Display + ?Sized>(&T) -> MethodErr","parent":null,"children":[],"decl_id":null,"docs":" Create a MethodErr that the Property was read-only.\n","sig":null,"attributes":[{"value":"/ Create a MethodErr that the Property was read-only.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92266,"byte_end":92321,"line_start":141,"line_end":141,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92542,"byte_end":92551,"line_start":147,"line_end":147,"column_start":12,"column_end":21},"name":"errorname","qualname":"<MethodErr>::errorname","value":"pub fn errorname(&Self) -> &ErrorName","parent":null,"children":[],"decl_id":null,"docs":" Error name accessor\n","sig":null,"attributes":[{"value":"/ Error name accessor","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92507,"byte_end":92530,"line_start":146,"line_end":146,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92634,"byte_end":92645,"line_start":149,"line_end":149,"column_start":12,"column_end":23},"name":"description","qualname":"<MethodErr>::description","value":"pub fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Description accessor\n","sig":null,"attributes":[{"value":"/ Description accessor","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92598,"byte_end":92622,"line_start":148,"line_end":148,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92866,"byte_end":92876,"line_start":155,"line_end":155,"column_start":12,"column_end":22},"name":"to_message","qualname":"<MethodErr>::to_message","value":"pub fn to_message(&Self, &Message) -> Message","parent":null,"children":[],"decl_id":null,"docs":" Creates an error reply from a method call message.","sig":null,"attributes":[{"value":"/ Creates an error reply from a method call message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92678,"byte_end":92732,"line_start":151,"line_end":151,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92737,"byte_end":92740,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Note: You normally don't need to use this function,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92745,"byte_end":92800,"line_start":153,"line_end":153,"column_start":5,"column_end":60}},{"value":"/ as it is called internally from Tree::handle.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":92805,"byte_end":92854,"line_start":154,"line_end":154,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":607},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"channel","qualname":"::channel","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":676},{"krate":0,"index":2099},{"krate":0,"index":2125},{"krate":0,"index":2123},{"krate":0,"index":2122},{"krate":0,"index":2120},{"krate":0,"index":2118},{"krate":0,"index":2115},{"krate":0,"index":2116},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2109},{"krate":0,"index":2127},{"krate":0,"index":2157},{"krate":0,"index":2156},{"krate":0,"index":2154},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2147},{"krate":0,"index":2148},{"krate":0,"index":2133},{"krate":0,"index":2131},{"krate":0,"index":677},{"krate":0,"index":679},{"krate":0,"index":681},{"krate":0,"index":2159},{"krate":0,"index":2182},{"krate":0,"index":2180},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2171},{"krate":0,"index":2165},{"krate":0,"index":2162},{"krate":0,"index":683},{"krate":0,"index":687},{"krate":0,"index":689},{"krate":0,"index":691},{"krate":0,"index":692}],"decl_id":null,"docs":" Connection base / building block.","sig":null,"attributes":[{"value":"/ Connection base / building block.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":93744,"byte_end":93781,"line_start":1,"line_end":1,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":93782,"byte_end":93785,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains some helper structs and traits common to all Connection types.-","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":93786,"byte_end":93862,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":2094},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104564,"byte_end":104571,"line_start":119,"line_end":119,"column_start":12,"column_end":19},"name":"Channel","qualname":"::channel::ffichannel::Channel","value":"Channel {  }","parent":null,"children":[{"krate":0,"index":2095},{"krate":0,"index":2096}],"decl_id":null,"docs":" Low-level connection - handles read/write to the socket","sig":null,"attributes":[{"value":"/ Low-level connection - handles read/write to the socket","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":103885,"byte_end":103944,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":103945,"byte_end":103948,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ You probably do not need to worry about this as you would typically","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":103949,"byte_end":104020,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ use the various blocking and non-blocking \"Connection\" structs instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104021,"byte_end":104096,"line_start":109,"line_end":109,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104097,"byte_end":104100,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/ This version avoids dbus_connection_dispatch, and thus avoids","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104101,"byte_end":104166,"line_start":111,"line_end":111,"column_start":1,"column_end":66}},{"value":"/ callbacks from that function. Instead the same functionality","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104167,"byte_end":104231,"line_start":112,"line_end":112,"column_start":1,"column_end":65}},{"value":"/ is implemented in the various blocking and non-blocking \"Connection\" components.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104232,"byte_end":104316,"line_start":113,"line_end":113,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104317,"byte_end":104320,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ Blocking operations are clearly marked as such, although if you","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104321,"byte_end":104388,"line_start":115,"line_end":115,"column_start":1,"column_end":68}},{"value":"/ try to access the connection from several threads at the same time,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104389,"byte_end":104460,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/ blocking might occur due to an internal mutex inside the dbus library.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104461,"byte_end":104535,"line_start":117,"line_end":117,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":655},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105383,"byte_end":105394,"line_start":151,"line_end":151,"column_start":12,"column_end":23},"name":"get_private","qualname":"<Channel>::get_private","value":"pub fn get_private(BusType) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105270,"byte_end":105305,"line_start":148,"line_end":148,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105310,"byte_end":105313,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the connection is up and running.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105318,"byte_end":105371,"line_start":150,"line_end":150,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":656},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106106,"byte_end":106118,"line_start":170,"line_end":170,"column_start":12,"column_end":24},"name":"open_private","qualname":"<Channel>::open_private","value":"pub fn open_private(&str) -> Result<Channel, Error>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new D-Bus connection to a remote address.","sig":null,"attributes":[{"value":"/ Creates a new D-Bus connection to a remote address.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105869,"byte_end":105924,"line_start":165,"line_end":165,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105929,"byte_end":105932,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Note: for all common cases (System / Session bus) you probably want \"get_private\" instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":105937,"byte_end":106031,"line_start":167,"line_end":167,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106036,"byte_end":106039,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the connection is established.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106044,"byte_end":106094,"line_start":169,"line_end":169,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":657},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106643,"byte_end":106651,"line_start":184,"line_end":184,"column_start":12,"column_end":20},"name":"register","qualname":"<Channel>::register","value":"pub fn register(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Registers a new D-Bus connection with the bus.","sig":null,"attributes":[{"value":"/ Registers a new D-Bus connection with the bus.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106413,"byte_end":106463,"line_start":179,"line_end":179,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106468,"byte_end":106471,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ Note: `get_private` does this automatically, useful with `open_private`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106476,"byte_end":106551,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106556,"byte_end":106559,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ Blocking: until a \"Hello\" response is received from the server.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106564,"byte_end":106631,"line_start":183,"line_end":183,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":658},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107049,"byte_end":107061,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"is_connected","qualname":"<Channel>::is_connected","value":"pub fn is_connected(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the connection is currently open.\n","sig":null,"attributes":[{"value":"/ Gets whether the connection is currently open.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":106987,"byte_end":107037,"line_start":194,"line_end":194,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107266,"byte_end":107277,"line_start":202,"line_end":202,"column_start":12,"column_end":23},"name":"unique_name","qualname":"<Channel>::unique_name","value":"pub fn unique_name(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Get the connection's unique name.","sig":null,"attributes":[{"value":"/ Get the connection's unique name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107165,"byte_end":107202,"line_start":199,"line_end":199,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107207,"byte_end":107210,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ It's usually something like \":1.54\"","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107215,"byte_end":107254,"line_start":201,"line_end":201,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":660},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107904,"byte_end":107908,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"send","qualname":"<Channel>::send","value":"pub fn send(&Self, Message) -> Result<u32, ()>","parent":null,"children":[],"decl_id":null,"docs":" Puts a message into libdbus out queue, and tries to send it.","sig":null,"attributes":[{"value":"/ Puts a message into libdbus out queue, and tries to send it.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107514,"byte_end":107578,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107583,"byte_end":107586,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ Returns a serial number than can be used to match against a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107591,"byte_end":107661,"line_start":212,"line_end":212,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107666,"byte_end":107669,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ Note: usually the message is sent when this call happens, but in","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107674,"byte_end":107742,"line_start":214,"line_end":214,"column_start":5,"column_end":73}},{"value":"/ case internal D-Bus buffers are full, it will be left in the out queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107747,"byte_end":107822,"line_start":215,"line_end":215,"column_start":5,"column_end":80}},{"value":"/ Call \"flush\" or \"read_write\" to retry flushing the out queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":107827,"byte_end":107892,"line_start":216,"line_end":216,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":661},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108635,"byte_end":108660,"line_start":232,"line_end":232,"column_start":12,"column_end":37},"name":"send_with_reply_and_block","qualname":"<Channel>::send_with_reply_and_block","value":"pub fn send_with_reply_and_block(&Self, Message, Duration)\n-> Result<Message, Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and waits for a reply. This is used for method calls.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and waits for a reply. This is used for method calls.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108141,"byte_end":108229,"line_start":224,"line_end":224,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108234,"byte_end":108237,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ Blocking: until a reply is received or the timeout expires.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108242,"byte_end":108305,"line_start":226,"line_end":226,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108310,"byte_end":108313,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ Note: In case of an error reply, this is returned as an Err(), not as a Ok(Message) with the error type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108318,"byte_end":108426,"line_start":228,"line_end":228,"column_start":5,"column_end":113}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108431,"byte_end":108434,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note: In case pop_message and send_with_reply_and_block is called in parallel from different threads,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108439,"byte_end":108544,"line_start":230,"line_end":230,"column_start":5,"column_end":110}},{"value":"/ they might race to retreive the reply message from the internal queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":108549,"byte_end":108623,"line_start":231,"line_end":231,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":662},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109191,"byte_end":109196,"line_start":247,"line_end":247,"column_start":12,"column_end":17},"name":"flush","qualname":"<Channel>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Flush the queue of outgoing messages.","sig":null,"attributes":[{"value":"/ Flush the queue of outgoing messages.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109077,"byte_end":109118,"line_start":244,"line_end":244,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109123,"byte_end":109126,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Blocking: until the outgoing queue is empty.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109131,"byte_end":109179,"line_start":246,"line_end":246,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":663},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109571,"byte_end":109581,"line_start":255,"line_end":255,"column_start":12,"column_end":22},"name":"read_write","qualname":"<Channel>::read_write","value":"pub fn read_write(&Self, Option<Duration>) -> Result<(), ()>","parent":null,"children":[],"decl_id":null,"docs":" Read and write to the connection.","sig":null,"attributes":[{"value":"/ Read and write to the connection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109264,"byte_end":109301,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109306,"byte_end":109309,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ Incoming messages are put in the internal queue, outgoing messages are written.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109314,"byte_end":109397,"line_start":251,"line_end":251,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109402,"byte_end":109405,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ Blocking: If there are no messages, for up to timeout, or forever if timeout is None.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109410,"byte_end":109499,"line_start":253,"line_end":253,"column_start":5,"column_end":94}},{"value":"/ For non-blocking behaviour, set timeout to Some(0).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109504,"byte_end":109559,"line_start":254,"line_end":254,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":665},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109921,"byte_end":109941,"line_start":265,"line_end":265,"column_start":12,"column_end":32},"name":"has_messages_to_send","qualname":"<Channel>::has_messages_to_send","value":"pub fn has_messages_to_send(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Gets whether the output message buffer is non-empty\n","sig":null,"attributes":[{"value":"/ Gets whether the output message buffer is non-empty","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":109854,"byte_end":109909,"line_start":264,"line_end":264,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110368,"byte_end":110379,"line_start":274,"line_end":274,"column_start":12,"column_end":23},"name":"pop_message","qualname":"<Channel>::pop_message","value":"pub fn pop_message(&Self) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Removes a message from the incoming queue, or returns None if the queue is empty.","sig":null,"attributes":[{"value":"/ Removes a message from the incoming queue, or returns None if the queue is empty.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110049,"byte_end":110134,"line_start":269,"line_end":269,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110139,"byte_end":110142,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Use \"read_write\" first, so that messages are put into the incoming queue.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110147,"byte_end":110224,"line_start":271,"line_end":271,"column_start":5,"column_end":82}},{"value":"/ For unhandled messages, please call MessageDispatcher::default_dispatch to return","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110229,"byte_end":110314,"line_start":272,"line_end":272,"column_start":5,"column_end":90}},{"value":"/ default replies for method calls.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110319,"byte_end":110356,"line_start":273,"line_end":273,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":667},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110804,"byte_end":110824,"line_start":287,"line_end":287,"column_start":12,"column_end":32},"name":"blocking_pop_message","qualname":"<Channel>::blocking_pop_message","value":"pub fn blocking_pop_message(&Self, Duration) -> Result<Option<Message>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Removes a message from the incoming queue, or waits until timeout if the queue is empty.","sig":null,"attributes":[{"value":"/ Removes a message from the incoming queue, or waits until timeout if the queue is empty.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110692,"byte_end":110784,"line_start":285,"line_end":285,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":110789,"byte_end":110792,"line_start":286,"line_end":286,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":669},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111418,"byte_end":111435,"line_start":300,"line_end":300,"column_start":12,"column_end":29},"name":"set_watch_enabled","qualname":"<Channel>::set_watch_enabled","value":"pub fn set_watch_enabled(&mut Self, bool)","parent":null,"children":[],"decl_id":null,"docs":" Enables watch tracking, a prequisite for calling watch.","sig":null,"attributes":[{"value":"/ Enables watch tracking, a prequisite for calling watch.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111148,"byte_end":111207,"line_start":295,"line_end":295,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111212,"byte_end":111215,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ (In theory, this could panic in case libdbus ever changes to listen to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111220,"byte_end":111294,"line_start":297,"line_end":297,"column_start":5,"column_end":79}},{"value":"/ something else than one file descriptor,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111299,"byte_end":111343,"line_start":298,"line_end":298,"column_start":5,"column_end":49}},{"value":"/ but this should be extremely unlikely to ever happen.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111348,"byte_end":111406,"line_start":299,"line_end":299,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112012,"byte_end":112017,"line_start":316,"line_end":316,"column_start":12,"column_end":17},"name":"watch","qualname":"<Channel>::watch","value":"pub fn watch(&Self) -> Watch","parent":null,"children":[],"decl_id":null,"docs":" Gets the file descriptor to listen for read/write.","sig":null,"attributes":[{"value":"/ Gets the file descriptor to listen for read/write.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111692,"byte_end":111746,"line_start":309,"line_end":309,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111751,"byte_end":111754,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ Panics: if set_watch_enabled is false.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111759,"byte_end":111801,"line_start":311,"line_end":311,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111806,"byte_end":111809,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ (In theory, this could panic in case libdbus ever changes to listen to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111814,"byte_end":111888,"line_start":313,"line_end":313,"column_start":5,"column_end":79}},{"value":"/ something else than one file descriptor,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111893,"byte_end":111937,"line_start":314,"line_end":314,"column_start":5,"column_end":49}},{"value":"/ but this should be extremely unlikely to ever happen.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":111942,"byte_end":112000,"line_start":315,"line_end":315,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":671},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112461,"byte_end":112470,"line_start":330,"line_end":330,"column_start":12,"column_end":21},"name":"watch_fds","qualname":"<Channel>::watch_fds","value":"pub fn watch_fds(&mut Self) -> Result<Vec<Watch>, ()>","parent":null,"children":[],"decl_id":null,"docs":" Get an up-to-date list of file descriptors to watch.","sig":null,"attributes":[{"value":"/ Get an up-to-date list of file descriptors to watch.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112286,"byte_end":112342,"line_start":326,"line_end":326,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112347,"byte_end":112350,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ Obsolete - in practice, you can use watch and set_watch_enabled instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112355,"byte_end":112431,"line_start":328,"line_end":328,"column_start":5,"column_end":81}},{"value":"deprecated","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":112436,"byte_end":112449,"line_start":329,"line_end":329,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2100},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94414,"byte_end":94421,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"Session","qualname":"::channel::BusType::Session","value":"BusType::Session","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" The Session bus - local to every logged in session\n","sig":null,"attributes":[{"value":"/ The Session bus - local to every logged in session","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94355,"byte_end":94409,"line_start":23,"line_end":23,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2103},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94492,"byte_end":94498,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"System","qualname":"::channel::BusType::System","value":"BusType::System","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" The system wide bus\n","sig":null,"attributes":[{"value":"/ The system wide bus","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94464,"byte_end":94487,"line_start":25,"line_end":25,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2106},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94580,"byte_end":94587,"line_start":28,"line_end":28,"column_start":5,"column_end":12},"name":"Starter","qualname":"::channel::BusType::Starter","value":"BusType::Starter","parent":{"krate":0,"index":2099},"children":[],"decl_id":null,"docs":" The bus that started us, if any\n","sig":null,"attributes":[{"value":"/ The bus that started us, if any","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94540,"byte_end":94575,"line_start":27,"line_end":27,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":2099},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94341,"byte_end":94348,"line_start":22,"line_end":22,"column_start":10,"column_end":17},"name":"BusType","qualname":"::channel::BusType","value":"pub enum BusType {\n\n    /// The Session bus - local to every logged in session\n    Session = ,\n\n    /// The system wide bus\n    System = ,\n\n    /// The bus that started us, if any\n    Starter = ,\n}","parent":null,"children":[{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2106}],"decl_id":null,"docs":" Which bus to connect to\n","sig":null,"attributes":[{"value":"/ Which bus to connect to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94236,"byte_end":94263,"line_start":20,"line_end":20,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2127},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94797,"byte_end":94802,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Watch","qualname":"::channel::Watch","value":"Watch { fd, read, write }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129},{"krate":0,"index":2130}],"decl_id":null,"docs":" A file descriptor, and an indication whether it should be read from, written to, or both.\n","sig":null,"attributes":[{"value":"/ A file descriptor, and an indication whether it should be read from, written to, or both.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94692,"byte_end":94785,"line_start":33,"line_end":33,"column_start":1,"column_end":94}}]},{"kind":"Field","id":{"krate":0,"index":2128},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94837,"byte_end":94839,"line_start":36,"line_end":36,"column_start":9,"column_end":11},"name":"fd","qualname":"::channel::Watch::fd","value":"i32","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" File descriptor\n","sig":null,"attributes":[{"value":"/ File descriptor","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94809,"byte_end":94828,"line_start":35,"line_end":35,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2129},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94939,"byte_end":94943,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"read","qualname":"::channel::Watch::read","value":"bool","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" True if wakeup should happen when the file descriptor is ready for reading\n","sig":null,"attributes":[{"value":"/ True if wakeup should happen when the file descriptor is ready for reading","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94852,"byte_end":94930,"line_start":37,"line_end":37,"column_start":5,"column_end":83}}]},{"kind":"Field","id":{"krate":0,"index":2130},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95042,"byte_end":95047,"line_start":40,"line_end":40,"column_start":9,"column_end":14},"name":"write","qualname":"::channel::Watch::write","value":"bool","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" True if wakeup should happen when the file descriptor is ready for writing\n","sig":null,"attributes":[{"value":"/ True if wakeup should happen when the file descriptor is ready for writing","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":94955,"byte_end":95033,"line_start":39,"line_end":39,"column_start":5,"column_end":83}}]},{"kind":"Trait","id":{"krate":0,"index":677},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95126,"byte_end":95132,"line_start":44,"line_end":44,"column_start":11,"column_end":17},"name":"Sender","qualname":"::channel::Sender","value":"Sender","parent":null,"children":[{"krate":0,"index":678}],"decl_id":null,"docs":" Abstraction over different connections that send data\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections that send data","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95058,"byte_end":95115,"line_start":43,"line_end":43,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":678},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95266,"byte_end":95270,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"send","qualname":"::channel::Sender::send","value":"pub fn send(&Self, Message) -> Result<u32, ()>","parent":{"krate":0,"index":677},"children":[],"decl_id":null,"docs":" Schedules a message for sending.","sig":null,"attributes":[{"value":"/ Schedules a message for sending.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95139,"byte_end":95175,"line_start":45,"line_end":45,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95180,"byte_end":95183,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Returns a serial number than can be used to match against a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95188,"byte_end":95258,"line_start":47,"line_end":47,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2159},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95950,"byte_end":95955,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"Token","qualname":"::channel::Token","value":"","parent":null,"children":[],"decl_id":null,"docs":" Token used to identify a callback in the MatchingReceiver trait\n","sig":null,"attributes":[{"value":"/ Token used to identify a callback in the MatchingReceiver trait","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95810,"byte_end":95877,"line_start":67,"line_end":67,"column_start":1,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95956,"byte_end":95965,"line_start":69,"line_end":69,"column_start":18,"column_end":27},"name":"0","qualname":"::channel::Token::0","value":"usize","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":683},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96040,"byte_end":96056,"line_start":72,"line_end":72,"column_start":11,"column_end":27},"name":"MatchingReceiver","qualname":"::channel::MatchingReceiver","value":"MatchingReceiver","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"decl_id":null,"docs":" Abstraction over different connections that receive data\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections that receive data","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95969,"byte_end":96029,"line_start":71,"line_end":71,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":684},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96093,"byte_end":96094,"line_start":74,"line_end":74,"column_start":10,"column_end":11},"name":"F","qualname":"::channel::MatchingReceiver::F","value":"type F;","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Type of callback\n","sig":null,"attributes":[{"value":"/ Type of callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96063,"byte_end":96083,"line_start":73,"line_end":73,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96237,"byte_end":96250,"line_start":78,"line_end":78,"column_start":8,"column_end":21},"name":"start_receive","qualname":"::channel::MatchingReceiver::start_receive","value":"pub fn start_receive(&Self, MatchRule, Self::F) -> Token","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Add a callback to be called in case a message matches.","sig":null,"attributes":[{"value":"/ Add a callback to be called in case a message matches.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96100,"byte_end":96158,"line_start":75,"line_end":75,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96163,"byte_end":96166,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Returns an id that can be used to remove the callback.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96171,"byte_end":96229,"line_start":77,"line_end":77,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96354,"byte_end":96366,"line_start":80,"line_end":80,"column_start":8,"column_end":20},"name":"stop_receive","qualname":"::channel::MatchingReceiver::stop_receive","value":"pub fn stop_receive(&Self, Token) -> Option<(MatchRule, Self::F)>","parent":{"krate":0,"index":683},"children":[],"decl_id":null,"docs":" Remove a previously added callback.\n","sig":null,"attributes":[{"value":"/ Remove a previously added callback.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96307,"byte_end":96346,"line_start":79,"line_end":79,"column_start":5,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":689},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96805,"byte_end":96818,"line_start":92,"line_end":92,"column_start":8,"column_end":21},"name":"default_reply","qualname":"::channel::default_reply","value":"pub fn default_reply(&Message) -> Option<Message>","parent":null,"children":[],"decl_id":null,"docs":" Handles what we need to be a good D-Bus citizen.","sig":null,"attributes":[{"value":"/ Handles what we need to be a good D-Bus citizen.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96540,"byte_end":96592,"line_start":87,"line_end":87,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96593,"byte_end":96596,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ Call this if you have not handled the message yourself:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96597,"byte_end":96656,"line_start":89,"line_end":89,"column_start":1,"column_end":60}},{"value":"/ * It handles calls to org.freedesktop.DBus.Peer.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96657,"byte_end":96709,"line_start":90,"line_end":90,"column_start":1,"column_end":53}},{"value":"/ * For other method calls, it sends an error reply back that the method was unknown.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96710,"byte_end":96797,"line_start":91,"line_end":91,"column_start":1,"column_end":88}}]},{"kind":"Mod","id":{"krate":0,"index":713},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"blocking","qualname":"::blocking","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","parent":null,"children":[{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724},{"krate":0,"index":725},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733},{"krate":0,"index":4800},{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738},{"krate":0,"index":739},{"krate":0,"index":809},{"krate":0,"index":896},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":921},{"krate":0,"index":924},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2291},{"krate":0,"index":2293},{"krate":0,"index":2299},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2332},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2344},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2377},{"krate":0,"index":2379},{"krate":0,"index":2381},{"krate":0,"index":2383},{"krate":0,"index":2389},{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":932},{"krate":0,"index":934},{"krate":0,"index":2393},{"krate":0,"index":2404},{"krate":0,"index":2400},{"krate":0,"index":936},{"krate":0,"index":942},{"krate":0,"index":960}],"decl_id":null,"docs":" Connections and proxies that make blocking method calls.\n","sig":null,"attributes":[{"value":"/ Connections and proxies that make blocking method calls.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":114841,"byte_end":114901,"line_start":1,"line_end":1,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":743},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":131635,"byte_end":131645,"line_start":7,"line_end":7,"column_start":11,"column_end":21},"name":"Properties","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Properties","value":"Properties","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":748}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":744},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":131655,"byte_end":131658,"line_start":8,"line_end":8,"column_start":8,"column_end":11},"name":"get","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Properties::get","value":"pub fn get<R0: for<'b> arg::Get + 'static>(&Self, &str, &str)\n-> Result<R0, dbus::Error>","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":747},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":131780,"byte_end":131787,"line_start":9,"line_end":9,"column_start":8,"column_end":15},"name":"get_all","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Properties::get_all","value":"pub fn get_all(&Self, &str) -> Result<arg::PropMap, dbus::Error>","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":748},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":131862,"byte_end":131865,"line_start":10,"line_end":10,"column_start":8,"column_end":11},"name":"set","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Properties::set","value":"pub fn set<I2: arg::Arg + arg::Append>(&Self, &str, &str, I2)\n-> Result<(), dbus::Error>","parent":{"krate":0,"index":743},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2183},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":132919,"byte_end":132946,"line_start":31,"line_end":31,"column_start":12,"column_end":39},"name":"PropertiesPropertiesChanged","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::PropertiesPropertiesChanged","value":"PropertiesPropertiesChanged { interface_name, changed_properties, invalidated_properties }","parent":null,"children":[{"krate":0,"index":2184},{"krate":0,"index":2185},{"krate":0,"index":2186}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2184},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":132957,"byte_end":132971,"line_start":32,"line_end":32,"column_start":9,"column_end":23},"name":"interface_name","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::PropertiesPropertiesChanged::interface_name","value":"std::string::String","parent":{"krate":0,"index":2183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2185},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":132989,"byte_end":133007,"line_start":33,"line_end":33,"column_start":9,"column_end":27},"name":"changed_properties","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::PropertiesPropertiesChanged::changed_properties","value":"std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>","parent":{"krate":0,"index":2183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2186},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133031,"byte_end":133053,"line_start":34,"line_end":34,"column_start":9,"column_end":31},"name":"invalidated_properties","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::PropertiesPropertiesChanged::invalidated_properties","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":769},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133872,"byte_end":133886,"line_start":60,"line_end":60,"column_start":11,"column_end":25},"name":"Introspectable","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Introspectable","value":"Introspectable","parent":null,"children":[{"krate":0,"index":770}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":770},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133896,"byte_end":133906,"line_start":61,"line_end":61,"column_start":8,"column_end":18},"name":"introspect","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Introspectable::introspect","value":"pub fn introspect(&Self) -> Result<String, dbus::Error>","parent":{"krate":0,"index":769},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":777},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134272,"byte_end":134276,"line_start":72,"line_end":72,"column_start":11,"column_end":15},"name":"Peer","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Peer","value":"Peer","parent":null,"children":[{"krate":0,"index":778},{"krate":0,"index":779}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":778},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134286,"byte_end":134290,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"ping","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Peer::ping","value":"pub fn ping(&Self) -> Result<(), dbus::Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":779},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134333,"byte_end":134347,"line_start":74,"line_end":74,"column_start":8,"column_end":22},"name":"get_machine_id","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::Peer::get_machine_id","value":"pub fn get_machine_id(&Self) -> Result<String, dbus::Error>","parent":{"krate":0,"index":777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":787},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134820,"byte_end":134833,"line_start":89,"line_end":89,"column_start":11,"column_end":24},"name":"ObjectManager","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManager","value":"ObjectManager","parent":null,"children":[{"krate":0,"index":788}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":788},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134843,"byte_end":134862,"line_start":90,"line_end":90,"column_start":8,"column_end":27},"name":"get_managed_objects","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManager::get_managed_objects","value":"pub fn get_managed_objects(&Self)\n->\n    Result<::std::collections::HashMap<dbus::Path,\n                                       ::std::collections::HashMap<String,\n                                                                   arg::PropMap>>,\n           dbus::Error>","parent":{"krate":0,"index":787},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2189},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135539,"byte_end":135567,"line_start":102,"line_end":102,"column_start":12,"column_end":40},"name":"ObjectManagerInterfacesAdded","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesAdded","value":"ObjectManagerInterfacesAdded { object, interfaces }","parent":null,"children":[{"krate":0,"index":2190},{"krate":0,"index":2191}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2190},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135578,"byte_end":135584,"line_start":103,"line_end":103,"column_start":9,"column_end":15},"name":"object","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesAdded::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2191},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135615,"byte_end":135625,"line_start":104,"line_end":104,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesAdded::interfaces","value":"std::collections::HashMap<std::string::String, std::collections::HashMap<std::string::String, arg::variantstruct_impl::Variant<std::boxed::Box<(dyn arg::msgarg::RefArg + 'static)>>>>","parent":{"krate":0,"index":2189},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2194},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136364,"byte_end":136394,"line_start":129,"line_end":129,"column_start":12,"column_end":42},"name":"ObjectManagerInterfacesRemoved","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesRemoved","value":"ObjectManagerInterfacesRemoved { object, interfaces }","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2195},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136405,"byte_end":136411,"line_start":130,"line_end":130,"column_start":9,"column_end":15},"name":"object","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesRemoved::object","value":"strings::Path<'static>","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2196},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136442,"byte_end":136452,"line_start":131,"line_end":131,"column_start":9,"column_end":19},"name":"interfaces","qualname":"::blocking::generated_org_freedesktop_standard_interfaces::ObjectManagerInterfacesRemoved::interfaces","value":"std::vec::Vec<std::string::String>","parent":{"krate":0,"index":2194},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":896},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115640,"byte_end":115647,"line_start":21,"line_end":21,"column_start":9,"column_end":16},"name":"stdintf","qualname":"::blocking::stdintf","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":911},{"krate":0,"index":913}],"decl_id":null,"docs":" This module contains some standard interfaces and an easy way to call them.","sig":null,"attributes":[{"value":"/ This module contains some standard interfaces and an easy way to call them.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115336,"byte_end":115415,"line_start":16,"line_end":16,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115416,"byte_end":115419,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ See the [D-Bus specification](https://dbus.freedesktop.org/doc/dbus-specification.html#standard-interfaces) for more information about these standard interfaces.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115420,"byte_end":115585,"line_start":18,"line_end":18,"column_start":1,"column_end":166}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115586,"byte_end":115589,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The code was created by dbus-codegen.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115590,"byte_end":115631,"line_start":20,"line_end":20,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":897},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115689,"byte_end":115709,"line_start":23,"line_end":23,"column_start":13,"column_end":33},"name":"org_freedesktop_dbus","qualname":"::blocking::stdintf::org_freedesktop_dbus","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","parent":null,"children":[{"krate":0,"index":898},{"krate":0,"index":2213},{"krate":0,"index":2235},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2228},{"krate":0,"index":2226},{"krate":0,"index":2237},{"krate":0,"index":2256},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":2249},{"krate":0,"index":2247},{"krate":0,"index":899},{"krate":0,"index":905}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115654,"byte_end":115676,"line_start":22,"line_end":22,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2214},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115894,"byte_end":115906,"line_start":28,"line_end":28,"column_start":13,"column_end":25},"name":"PrimaryOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::PrimaryOwner","value":"RequestNameReply::PrimaryOwner","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2217},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115924,"byte_end":115931,"line_start":29,"line_end":29,"column_start":13,"column_end":20},"name":"InQueue","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::InQueue","value":"RequestNameReply::InQueue","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2220},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115949,"byte_end":115955,"line_start":30,"line_end":30,"column_start":13,"column_end":19},"name":"Exists","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::Exists","value":"RequestNameReply::Exists","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2223},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115973,"byte_end":115985,"line_start":31,"line_end":31,"column_start":13,"column_end":25},"name":"AlreadyOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply::AlreadyOwner","value":"RequestNameReply::AlreadyOwner","parent":{"krate":0,"index":2213},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2213},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":115863,"byte_end":115879,"line_start":27,"line_end":27,"column_start":18,"column_end":34},"name":"RequestNameReply","qualname":"::blocking::stdintf::org_freedesktop_dbus::RequestNameReply","value":"pub enum RequestNameReply {\n    PrimaryOwner = ,\n    InQueue = ,\n    Exists = ,\n    AlreadyOwner = ,\n}","parent":null,"children":[{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2220},{"krate":0,"index":2223}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2238},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":116103,"byte_end":116111,"line_start":36,"line_end":36,"column_start":13,"column_end":21},"name":"Released","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::Released","value":"ReleaseNameReply::Released","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2241},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":116129,"byte_end":116140,"line_start":37,"line_end":37,"column_start":13,"column_end":24},"name":"NonExistent","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::NonExistent","value":"ReleaseNameReply::NonExistent","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2244},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":116158,"byte_end":116166,"line_start":38,"line_end":38,"column_start":13,"column_end":21},"name":"NotOwner","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply::NotOwner","value":"ReleaseNameReply::NotOwner","parent":{"krate":0,"index":2237},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2237},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":116072,"byte_end":116088,"line_start":35,"line_end":35,"column_start":18,"column_end":34},"name":"ReleaseNameReply","qualname":"::blocking::stdintf::org_freedesktop_dbus::ReleaseNameReply","value":"pub enum ReleaseNameReply { Released = , NonExistent = , NotOwner = , }","parent":null,"children":[{"krate":0,"index":2238},{"krate":0,"index":2241},{"krate":0,"index":2244}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":915},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":118009,"byte_end":118024,"line_start":82,"line_end":82,"column_start":12,"column_end":27},"name":"LocalConnection","qualname":"::blocking::LocalConnection","value":"LocalConnection {  }","parent":null,"children":[{"krate":0,"index":916},{"krate":0,"index":917}],"decl_id":null,"docs":" A connection to D-Bus, thread local + non-async version\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, thread local + non-async version","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":117938,"byte_end":117997,"line_start":81,"line_end":81,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":918},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":118193,"byte_end":118203,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"Connection","qualname":"::blocking::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":919},{"krate":0,"index":920}],"decl_id":null,"docs":" A connection to D-Bus, non-async version where callbacks are Send but not Sync.\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, non-async version where callbacks are Send but not Sync.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":118098,"byte_end":118181,"line_start":87,"line_end":87,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":921},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":118342,"byte_end":118356,"line_start":94,"line_end":94,"column_start":12,"column_end":26},"name":"SyncConnection","qualname":"::blocking::SyncConnection","value":"SyncConnection {  }","parent":null,"children":[{"krate":0,"index":922},{"krate":0,"index":923}],"decl_id":null,"docs":" A connection to D-Bus, Send + Sync + non-async version\n","sig":null,"attributes":[{"value":"/ A connection to D-Bus, Send + Sync + non-async version","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":118272,"byte_end":118330,"line_start":93,"line_end":93,"column_start":1,"column_end":59}}]},{"kind":"Trait","id":{"krate":0,"index":932},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124641,"byte_end":124655,"line_start":267,"line_end":267,"column_start":11,"column_end":25},"name":"BlockingSender","qualname":"::blocking::BlockingSender","value":"BlockingSender","parent":null,"children":[{"krate":0,"index":933}],"decl_id":null,"docs":" Abstraction over different connections\n","sig":null,"attributes":[{"value":"/ Abstraction over different connections","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124588,"byte_end":124630,"line_start":266,"line_end":266,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124902,"byte_end":124927,"line_start":271,"line_end":271,"column_start":8,"column_end":33},"name":"send_with_reply_and_block","qualname":"::blocking::BlockingSender::send_with_reply_and_block","value":"pub fn send_with_reply_and_block(&Self, Message, Duration)\n-> Result<Message, Error>","parent":{"krate":0,"index":932},"children":[],"decl_id":null,"docs":" Sends a message over the D-Bus and blocks, waiting for a reply or a timeout. This is used for method calls.","sig":null,"attributes":[{"value":"/ Sends a message over the D-Bus and blocks, waiting for a reply or a timeout. This is used for method calls.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124662,"byte_end":124773,"line_start":268,"line_end":268,"column_start":5,"column_end":116}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124778,"byte_end":124781,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ Note: In case of an error reply, this is returned as an Err(), not as a Ok(Message) with the error type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124786,"byte_end":124894,"line_start":270,"line_end":270,"column_start":5,"column_end":113}}]},{"kind":"Struct","id":{"krate":0,"index":2393},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125579,"byte_end":125584,"line_start":286,"line_end":286,"column_start":12,"column_end":17},"name":"Proxy","qualname":"::blocking::Proxy","value":"Proxy { destination, path, timeout, connection }","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399}],"decl_id":null,"docs":" A struct that wraps a connection, destination and path.","sig":null,"attributes":[{"value":"/ A struct that wraps a connection, destination and path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125205,"byte_end":125264,"line_start":280,"line_end":280,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125265,"byte_end":125268,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ A D-Bus \"Proxy\" is a client-side object that corresponds to a remote object on the server side.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125269,"byte_end":125368,"line_start":282,"line_end":282,"column_start":1,"column_end":100}},{"value":"/ Calling methods on the proxy object calls methods on the remote object.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125369,"byte_end":125444,"line_start":283,"line_end":283,"column_start":1,"column_end":76}},{"value":"/ Read more in the [D-Bus tutorial](https://dbus.freedesktop.org/doc/dbus-tutorial.html#proxies)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125445,"byte_end":125543,"line_start":284,"line_end":284,"column_start":1,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":2396},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125672,"byte_end":125683,"line_start":288,"line_end":288,"column_start":9,"column_end":20},"name":"destination","qualname":"::blocking::Proxy::destination","value":"strings::BusName<'a>","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Destination, i e what D-Bus service you're communicating with\n","sig":null,"attributes":[{"value":"/ Destination, i e what D-Bus service you're communicating with","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125598,"byte_end":125663,"line_start":287,"line_end":287,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2397},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125745,"byte_end":125749,"line_start":290,"line_end":290,"column_start":9,"column_end":13},"name":"path","qualname":"::blocking::Proxy::path","value":"strings::Path<'a>","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Object path on the destination\n","sig":null,"attributes":[{"value":"/ Object path on the destination","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125702,"byte_end":125736,"line_start":289,"line_end":289,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2398},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125802,"byte_end":125809,"line_start":292,"line_end":292,"column_start":9,"column_end":16},"name":"timeout","qualname":"::blocking::Proxy::timeout","value":"std::time::Duration","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Timeout for method calls\n","sig":null,"attributes":[{"value":"/ Timeout for method calls","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125765,"byte_end":125793,"line_start":291,"line_end":291,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2399},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125912,"byte_end":125922,"line_start":294,"line_end":294,"column_start":9,"column_end":19},"name":"connection","qualname":"::blocking::Proxy::connection","value":"C","parent":{"krate":0,"index":2393},"children":[],"decl_id":null,"docs":" Some way to send and/or receive messages, either blocking or non-blocking.\n","sig":null,"attributes":[{"value":"/ Some way to send and/or receive messages, either blocking or non-blocking.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125825,"byte_end":125903,"line_start":293,"line_end":293,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126004,"byte_end":126007,"line_start":299,"line_end":299,"column_start":12,"column_end":15},"name":"new","qualname":"<Proxy>::new","value":"pub fn new<D: Into<BusName>, P: Into<Path>>(D, P, Duration, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new proxy struct.\n","sig":null,"attributes":[{"value":"/ Creates a new proxy struct.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125961,"byte_end":125992,"line_start":298,"line_end":298,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":946},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126940,"byte_end":126951,"line_start":319,"line_end":319,"column_start":12,"column_end":23},"name":"method_call","qualname":"<Proxy>::method_call","value":"pub fn method_call<'i, 'm, R: ReadAll, A: AppendAll, I: Into<Interface>,\n                   M: Into<Member>>(&Self, I, M, A) -> Result<R, Error>","parent":null,"children":[],"decl_id":null,"docs":" Make a method call using typed input and output arguments, then block waiting for a reply.","sig":null,"attributes":[{"value":"/ Make a method call using typed input and output arguments, then block waiting for a reply.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126348,"byte_end":126442,"line_start":306,"line_end":306,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126447,"byte_end":126450,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126455,"byte_end":126468,"line_start":308,"line_end":308,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126473,"byte_end":126476,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126481,"byte_end":126488,"line_start":310,"line_end":310,"column_start":5,"column_end":12}},{"value":"/ use dbus::blocking::{Connection, Proxy};","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126493,"byte_end":126537,"line_start":311,"line_end":311,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126542,"byte_end":126545,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ let conn = Connection::new_session()?;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126550,"byte_end":126592,"line_start":313,"line_end":313,"column_start":5,"column_end":47}},{"value":"/ let proxy = Proxy::new(\"org.freedesktop.DBus\", \"/\", std::time::Duration::from_millis(5000), &conn);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126597,"byte_end":126700,"line_start":314,"line_end":314,"column_start":5,"column_end":108}},{"value":"/ let (has_owner,): (bool,) = proxy.method_call(\"org.freedesktop.DBus\", \"NameHasOwner\", (\"dummy.name.without.owner\",))?;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126705,"byte_end":126827,"line_start":315,"line_end":315,"column_start":5,"column_end":127}},{"value":"/ assert_eq!(has_owner, false);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126832,"byte_end":126865,"line_start":316,"line_end":316,"column_start":5,"column_end":38}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(())","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126870,"byte_end":126916,"line_start":317,"line_end":317,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126921,"byte_end":126928,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":953},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127709,"byte_end":127720,"line_start":333,"line_end":333,"column_start":12,"column_end":23},"name":"match_start","qualname":"<Proxy>::match_start","value":"pub fn match_start(&Self, MatchRule, bool,\n                   <T as channel::MatchingReceiver>::F)\n-> Result<Token, Error> where T: channel::MatchingReceiver","parent":null,"children":[],"decl_id":null,"docs":" Starts matching incoming messages on this destination and path.","sig":null,"attributes":[{"value":"/ Starts matching incoming messages on this destination and path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127362,"byte_end":127429,"line_start":326,"line_end":326,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127434,"byte_end":127437,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ For matching signals, match_signal might be more convenient.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127442,"byte_end":127506,"line_start":328,"line_end":328,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127511,"byte_end":127514,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ The match rule will be modified to include this path and destination only.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127519,"byte_end":127597,"line_start":330,"line_end":330,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127602,"byte_end":127605,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ If call_add_match is true, will notify the D-Bus server that matching should start.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":127610,"byte_end":127697,"line_start":332,"line_end":332,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":955},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128520,"byte_end":128530,"line_start":351,"line_end":351,"column_start":12,"column_end":22},"name":"match_stop","qualname":"<Proxy>::match_stop","value":"pub fn match_stop(&Self, Token, bool) -> Result<(), Error> where\nT: channel::MatchingReceiver","parent":null,"children":[],"decl_id":null,"docs":" Stops matching a signal added with match_start or match_signal.","sig":null,"attributes":[{"value":"/ Stops matching a signal added with match_start or match_signal.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128280,"byte_end":128347,"line_start":347,"line_end":347,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128352,"byte_end":128355,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If call_remove_match is true, will notify the D-Bus server that matching should stop,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128360,"byte_end":128449,"line_start":349,"line_end":349,"column_start":5,"column_end":94}},{"value":"/ this should be true in case match_signal was used.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128454,"byte_end":128508,"line_start":350,"line_end":350,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":957},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129225,"byte_end":129237,"line_start":367,"line_end":367,"column_start":12,"column_end":24},"name":"match_signal","qualname":"<Proxy>::match_signal","value":"pub fn match_signal<S: SignalArgs + ReadAll, F>(&Self, F)\n-> Result<Token, Error> where T: channel::MatchingReceiver,\nF: MakeSignal<<T as channel::MatchingReceiver>::F, S, T>","parent":null,"children":[],"decl_id":null,"docs":" Sets up an incoming signal match, that calls the supplied callback every time the signal is received.","sig":null,"attributes":[{"value":"/ Sets up an incoming signal match, that calls the supplied callback every time the signal is received.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":128973,"byte_end":129078,"line_start":363,"line_end":363,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129083,"byte_end":129086,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value can be used to remove the match. The match is also removed if the callback","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129091,"byte_end":129188,"line_start":365,"line_end":365,"column_start":5,"column_end":102}},{"value":"/ returns \"false\".","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129193,"byte_end":129213,"line_start":366,"line_end":366,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":960},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129631,"byte_end":129641,"line_start":378,"line_end":378,"column_start":11,"column_end":21},"name":"MakeSignal","qualname":"::blocking::MakeSignal","value":"MakeSignal<G, S, T>","parent":null,"children":[{"krate":0,"index":964}],"decl_id":null,"docs":" Internal helper trait\n","sig":null,"attributes":[{"value":"/ Internal helper trait","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129595,"byte_end":129620,"line_start":377,"line_end":377,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":964},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129690,"byte_end":129694,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"make","qualname":"::blocking::MakeSignal::make","value":"pub fn make(Self, String) -> G","parent":{"krate":0,"index":960},"children":[],"decl_id":null,"docs":" Internal helper trait\n","sig":null,"attributes":[{"value":"/ Internal helper trait","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":129657,"byte_end":129682,"line_start":379,"line_end":379,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":965},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"strings","qualname":"::strings","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":2408},{"krate":0,"index":2436},{"krate":0,"index":2430},{"krate":0,"index":2432},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2418},{"krate":0,"index":2415},{"krate":0,"index":2412},{"krate":0,"index":2439},{"krate":0,"index":2451},{"krate":0,"index":2454},{"krate":0,"index":2457},{"krate":0,"index":2460},{"krate":0,"index":2463},{"krate":0,"index":2466},{"krate":0,"index":2469},{"krate":0,"index":2473},{"krate":0,"index":2477},{"krate":0,"index":2480},{"krate":0,"index":982},{"krate":0,"index":2484},{"krate":0,"index":2512},{"krate":0,"index":2506},{"krate":0,"index":2508},{"krate":0,"index":2501},{"krate":0,"index":2503},{"krate":0,"index":2494},{"krate":0,"index":2491},{"krate":0,"index":2488},{"krate":0,"index":2515},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2536},{"krate":0,"index":2539},{"krate":0,"index":2542},{"krate":0,"index":2545},{"krate":0,"index":2549},{"krate":0,"index":2553},{"krate":0,"index":2556},{"krate":0,"index":985},{"krate":0,"index":2560},{"krate":0,"index":2588},{"krate":0,"index":2582},{"krate":0,"index":2584},{"krate":0,"index":2577},{"krate":0,"index":2579},{"krate":0,"index":2570},{"krate":0,"index":2567},{"krate":0,"index":2564},{"krate":0,"index":2591},{"krate":0,"index":2603},{"krate":0,"index":2606},{"krate":0,"index":2609},{"krate":0,"index":2612},{"krate":0,"index":2615},{"krate":0,"index":2618},{"krate":0,"index":2621},{"krate":0,"index":2625},{"krate":0,"index":2629},{"krate":0,"index":2632},{"krate":0,"index":2636},{"krate":0,"index":2664},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2653},{"krate":0,"index":2655},{"krate":0,"index":2646},{"krate":0,"index":2643},{"krate":0,"index":2640},{"krate":0,"index":2667},{"krate":0,"index":2679},{"krate":0,"index":2682},{"krate":0,"index":2685},{"krate":0,"index":2688},{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697},{"krate":0,"index":2701},{"krate":0,"index":2705},{"krate":0,"index":2708},{"krate":0,"index":2712},{"krate":0,"index":2740},{"krate":0,"index":2734},{"krate":0,"index":2736},{"krate":0,"index":2729},{"krate":0,"index":2731},{"krate":0,"index":2722},{"krate":0,"index":2719},{"krate":0,"index":2716},{"krate":0,"index":2743},{"krate":0,"index":2755},{"krate":0,"index":2758},{"krate":0,"index":2761},{"krate":0,"index":2764},{"krate":0,"index":2767},{"krate":0,"index":2770},{"krate":0,"index":2773},{"krate":0,"index":2777},{"krate":0,"index":2781},{"krate":0,"index":2784},{"krate":0,"index":2788},{"krate":0,"index":2816},{"krate":0,"index":2810},{"krate":0,"index":2812},{"krate":0,"index":2805},{"krate":0,"index":2807},{"krate":0,"index":2798},{"krate":0,"index":2795},{"krate":0,"index":2792},{"krate":0,"index":2819},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2837},{"krate":0,"index":2840},{"krate":0,"index":2843},{"krate":0,"index":2846},{"krate":0,"index":2849},{"krate":0,"index":2853},{"krate":0,"index":2857},{"krate":0,"index":2860}],"decl_id":null,"docs":" This module contains strings with a specific format, such as a valid\n Interface name, a valid Error name, etc.","sig":null,"attributes":[{"value":"/ This module contains strings with a specific format, such as a valid","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145512,"byte_end":145584,"line_start":1,"line_end":1,"column_start":1,"column_end":73}},{"value":"/ Interface name, a valid Error name, etc.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145585,"byte_end":145629,"line_start":2,"line_end":2,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145630,"byte_end":145633,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ (The internal representation of these strings are `Cow<str>`, but with a \\0 byte","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145634,"byte_end":145718,"line_start":4,"line_end":4,"column_start":1,"column_end":85}},{"value":"/ at the end to use it libdbus calls without extra allocations. This is usually nothing","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145719,"byte_end":145808,"line_start":5,"line_end":5,"column_start":1,"column_end":90}},{"value":"/ you have to worry about.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":145809,"byte_end":145838,"line_start":6,"line_end":6,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":2408},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":150924,"byte_end":150933,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"Signature","qualname":"::strings::Signature","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid (single) D-Bus type signature.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":150759,"byte_end":150813,"line_start":170,"line_end":170,"column_start":1,"column_end":55}},{"value":"/ a valid (single) D-Bus type signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":150814,"byte_end":150856,"line_start":171,"line_end":171,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":983},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151108,"byte_end":151112,"line_start":179,"line_end":179,"column_start":12,"column_end":16},"name":"make","qualname":"<Signature>::make","value":"pub fn make<A: super::arg::Arg>() -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Makes a D-Bus signature that corresponds to A.\n","sig":null,"attributes":[{"value":"/ Makes a D-Bus signature that corresponds to A.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151046,"byte_end":151096,"line_start":178,"line_end":178,"column_start":5,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":2484},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151332,"byte_end":151336,"line_start":185,"line_end":185,"column_start":12,"column_end":16},"name":"Path","qualname":"::strings::Path","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus object path.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151179,"byte_end":151233,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus object path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151234,"byte_end":151264,"line_start":183,"line_end":183,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":2560},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151741,"byte_end":151747,"line_start":197,"line_end":197,"column_start":12,"column_end":18},"name":"Member","qualname":"::strings::Member","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus member, i e, a signal or method name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151563,"byte_end":151617,"line_start":194,"line_end":194,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus member, i e, a signal or method name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151618,"byte_end":151673,"line_start":195,"line_end":195,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":2636},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151973,"byte_end":151982,"line_start":204,"line_end":204,"column_start":12,"column_end":21},"name":"Interface","qualname":"::strings::Interface","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus interface name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151817,"byte_end":151871,"line_start":201,"line_end":201,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus interface name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151872,"byte_end":151905,"line_start":202,"line_end":202,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152208,"byte_end":152215,"line_start":211,"line_end":211,"column_start":12,"column_end":19},"name":"BusName","qualname":"::strings::BusName","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus bus name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152058,"byte_end":152112,"line_start":208,"line_end":208,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus bus name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152113,"byte_end":152140,"line_start":209,"line_end":209,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2788},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152440,"byte_end":152449,"line_start":218,"line_end":218,"column_start":12,"column_end":21},"name":"ErrorName","qualname":"::strings::ErrorName","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper around a string that is guaranteed to be\n a valid D-Bus error name.\n","sig":null,"attributes":[{"value":"/ A wrapper around a string that is guaranteed to be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152288,"byte_end":152342,"line_start":215,"line_end":215,"column_start":1,"column_end":55}},{"value":"/ a valid D-Bus error name.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":152343,"byte_end":152372,"line_start":216,"line_end":216,"column_start":1,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":991},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arg","qualname":"::arg","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","parent":null,"children":[{"krate":0,"index":992},{"krate":0,"index":1095},{"krate":0,"index":1190},{"krate":0,"index":1253},{"krate":0,"index":1531},{"krate":0,"index":1707},{"krate":0,"index":1708},{"krate":0,"index":1709},{"krate":0,"index":1710},{"krate":0,"index":1711},{"krate":0,"index":1712},{"krate":0,"index":1713},{"krate":0,"index":1714},{"krate":0,"index":1715},{"krate":0,"index":1716},{"krate":0,"index":1717},{"krate":0,"index":1718},{"krate":0,"index":1719},{"krate":0,"index":1720},{"krate":0,"index":1721},{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724},{"krate":0,"index":5050},{"krate":0,"index":1725},{"krate":0,"index":1726},{"krate":0,"index":1727},{"krate":0,"index":1728},{"krate":0,"index":1729},{"krate":0,"index":1730},{"krate":0,"index":1731},{"krate":0,"index":1732},{"krate":0,"index":1733},{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1739},{"krate":0,"index":1740},{"krate":0,"index":1741},{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":4350},{"krate":0,"index":4362},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4352},{"krate":0,"index":1749},{"krate":0,"index":1752},{"krate":0,"index":1754},{"krate":0,"index":1756},{"krate":0,"index":1758},{"krate":0,"index":1760},{"krate":0,"index":4364},{"krate":0,"index":4371},{"krate":0,"index":4369},{"krate":0,"index":1762},{"krate":0,"index":4374},{"krate":0,"index":4382},{"krate":0,"index":4380},{"krate":0,"index":1780},{"krate":0,"index":1794},{"krate":0,"index":1797},{"krate":0,"index":4385},{"krate":0,"index":4457},{"krate":0,"index":4455},{"krate":0,"index":4453},{"krate":0,"index":4450},{"krate":0,"index":4447},{"krate":0,"index":4448},{"krate":0,"index":4444},{"krate":0,"index":4445},{"krate":0,"index":4442},{"krate":0,"index":4440},{"krate":0,"index":1801},{"krate":0,"index":1803},{"krate":0,"index":4458},{"krate":0,"index":4472},{"krate":0,"index":4471},{"krate":0,"index":4469},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":1809},{"krate":0,"index":1813},{"krate":0,"index":1816},{"krate":0,"index":1818}],"decl_id":null,"docs":" Types and traits for easily getting a message's arguments, or appening a message with arguments.","sig":null,"attributes":[{"value":"/ Types and traits for easily getting a message's arguments, or appening a message with arguments.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153322,"byte_end":153422,"line_start":1,"line_end":1,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153423,"byte_end":153426,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Also see the arguments guide (in the examples directory).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153427,"byte_end":153488,"line_start":3,"line_end":3,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153489,"byte_end":153492,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ A message has `read1`, `read2` etc, and `append1`, `append2` etc, which is your","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153493,"byte_end":153576,"line_start":5,"line_end":5,"column_start":1,"column_end":84}},{"value":"/ starting point into this module's types.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153577,"byte_end":153621,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153622,"byte_end":153625,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ **Append a**:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153626,"byte_end":153643,"line_start":8,"line_end":8,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153644,"byte_end":153647,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ `bool, u8, u16, u32, u64, i16, i32, i64, f64` - the corresponding D-Bus basic type","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153648,"byte_end":153734,"line_start":10,"line_end":10,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153735,"byte_end":153738,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `&str` - a D-Bus string. D-Bus strings do not allow null characters, so","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153739,"byte_end":153814,"line_start":12,"line_end":12,"column_start":1,"column_end":76}},{"value":"/ if the string contains null characters, it will be cropped","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153815,"byte_end":153877,"line_start":13,"line_end":13,"column_start":1,"column_end":63}},{"value":"/ to only include the data before the null character. (Tip: This allows for skipping an","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153878,"byte_end":153967,"line_start":14,"line_end":14,"column_start":1,"column_end":90}},{"value":"/ allocation by writing a string literal which ends with a null character.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":153968,"byte_end":154045,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154046,"byte_end":154049,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `&[T] where T: Append` - a D-Bus array. Note: can use an efficient fast-path in case of","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154050,"byte_end":154141,"line_start":17,"line_end":17,"column_start":1,"column_end":92}},{"value":"/ T being an FixedArray type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154142,"byte_end":154173,"line_start":18,"line_end":18,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154174,"byte_end":154177,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ `Array<T, I> where T: Append, I: Iterator<Item=T>` - a D-Bus array, maximum flexibility.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154178,"byte_end":154270,"line_start":20,"line_end":20,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154271,"byte_end":154274,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ `Variant<T> where T: Append` - a D-Bus variant.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154275,"byte_end":154326,"line_start":22,"line_end":22,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154327,"byte_end":154330,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ `(T1, T2) where T1: Append, T2: Append` - tuples are D-Bus structs. Implemented up to 12.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154331,"byte_end":154424,"line_start":24,"line_end":24,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154425,"byte_end":154428,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ `Dict<K, V, I> where K: Append + DictKey, V: Append, I: Iterator<Item=(&K, &V)>` - A D-Bus dict (array of dict entries).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154429,"byte_end":154553,"line_start":26,"line_end":26,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154554,"byte_end":154557,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Path` - a D-Bus object path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154558,"byte_end":154591,"line_start":28,"line_end":28,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154592,"byte_end":154595,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Signature` - a D-Bus signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154596,"byte_end":154632,"line_start":30,"line_end":30,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154633,"byte_end":154636,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ `OwnedFd` - shares the file descriptor with the remote side.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154637,"byte_end":154701,"line_start":32,"line_end":32,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154702,"byte_end":154705,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ **Get / read a**:","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154706,"byte_end":154727,"line_start":34,"line_end":34,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154728,"byte_end":154731,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ `bool, u8, u16, u32, u64, i16, i32, i64, f64` - the corresponding D-Bus basic type","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154732,"byte_end":154818,"line_start":36,"line_end":36,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154819,"byte_end":154822,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ `&str`, `&CStr` - a D-Bus string. D-Bus strings are always UTF-8 and do not contain null characters.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154823,"byte_end":154927,"line_start":38,"line_end":38,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154928,"byte_end":154931,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ `&[T] where T: FixedArray` - a D-Bus array of integers or f64.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154932,"byte_end":154998,"line_start":40,"line_end":40,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":154999,"byte_end":155002,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ `Array<T, Iter> where T: Get` - a D-Bus array, maximum flexibility. Implements Iterator so you can easily","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155003,"byte_end":155112,"line_start":42,"line_end":42,"column_start":1,"column_end":110}},{"value":"/ collect it into, e g, a `Vec`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155113,"byte_end":155147,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155148,"byte_end":155151,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ `Variant<T> where T: Get` - a D-Bus variant. Use this type of Variant if you know the inner type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155152,"byte_end":155253,"line_start":45,"line_end":45,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155254,"byte_end":155257,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ `Variant<Iter>` - a D-Bus variant. This type of Variant allows you to examine the inner type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155258,"byte_end":155355,"line_start":47,"line_end":47,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155356,"byte_end":155359,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ `(T1, T2) where T1: Get, T2: Get` - tuples are D-Bus structs. Implemented up to 12.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155360,"byte_end":155447,"line_start":49,"line_end":49,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155448,"byte_end":155451,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ `Dict<K, V, Iter> where K: Get + DictKey, V: Get` - A D-Bus dict (array of dict entries). Implements Iterator so you can easily","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155452,"byte_end":155583,"line_start":51,"line_end":51,"column_start":1,"column_end":132}},{"value":"/ collect it into, e g, a `HashMap`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155584,"byte_end":155622,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155623,"byte_end":155626,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ `Path` - a D-Bus object path.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155627,"byte_end":155660,"line_start":54,"line_end":54,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155661,"byte_end":155664,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ `Signature` - a D-Bus signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155665,"byte_end":155701,"line_start":56,"line_end":56,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155702,"byte_end":155705,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ `OwnedFd` - a file descriptor sent from the remote side.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155706,"byte_end":155766,"line_start":58,"line_end":58,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155767,"byte_end":155770,"line_start":59,"line_end":59,"column_start":1,"column_end":4}}]},{"kind":"Trait","id":{"krate":0,"index":1006},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172798,"byte_end":172801,"line_start":14,"line_end":14,"column_start":11,"column_end":14},"name":"Arg","qualname":"::arg::msgarg::Arg","value":"Arg","parent":null,"children":[{"krate":0,"index":1007},{"krate":0,"index":1008}],"decl_id":null,"docs":" Types that can represent a D-Bus message argument implement this trait.","sig":null,"attributes":[{"value":"/ Types that can represent a D-Bus message argument implement this trait.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172641,"byte_end":172716,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172717,"byte_end":172720,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Types should also implement either Append or Get to be useful.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172721,"byte_end":172787,"line_start":13,"line_end":13,"column_start":1,"column_end":67}}]},{"kind":"Const","id":{"krate":0,"index":1007},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172866,"byte_end":172874,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"ARG_TYPE","qualname":"::arg::msgarg::Arg::ARG_TYPE","value":"ArgType","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The corresponding D-Bus argument type code.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus argument type code.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172808,"byte_end":172855,"line_start":15,"line_end":15,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172954,"byte_end":172963,"line_start":18,"line_end":18,"column_start":8,"column_end":17},"name":"signature","qualname":"::arg::msgarg::Arg::signature","value":"pub fn signature() -> Signature","parent":{"krate":0,"index":1006},"children":[],"decl_id":null,"docs":" The corresponding D-Bus type signature for this type.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus type signature for this type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172889,"byte_end":172946,"line_start":17,"line_end":17,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":1009},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173049,"byte_end":173055,"line_start":22,"line_end":22,"column_start":11,"column_end":17},"name":"ArgAll","qualname":"::arg::msgarg::ArgAll","value":"ArgAll","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"decl_id":null,"docs":" Helper trait to introspect many arguments.\n","sig":null,"attributes":[{"value":"/ Helper trait to introspect many arguments.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":172992,"byte_end":173038,"line_start":21,"line_end":21,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":1010},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173249,"byte_end":173253,"line_start":25,"line_end":25,"column_start":10,"column_end":14},"name":"strs","qualname":"::arg::msgarg::ArgAll::strs","value":"type strs;","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" A tuple of &static str. Used for introspection.\n","sig":null,"attributes":[{"value":"/ A tuple of &static str. Used for introspection.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173062,"byte_end":173113,"line_start":23,"line_end":23,"column_start":5,"column_end":56}},{"value":"allow(non_camel_case_types)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173118,"byte_end":173148,"line_start":24,"line_end":24,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173348,"byte_end":173356,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"strs_sig","qualname":"::arg::msgarg::ArgAll::strs_sig","value":"pub fn strs_sig<F: FnMut(&'static str, Signature) -> ()>(Self::strs, F)","parent":{"krate":0,"index":1009},"children":[],"decl_id":null,"docs":" Enumerates all arguments with their signatures (introspection helper method).\n","sig":null,"attributes":[{"value":"/ Enumerates all arguments with their signatures (introspection helper method).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173259,"byte_end":173340,"line_start":26,"line_end":26,"column_start":5,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":1013},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173515,"byte_end":173521,"line_start":31,"line_end":31,"column_start":11,"column_end":17},"name":"Append","qualname":"::arg::msgarg::Append","value":"Append","parent":null,"children":[{"krate":0,"index":1014},{"krate":0,"index":1015}],"decl_id":null,"docs":" Types that can be appended to a message as arguments implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be appended to a message as arguments implement this trait.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173426,"byte_end":173504,"line_start":30,"line_end":30,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1014},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173588,"byte_end":173594,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::Append::append","value":"pub fn append(Self, &mut IterAppend) where Self: Sized","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":" Performs the append operation by consuming self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by consuming self.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173528,"byte_end":173580,"line_start":32,"line_end":32,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173732,"byte_end":173745,"line_start":36,"line_end":36,"column_start":8,"column_end":21},"name":"append_by_ref","qualname":"::arg::msgarg::Append::append_by_ref","value":"pub fn append_by_ref(&Self, &mut IterAppend)","parent":{"krate":0,"index":1013},"children":[],"decl_id":null,"docs":" Performs the append operation by borrowing self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by borrowing self.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173672,"byte_end":173724,"line_start":35,"line_end":35,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1016},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173843,"byte_end":173852,"line_start":40,"line_end":40,"column_start":11,"column_end":20},"name":"AppendAll","qualname":"::arg::msgarg::AppendAll","value":"AppendAll","parent":null,"children":[{"krate":0,"index":1017}],"decl_id":null,"docs":" Helper trait to append many arguments to a message.\n","sig":null,"attributes":[{"value":"/ Helper trait to append many arguments to a message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173777,"byte_end":173832,"line_start":39,"line_end":39,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173919,"byte_end":173925,"line_start":42,"line_end":42,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::AppendAll::append","value":"pub fn append(&Self, &mut IterAppend)","parent":{"krate":0,"index":1016},"children":[],"decl_id":null,"docs":" Performs the append operation by borrowing self.\n","sig":null,"attributes":[{"value":"/ Performs the append operation by borrowing self.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173859,"byte_end":173911,"line_start":41,"line_end":41,"column_start":5,"column_end":57}}]},{"kind":"Trait","id":{"krate":0,"index":1018},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174049,"byte_end":174052,"line_start":46,"line_end":46,"column_start":11,"column_end":14},"name":"Get","qualname":"::arg::msgarg::Get","value":"Get<'a>: Sized","parent":null,"children":[{"krate":0,"index":1020}],"decl_id":null,"docs":" Types that can be retrieved from a message as arguments implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be retrieved from a message as arguments implement this trait.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":173957,"byte_end":174038,"line_start":45,"line_end":45,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174109,"byte_end":174112,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"get","qualname":"::arg::msgarg::Get::get","value":"pub fn get(&mut Iter) -> Option<Self>","parent":{"krate":0,"index":1018},"children":[],"decl_id":null,"docs":" Performs the get operation.\n","sig":null,"attributes":[{"value":"/ Performs the get operation.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174070,"byte_end":174101,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":1021},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174216,"byte_end":174223,"line_start":52,"line_end":52,"column_start":11,"column_end":18},"name":"ReadAll","qualname":"::arg::msgarg::ReadAll","value":"ReadAll: Sized","parent":null,"children":[{"krate":0,"index":1022}],"decl_id":null,"docs":" Helper trait to read all arguments from a message.\n","sig":null,"attributes":[{"value":"/ Helper trait to read all arguments from a message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174151,"byte_end":174205,"line_start":51,"line_end":51,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174277,"byte_end":174281,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"read","qualname":"::arg::msgarg::ReadAll::read","value":"pub fn read(&mut Iter) -> Result<Self, TypeMismatchError>","parent":{"krate":0,"index":1021},"children":[],"decl_id":null,"docs":" Performs the read operation.\n","sig":null,"attributes":[{"value":"/ Performs the read operation.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174237,"byte_end":174269,"line_start":53,"line_end":53,"column_start":5,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":1023},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174393,"byte_end":174399,"line_start":59,"line_end":59,"column_start":11,"column_end":17},"name":"RefArg","qualname":"::arg::msgarg::RefArg","value":"RefArg: fmt::Debug + Send + Sync","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1036},{"krate":0,"index":1037}],"decl_id":null,"docs":" Object safe version of Arg + Append + Get.\n","sig":null,"attributes":[{"value":"/ Object safe version of Arg + Append + Get.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174336,"byte_end":174382,"line_start":58,"line_end":58,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174487,"byte_end":174495,"line_start":61,"line_end":61,"column_start":8,"column_end":16},"name":"arg_type","qualname":"::arg::msgarg::RefArg::arg_type","value":"pub fn arg_type(&Self) -> ArgType","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" The corresponding D-Bus argument type code.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus argument type code.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174432,"byte_end":174479,"line_start":60,"line_end":60,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174584,"byte_end":174593,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"signature","qualname":"::arg::msgarg::RefArg::signature","value":"pub fn signature(&Self) -> Signature","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" The corresponding D-Bus type signature for this type.\n","sig":null,"attributes":[{"value":"/ The corresponding D-Bus type signature for this type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174519,"byte_end":174576,"line_start":62,"line_end":62,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174670,"byte_end":174676,"line_start":65,"line_end":65,"column_start":8,"column_end":14},"name":"append","qualname":"::arg::msgarg::RefArg::append","value":"pub fn append(&Self, &mut IterAppend)","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Performs the append operation.\n","sig":null,"attributes":[{"value":"/ Performs the append operation.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174628,"byte_end":174662,"line_start":64,"line_end":64,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175219,"byte_end":175225,"line_start":74,"line_end":74,"column_start":8,"column_end":14},"name":"as_any","qualname":"::arg::msgarg::RefArg::as_any","value":"pub fn as_any(&Self) -> &any::Any where Self: 'static","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Transforms this argument to Any (which can be downcasted to read the current value).","sig":null,"attributes":[{"value":"/ Transforms this argument to Any (which can be downcasted to read the current value).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174709,"byte_end":174797,"line_start":66,"line_end":66,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174802,"byte_end":174805,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If the type is an array, and the element type is byte, numeric, boolean, or string, then the","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174810,"byte_end":174906,"line_start":68,"line_end":68,"column_start":5,"column_end":101}},{"value":"/ representation is guaranteed to be a Vec<T>. Arrays of structs, dicts, and so on are not","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174911,"byte_end":175003,"line_start":69,"line_end":69,"column_start":5,"column_end":97}},{"value":"/ safe to use with this.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175008,"byte_end":175034,"line_start":70,"line_end":70,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175039,"byte_end":175042,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note: The internal representation of complex types (Dict, Struct) is unstable","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175047,"byte_end":175128,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/ and as_any should not be relied upon for these types. Use as_iter instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175133,"byte_end":175211,"line_start":73,"line_end":73,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175937,"byte_end":175947,"line_start":87,"line_end":87,"column_start":8,"column_end":18},"name":"as_any_mut","qualname":"::arg::msgarg::RefArg::as_any_mut","value":"pub fn as_any_mut(&mut Self) -> &mut any::Any where Self: 'static","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Transforms this argument to Any (which can be downcasted to read the current value).","sig":null,"attributes":[{"value":"/ Transforms this argument to Any (which can be downcasted to read the current value).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175275,"byte_end":175363,"line_start":75,"line_end":75,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175368,"byte_end":175371,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ If the type is an array, and the element type is byte, numeric, boolean, or string, then the","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175376,"byte_end":175472,"line_start":77,"line_end":77,"column_start":5,"column_end":101}},{"value":"/ representation is guaranteed to be a Vec<T>. Arrays of structs, dicts, and so on are not","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175477,"byte_end":175569,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ safe to use with this.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175574,"byte_end":175600,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175605,"byte_end":175608,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note: The internal representation of complex types (Dict, Struct) is unstable","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175613,"byte_end":175694,"line_start":81,"line_end":81,"column_start":5,"column_end":86}},{"value":"/ and as_any should not be relied upon for these types. Use as_iter instead.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175699,"byte_end":175777,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175782,"byte_end":175785,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ # Panic","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175790,"byte_end":175801,"line_start":84,"line_end":84,"column_start":5,"column_end":16}},{"value":"/ Will panic if the interior cannot be made mutable, e g, if encapsulated","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175806,"byte_end":175881,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ inside a Rc with a reference count > 1.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":175886,"byte_end":175929,"line_start":86,"line_end":86,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176153,"byte_end":176159,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"as_i64","qualname":"::arg::msgarg::RefArg::as_i64","value":"pub fn as_i64(&Self) -> Option<i64>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the argument as an i64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an i64.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176005,"byte_end":176044,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176049,"byte_end":176052,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, Int64, UnixFd.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176057,"byte_end":176131,"line_start":90,"line_end":90,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176136,"byte_end":176145,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176336,"byte_end":176342,"line_start":97,"line_end":97,"column_start":8,"column_end":14},"name":"as_u64","qualname":"::arg::msgarg::RefArg::as_u64","value":"pub fn as_u64(&Self) -> Option<u64>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the argument as an u64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an u64.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176195,"byte_end":176234,"line_start":93,"line_end":93,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176239,"byte_end":176242,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, UInt64.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176247,"byte_end":176314,"line_start":95,"line_end":95,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176319,"byte_end":176328,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176519,"byte_end":176525,"line_start":102,"line_end":102,"column_start":8,"column_end":14},"name":"as_f64","qualname":"::arg::msgarg::RefArg::as_f64","value":"pub fn as_f64(&Self) -> Option<f64>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the argument as an f64.","sig":null,"attributes":[{"value":"/ Try to read the argument as an f64.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176378,"byte_end":176417,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176422,"byte_end":176425,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ Works for: Boolean, Byte, Int16, UInt16, Int32, UInt32, Double.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176430,"byte_end":176497,"line_start":100,"line_end":100,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176502,"byte_end":176511,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1032},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176679,"byte_end":176685,"line_start":107,"line_end":107,"column_start":8,"column_end":14},"name":"as_str","qualname":"::arg::msgarg::RefArg::as_str","value":"pub fn as_str(&Self) -> Option<&str>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the argument as a str.","sig":null,"attributes":[{"value":"/ Try to read the argument as a str.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176561,"byte_end":176599,"line_start":103,"line_end":103,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176604,"byte_end":176607,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Works for: String, ObjectPath, Signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176612,"byte_end":176657,"line_start":105,"line_end":105,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176662,"byte_end":176671,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1033},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176896,"byte_end":176903,"line_start":113,"line_end":113,"column_start":8,"column_end":15},"name":"as_iter","qualname":"::arg::msgarg::RefArg::as_iter","value":"pub fn as_iter<'a>(&'a Self) -> Option<Box<Iterator<Item = &'a RefArg> + 'a>>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the argument as an iterator.","sig":null,"attributes":[{"value":"/ Try to read the argument as an iterator.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176722,"byte_end":176766,"line_start":108,"line_end":108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176771,"byte_end":176774,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ Works for: Array/Dict, Struct, Variant.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176779,"byte_end":176822,"line_start":110,"line_end":110,"column_start":5,"column_end":48}},{"value":"/ For Dicts, keys and values are interleaved.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176827,"byte_end":176874,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176879,"byte_end":176888,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1035},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177218,"byte_end":177233,"line_start":119,"line_end":119,"column_start":8,"column_end":23},"name":"as_static_inner","qualname":"::arg::msgarg::RefArg::as_static_inner","value":"pub fn as_static_inner(&Self, usize) -> Option<&RefArg + 'static> where\nSelf: 'static","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Try to read the inner of an argument, as another argument, specifying an index.","sig":null,"attributes":[{"value":"/ Try to read the inner of an argument, as another argument, specifying an index.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":176986,"byte_end":177069,"line_start":114,"line_end":114,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177074,"byte_end":177077,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Works for: Variant, Array, Struct, Dict.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177082,"byte_end":177126,"line_start":116,"line_end":116,"column_start":5,"column_end":49}},{"value":"/ For Dicts, even indices gets a key, odd indices gets a value.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177131,"byte_end":177196,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177201,"byte_end":177210,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1036},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177637,"byte_end":177646,"line_start":126,"line_end":126,"column_start":8,"column_end":17},"name":"box_clone","qualname":"::arg::msgarg::RefArg::box_clone","value":"pub fn box_clone(&Self) -> Box<RefArg + 'static>","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Deep clone of the RefArg, causing the result to be 'static.","sig":null,"attributes":[{"value":"/ Deep clone of the RefArg, causing the result to be 'static.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177324,"byte_end":177387,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177392,"byte_end":177395,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Usable as an escape hatch in case of lifetime problems with RefArg.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177400,"byte_end":177471,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177476,"byte_end":177479,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ In case of complex types (Array, Dict, Struct), the clone is not guaranteed","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177484,"byte_end":177563,"line_start":124,"line_end":124,"column_start":5,"column_end":84}},{"value":"/ to have the same internal representation as the original.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177568,"byte_end":177629,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1037},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177785,"byte_end":177796,"line_start":131,"line_end":131,"column_start":8,"column_end":19},"name":"array_clone","qualname":"::arg::msgarg::RefArg::array_clone","value":"pub fn array_clone(&[Self]) -> Option<Box<RefArg + 'static>> where Self: Sized","parent":{"krate":0,"index":1023},"children":[],"decl_id":null,"docs":" Deep clone of an array.","sig":null,"attributes":[{"value":"/ Deep clone of an array.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177689,"byte_end":177716,"line_start":128,"line_end":128,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177721,"byte_end":177724,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ This method is used internally by box_clone.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177729,"byte_end":177777,"line_start":130,"line_end":130,"column_start":5,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":1041},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178069,"byte_end":178073,"line_start":140,"line_end":140,"column_start":8,"column_end":12},"name":"cast","qualname":"::arg::msgarg::cast","value":"pub fn cast<'a, T: 'static>(&'a RefArg + 'static) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Cast a RefArg as a specific type (shortcut for any + downcast)\n","sig":null,"attributes":[{"value":"/ Cast a RefArg as a specific type (shortcut for any + downcast)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177985,"byte_end":178051,"line_start":138,"line_end":138,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178052,"byte_end":178061,"line_start":139,"line_end":139,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1044},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178397,"byte_end":178405,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"cast_mut","qualname":"::arg::msgarg::cast_mut","value":"pub fn cast_mut<'a, T: 'static>(&'a mut RefArg + 'static) -> Option<&'a mut T>","parent":null,"children":[],"decl_id":null,"docs":" Cast a RefArg as a specific type (shortcut for any_mut + downcast_mut)","sig":null,"attributes":[{"value":"/ Cast a RefArg as a specific type (shortcut for any_mut + downcast_mut)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178169,"byte_end":178243,"line_start":142,"line_end":142,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178244,"byte_end":178247,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ # Panic","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178248,"byte_end":178259,"line_start":144,"line_end":144,"column_start":1,"column_end":12}},{"value":"/ Will panic if the interior cannot be made mutable, e g, if encapsulated","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178260,"byte_end":178335,"line_start":145,"line_end":145,"column_start":1,"column_end":76}},{"value":"/ inside a Rc with a reference count > 1.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178336,"byte_end":178379,"line_start":146,"line_end":146,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178380,"byte_end":178389,"line_start":147,"line_end":147,"column_start":1,"column_end":10}}]},{"kind":"Type","id":{"krate":0,"index":1047},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178582,"byte_end":178589,"line_start":151,"line_end":151,"column_start":10,"column_end":17},"name":"PropMap","qualname":"::arg::msgarg::PropMap","value":"HashMap<String, Variant<Box<RefArg + 'static>>>","parent":null,"children":[],"decl_id":null,"docs":" The type typically used for a dictionary of properties.\n","sig":null,"attributes":[{"value":"/ The type typically used for a dictionary of properties.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178513,"byte_end":178572,"line_start":150,"line_end":150,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":1048},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178873,"byte_end":178882,"line_start":157,"line_end":157,"column_start":8,"column_end":17},"name":"prop_cast","qualname":"::arg::msgarg::prop_cast","value":"pub fn prop_cast<'a, T: 'static>(&'a PropMap, &str) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Descend into a hashmap returned by e g \"Properties::get_all\" to retrieve the value of a property.","sig":null,"attributes":[{"value":"/ Descend into a hashmap returned by e g \"Properties::get_all\" to retrieve the value of a property.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178647,"byte_end":178748,"line_start":154,"line_end":154,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178749,"byte_end":178752,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ Shortcut for get + cast. Returns None both if the property does not exist, or if it was of a different type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178753,"byte_end":178865,"line_start":156,"line_end":156,"column_start":1,"column_end":113}}]},{"kind":"Trait","id":{"krate":0,"index":1052},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179291,"byte_end":179301,"line_start":165,"line_end":165,"column_start":18,"column_end":28},"name":"FixedArray","qualname":"::arg::msgarg::FixedArray","value":"FixedArray: Arg + 'static + Clone + Copy","parent":null,"children":[],"decl_id":null,"docs":" If a type implements this trait, it means the size and alignment is the same\n as in D-Bus. This means that you can quickly append and get slices of this type.","sig":null,"attributes":[{"value":"/ If a type implements this trait, it means the size and alignment is the same","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":178992,"byte_end":179072,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ as in D-Bus. This means that you can quickly append and get slices of this type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179073,"byte_end":179157,"line_start":162,"line_end":162,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179158,"byte_end":179161,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ Note: Booleans do not implement this trait because D-Bus booleans are 4 bytes and Rust booleans are 1 byte.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179162,"byte_end":179273,"line_start":164,"line_end":164,"column_start":1,"column_end":112}}]},{"kind":"Trait","id":{"krate":0,"index":1053},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179418,"byte_end":179425,"line_start":168,"line_end":168,"column_start":11,"column_end":18},"name":"DictKey","qualname":"::arg::msgarg::DictKey","value":"DictKey: Arg","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used as keys in a dict type implement this trait.\n","sig":null,"attributes":[{"value":"/ Types that can be used as keys in a dict type implement this trait.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179336,"byte_end":179407,"line_start":167,"line_end":167,"column_start":1,"column_end":72}}]},{"kind":"Struct","id":{"krate":0,"index":3515},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207426,"byte_end":207433,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Variant","qualname":"::arg::variantstruct_impl::Variant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple wrapper to specify a D-Bus variant.","sig":null,"attributes":[{"value":"/ A simple wrapper to specify a D-Bus variant.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207278,"byte_end":207326,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207327,"byte_end":207330,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and examples.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207331,"byte_end":207414,"line_start":9,"line_end":9,"column_start":1,"column_end":84}}]},{"kind":"Field","id":{"krate":0,"index":3518},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207437,"byte_end":207442,"line_start":10,"line_end":10,"column_start":23,"column_end":28},"name":"0","qualname":"::arg::variantstruct_impl::Variant::0","value":"T","parent":{"krate":0,"index":3515},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207557,"byte_end":207567,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"new_refarg","qualname":"<Variant<Box<RefArg>>>::new_refarg","value":"pub fn new_refarg<'a>(&mut Iter) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new refarg from an Iter. Mainly for internal use.\n","sig":null,"attributes":[{"value":"/ Creates a new refarg from an Iter. Mainly for internal use.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207482,"byte_end":207545,"line_start":13,"line_end":13,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":4117},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219368,"byte_end":219372,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"Dict","qualname":"::arg::array_impl::Dict","value":"","parent":null,"children":[],"decl_id":null,"docs":" Append a D-Bus dict type (i e, an array of dict entries).","sig":null,"attributes":[{"value":"/ Append a D-Bus dict type (i e, an array of dict entries).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219203,"byte_end":219264,"line_start":126,"line_end":126,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219265,"byte_end":219268,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and alternatives.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219269,"byte_end":219356,"line_start":128,"line_end":128,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219743,"byte_end":219746,"line_start":137,"line_end":137,"column_start":12,"column_end":15},"name":"new","qualname":"<Dict>::new","value":"pub fn new<J: IntoIterator<IntoIter = I, Item = I>>(J) -> Dict","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Dict from an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new Dict from an iterator.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219691,"byte_end":219731,"line_start":136,"line_end":136,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4142},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224058,"byte_end":224063,"line_start":251,"line_end":251,"column_start":12,"column_end":17},"name":"Array","qualname":"::arg::array_impl::Array","value":"","parent":null,"children":[],"decl_id":null,"docs":" Represents a D-Bus Array. Maximum flexibility (wraps an iterator of items to append).","sig":null,"attributes":[{"value":"/ Represents a D-Bus Array. Maximum flexibility (wraps an iterator of items to append).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223865,"byte_end":223954,"line_start":248,"line_end":248,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223955,"byte_end":223958,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ See the argument guide and module level documentation for details and alternatives.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223959,"byte_end":224046,"line_start":250,"line_end":250,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224225,"byte_end":224228,"line_start":255,"line_end":255,"column_start":12,"column_end":15},"name":"new","qualname":"<Array>::new","value":"pub fn new<J: IntoIterator<IntoIter = I, Item = I>>(J) -> Array","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Array from an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a new Array from an iterator.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224172,"byte_end":224213,"line_start":254,"line_end":254,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":1531},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"messageitem","qualname":"::arg::messageitem","value":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","parent":null,"children":[{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":4992},{"krate":0,"index":1540},{"krate":0,"index":4994},{"krate":0,"index":1541},{"krate":0,"index":1542},{"krate":0,"index":1543},{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":4175},{"krate":0,"index":4185},{"krate":0,"index":4184},{"krate":0,"index":4182},{"krate":0,"index":4187},{"krate":0,"index":4206},{"krate":0,"index":4204},{"krate":0,"index":4200},{"krate":0,"index":4201},{"krate":0,"index":4190},{"krate":0,"index":1554},{"krate":0,"index":1560},{"krate":0,"index":1563},{"krate":0,"index":4208},{"krate":0,"index":4227},{"krate":0,"index":4225},{"krate":0,"index":4221},{"krate":0,"index":4222},{"krate":0,"index":4211},{"krate":0,"index":1566},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":4229},{"krate":0,"index":4293},{"krate":0,"index":4289},{"krate":0,"index":4290},{"krate":0,"index":4283},{"krate":0,"index":4281},{"krate":0,"index":1578},{"krate":0,"index":4296},{"krate":0,"index":4298},{"krate":0,"index":4302},{"krate":0,"index":4304},{"krate":0,"index":4308},{"krate":0,"index":4310},{"krate":0,"index":4314},{"krate":0,"index":4316},{"krate":0,"index":4320},{"krate":0,"index":4322},{"krate":0,"index":4326},{"krate":0,"index":4328},{"krate":0,"index":4332},{"krate":0,"index":4334},{"krate":0,"index":4338},{"krate":0,"index":4340},{"krate":0,"index":4344},{"krate":0,"index":4346},{"krate":0,"index":1601},{"krate":0,"index":1605},{"krate":0,"index":1610},{"krate":0,"index":1613},{"krate":0,"index":1615},{"krate":0,"index":1617},{"krate":0,"index":1619},{"krate":0,"index":1621},{"krate":0,"index":1623},{"krate":0,"index":1627},{"krate":0,"index":1631},{"krate":0,"index":1635},{"krate":0,"index":1639},{"krate":0,"index":1643},{"krate":0,"index":1647},{"krate":0,"index":1652},{"krate":0,"index":1656},{"krate":0,"index":1660},{"krate":0,"index":1664},{"krate":0,"index":1667},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":1684},{"krate":0,"index":1695},{"krate":0,"index":1699}],"decl_id":null,"docs":" MessageItem - old, enum design that is used as parameters and return values from\n method calls, or as data added to a signal.","sig":null,"attributes":[{"value":"/ MessageItem - old, enum design that is used as parameters and return values from","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237569,"byte_end":237653,"line_start":1,"line_end":1,"column_start":1,"column_end":85}},{"value":"/ method calls, or as data added to a signal.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237654,"byte_end":237701,"line_start":2,"line_end":2,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237702,"byte_end":237705,"line_start":3,"line_end":3,"column_start":1,"column_end":4}},{"value":"/ Note that the newer generic design (see `arg` module) is, in general, both faster","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237706,"byte_end":237791,"line_start":4,"line_end":4,"column_start":1,"column_end":86}},{"value":"/ and smaller than MessageItem, and should be your first hand choice","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237792,"byte_end":237862,"line_start":5,"line_end":5,"column_start":1,"column_end":71}},{"value":"/ whenever applicable. There is also a trait object design called `RefArg` in","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237863,"byte_end":237942,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/ case the generic design is too inflexible.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":237943,"byte_end":237989,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4176},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238423,"byte_end":238433,"line_start":24,"line_end":24,"column_start":5,"column_end":15},"name":"EmptyArray","qualname":"::arg::messageitem::ArrayError::EmptyArray","value":"ArrayError::EmptyArray","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" The array is empty.\n","sig":null,"attributes":[{"value":"/ The array is empty.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238395,"byte_end":238418,"line_start":23,"line_end":23,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4178},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238497,"byte_end":238518,"line_start":26,"line_end":26,"column_start":5,"column_end":26},"name":"DifferentElementTypes","qualname":"::arg::messageitem::ArrayError::DifferentElementTypes","value":"ArrayError::DifferentElementTypes","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" The array is composed of different element types.\n","sig":null,"attributes":[{"value":"/ The array is composed of different element types.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238439,"byte_end":238492,"line_start":25,"line_end":25,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4180},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238586,"byte_end":238602,"line_start":28,"line_end":28,"column_start":5,"column_end":21},"name":"InvalidSignature","qualname":"::arg::messageitem::ArrayError::InvalidSignature","value":"ArrayError::InvalidSignature","parent":{"krate":0,"index":4175},"children":[],"decl_id":null,"docs":" The supplied signature is not a valid array signature\n","sig":null,"attributes":[{"value":"/ The supplied signature is not a valid array signature","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238524,"byte_end":238581,"line_start":27,"line_end":27,"column_start":5,"column_end":62}}]},{"kind":"Enum","id":{"krate":0,"index":4175},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238378,"byte_end":238388,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"name":"ArrayError","qualname":"::arg::messageitem::ArrayError","value":"pub enum ArrayError {\n\n    /// The array is empty.\n    EmptyArray,\n\n    /// The array is composed of different element types.\n    DifferentElementTypes,\n\n    /// The supplied signature is not a valid array signature\n    InvalidSignature,\n}","parent":null,"children":[{"krate":0,"index":4176},{"krate":0,"index":4178},{"krate":0,"index":4180}],"decl_id":null,"docs":" Errors that can happen when creating a MessageItem::Array.\n","sig":null,"attributes":[{"value":"/ Errors that can happen when creating a MessageItem::Array.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238306,"byte_end":238368,"line_start":21,"line_end":21,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":4187},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238739,"byte_end":238755,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"MessageItemArray","qualname":"::arg::messageitem::MessageItemArray","value":"MessageItemArray {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189}],"decl_id":null,"docs":" An array of MessageItem where every MessageItem is of the same type.\n","sig":null,"attributes":[{"value":"/ An array of MessageItem where every MessageItem is of the same type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238655,"byte_end":238727,"line_start":33,"line_end":33,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":239050,"byte_end":239053,"line_start":44,"line_end":44,"column_start":12,"column_end":15},"name":"new","qualname":"<MessageItemArray>::new","value":"pub fn new(Vec<MessageItem>, Signature)\n-> Result<MessageItemArray, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new array where every element has the supplied signature.","sig":null,"attributes":[{"value":"/ Creates a new array where every element has the supplied signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238878,"byte_end":238949,"line_start":41,"line_end":41,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238954,"byte_end":238957,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ Signature is the full array signature, not the signature of the element.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238962,"byte_end":239038,"line_start":43,"line_end":43,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":239888,"byte_end":239897,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItemArray>::signature","value":"pub fn signature(&Self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Signature of array (full array signature)\n","sig":null,"attributes":[{"value":"/ Signature of array (full array signature)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":239831,"byte_end":239876,"line_start":65,"line_end":65,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1559},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240059,"byte_end":240067,"line_start":69,"line_end":69,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MessageItemArray>::into_vec","value":"pub fn into_vec(Self) -> Vec<MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the MessageItemArray in order to allow you to modify the individual items of the array.\n","sig":null,"attributes":[{"value":"/ Consumes the MessageItemArray in order to allow you to modify the individual items of the array.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":239947,"byte_end":240047,"line_start":68,"line_end":68,"column_start":5,"column_end":105}}]},{"kind":"Struct","id":{"krate":0,"index":4208},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240607,"byte_end":240622,"line_start":87,"line_end":87,"column_start":12,"column_end":27},"name":"MessageItemDict","qualname":"::arg::messageitem::MessageItemDict","value":"MessageItemDict {  }","parent":null,"children":[{"krate":0,"index":4209},{"krate":0,"index":4210}],"decl_id":null,"docs":" An array of MessageItem where every MessageItem is of the same type.\n","sig":null,"attributes":[{"value":"/ An array of MessageItem where every MessageItem is of the same type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240523,"byte_end":240595,"line_start":86,"line_end":86,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1567},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240857,"byte_end":240860,"line_start":95,"line_end":95,"column_start":12,"column_end":15},"name":"new","qualname":"<MessageItemDict>::new","value":"pub fn new(Vec<(MessageItem, MessageItem)>, Signature, Signature)\n-> Result<MessageItemDict, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dict where every key and value elements have the supplied signature.\n","sig":null,"attributes":[{"value":"/ Creates a new dict where every key and value elements have the supplied signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240759,"byte_end":240845,"line_start":94,"line_end":94,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1569},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241560,"byte_end":241569,"line_start":112,"line_end":112,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItemDict>::signature","value":"pub fn signature(&Self) -> &Signature","parent":null,"children":[],"decl_id":null,"docs":" Signature of array (full array signature)\n","sig":null,"attributes":[{"value":"/ Signature of array (full array signature)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241503,"byte_end":241548,"line_start":111,"line_end":111,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241729,"byte_end":241737,"line_start":115,"line_end":115,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<MessageItemDict>::into_vec","value":"pub fn into_vec(Self) -> Vec<(MessageItem, MessageItem)>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the MessageItemDict in order to allow you to modify the individual items of the dict.\n","sig":null,"attributes":[{"value":"/ Consumes the MessageItemDict in order to allow you to modify the individual items of the dict.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241619,"byte_end":241717,"line_start":114,"line_end":114,"column_start":5,"column_end":103}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4230},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242841,"byte_end":242846,"line_start":146,"line_end":146,"column_start":5,"column_end":10},"name":"Array","qualname":"::arg::messageitem::MessageItem::Array","value":"MessageItem::Array(MessageItemArray)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus array requires all elements to be of the same type.\n All elements must match the Signature.\n","sig":null,"attributes":[{"value":"/ A D-Bus array requires all elements to be of the same type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242726,"byte_end":242789,"line_start":144,"line_end":144,"column_start":5,"column_end":68}},{"value":"/ All elements must match the Signature.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242794,"byte_end":242836,"line_start":145,"line_end":145,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4233},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242931,"byte_end":242937,"line_start":148,"line_end":148,"column_start":5,"column_end":11},"name":"Struct","qualname":"::arg::messageitem::MessageItem::Struct","value":"MessageItem::Struct(Vec<MessageItem>)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus struct allows for values of different types.\n","sig":null,"attributes":[{"value":"/ A D-Bus struct allows for values of different types.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242870,"byte_end":242926,"line_start":147,"line_end":147,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4236},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243062,"byte_end":243069,"line_start":151,"line_end":151,"column_start":5,"column_end":12},"name":"Variant","qualname":"::arg::messageitem::MessageItem::Variant","value":"MessageItem::Variant(Box<MessageItem>)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus variant is a wrapper around another `MessageItem`, which\n can be of any type.\n","sig":null,"attributes":[{"value":"/ A D-Bus variant is a wrapper around another `MessageItem`, which","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242961,"byte_end":243029,"line_start":149,"line_end":149,"column_start":5,"column_end":73}},{"value":"/ can be of any type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243034,"byte_end":243057,"line_start":150,"line_end":150,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4239},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243258,"byte_end":243262,"line_start":154,"line_end":154,"column_start":5,"column_end":9},"name":"Dict","qualname":"::arg::messageitem::MessageItem::Dict","value":"MessageItem::Dict(MessageItemDict)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus dictionary. All keys and values are required to be of the same type.\n Not all types can be dictionary keys, but all can be dictionary values.\n","sig":null,"attributes":[{"value":"/ A D-Bus dictionary. All keys and values are required to be of the same type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243093,"byte_end":243173,"line_start":152,"line_end":152,"column_start":5,"column_end":85}},{"value":"/ Not all types can be dictionary keys, but all can be dictionary values.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243178,"byte_end":243253,"line_start":153,"line_end":153,"column_start":5,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4242},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243397,"byte_end":243407,"line_start":157,"line_end":157,"column_start":5,"column_end":15},"name":"ObjectPath","qualname":"::arg::messageitem::MessageItem::ObjectPath","value":"MessageItem::ObjectPath(Path)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus objectpath requires its content to be a valid objectpath,\n so this cannot be any string.\n","sig":null,"attributes":[{"value":"/ A D-Bus objectpath requires its content to be a valid objectpath,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243285,"byte_end":243354,"line_start":155,"line_end":155,"column_start":5,"column_end":74}},{"value":"/ so this cannot be any string.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243359,"byte_end":243392,"line_start":156,"line_end":156,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4245},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243543,"byte_end":243552,"line_start":160,"line_end":160,"column_start":5,"column_end":14},"name":"Signature","qualname":"::arg::messageitem::MessageItem::Signature","value":"MessageItem::Signature(Signature)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus signature requires its content to be a valid type signature,\n so this cannot be any string.\n","sig":null,"attributes":[{"value":"/ A D-Bus signature requires its content to be a valid type signature,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243428,"byte_end":243500,"line_start":158,"line_end":158,"column_start":5,"column_end":77}},{"value":"/ so this cannot be any string.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243505,"byte_end":243538,"line_start":159,"line_end":159,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4248},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243738,"byte_end":243741,"line_start":163,"line_end":163,"column_start":5,"column_end":8},"name":"Str","qualname":"::arg::messageitem::MessageItem::Str","value":"MessageItem::Str(String)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus String is zero terminated, so no \\0 s in the String, please.\n (D-Bus strings are also - like Rust strings - required to be valid UTF-8.)\n","sig":null,"attributes":[{"value":"/ A D-Bus String is zero terminated, so no \\0 s in the String, please.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243578,"byte_end":243650,"line_start":161,"line_end":161,"column_start":5,"column_end":77}},{"value":"/ (D-Bus strings are also - like Rust strings - required to be valid UTF-8.)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243655,"byte_end":243733,"line_start":162,"line_end":162,"column_start":5,"column_end":83}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4251},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243785,"byte_end":243789,"line_start":165,"line_end":165,"column_start":5,"column_end":9},"name":"Bool","qualname":"::arg::messageitem::MessageItem::Bool","value":"MessageItem::Bool(bool)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus boolean type.\n","sig":null,"attributes":[{"value":"/ A D-Bus boolean type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243755,"byte_end":243780,"line_start":164,"line_end":164,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4254},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243838,"byte_end":243842,"line_start":167,"line_end":167,"column_start":5,"column_end":9},"name":"Byte","qualname":"::arg::messageitem::MessageItem::Byte","value":"MessageItem::Byte(u8)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 8 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 8 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243801,"byte_end":243833,"line_start":166,"line_end":166,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4257},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243888,"byte_end":243893,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Int16","qualname":"::arg::messageitem::MessageItem::Int16","value":"MessageItem::Int16(i16)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus signed 16 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 16 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243852,"byte_end":243883,"line_start":168,"line_end":168,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4260},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243940,"byte_end":243945,"line_start":171,"line_end":171,"column_start":5,"column_end":10},"name":"Int32","qualname":"::arg::messageitem::MessageItem::Int32","value":"MessageItem::Int32(i32)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus signed 32 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 32 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243904,"byte_end":243935,"line_start":170,"line_end":170,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243992,"byte_end":243997,"line_start":173,"line_end":173,"column_start":5,"column_end":10},"name":"Int64","qualname":"::arg::messageitem::MessageItem::Int64","value":"MessageItem::Int64(i64)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus signed 64 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus signed 64 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":243956,"byte_end":243987,"line_start":172,"line_end":172,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4266},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244046,"byte_end":244052,"line_start":175,"line_end":175,"column_start":5,"column_end":11},"name":"UInt16","qualname":"::arg::messageitem::MessageItem::UInt16","value":"MessageItem::UInt16(u16)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 16 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 16 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244008,"byte_end":244041,"line_start":174,"line_end":174,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244101,"byte_end":244107,"line_start":177,"line_end":177,"column_start":5,"column_end":11},"name":"UInt32","qualname":"::arg::messageitem::MessageItem::UInt32","value":"MessageItem::UInt32(u32)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 32 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 32 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244063,"byte_end":244096,"line_start":176,"line_end":176,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4272},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244156,"byte_end":244162,"line_start":179,"line_end":179,"column_start":5,"column_end":11},"name":"UInt64","qualname":"::arg::messageitem::MessageItem::UInt64","value":"MessageItem::UInt64(u64)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus unsigned 64 bit type.\n","sig":null,"attributes":[{"value":"/ A D-Bus unsigned 64 bit type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244118,"byte_end":244151,"line_start":178,"line_end":178,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4275},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244236,"byte_end":244242,"line_start":181,"line_end":181,"column_start":5,"column_end":11},"name":"Double","qualname":"::arg::messageitem::MessageItem::Double","value":"MessageItem::Double(f64)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" A D-Bus IEEE-754 double-precision floating point type.\n","sig":null,"attributes":[{"value":"/ A D-Bus IEEE-754 double-precision floating point type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244173,"byte_end":244231,"line_start":180,"line_end":180,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4278},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244390,"byte_end":244396,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"UnixFd","qualname":"::arg::messageitem::MessageItem::UnixFd","value":"MessageItem::UnixFd(OwnedFd)","parent":{"krate":0,"index":4229},"children":[],"decl_id":null,"docs":" D-Bus allows for sending file descriptors, which can be used to\n set up SHM, unix pipes, or other communication channels.\n","sig":null,"attributes":[{"value":"/ D-Bus allows for sending file descriptors, which can be used to","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244253,"byte_end":244320,"line_start":182,"line_end":182,"column_start":5,"column_end":72}},{"value":"/ set up SHM, unix pipes, or other communication channels.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244325,"byte_end":244385,"line_start":183,"line_end":183,"column_start":5,"column_end":65}}]},{"kind":"Enum","id":{"krate":0,"index":4229},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242708,"byte_end":242719,"line_start":143,"line_end":143,"column_start":10,"column_end":21},"name":"MessageItem","qualname":"::arg::messageitem::MessageItem","value":"pub enum MessageItem {\n\n    /// A D-Bus array requires all elements to be of the same type.\n    /// All elements must match the Signature.\n    Array(MessageItemArray),\n\n    /// A D-Bus struct allows for values of different types.\n    Struct(Vec<MessageItem>),\n\n    /// A D-Bus variant is a wrapper around another `MessageItem`, which\n    /// can be of any type.\n    Variant(Box<MessageItem>),\n\n    /// A D-Bus dictionary. All keys and values are required to be of the same type.\n    /// Not all types can be dictionary keys, but all can be dictionary values.\n    Dict(MessageItemDict),\n\n    /// A D-Bus objectpath requires its content to be a valid objectpath,\n    /// so this cannot be any string.\n    ObjectPath(Path),\n\n    /// A D-Bus signature requires its content to be a valid type signature,\n    /// so this cannot be any string.\n    Signature(Signature),\n\n    /// A D-Bus String is zero terminated, so no \\0 s in the String, please.\n    /// (D-Bus strings are also - like Rust strings - required to be valid UTF-8.)\n    Str(String),\n\n    /// A D-Bus boolean type.\n    Bool(bool),\n\n    /// A D-Bus unsigned 8 bit type.\n    Byte(u8),\n\n    /// A D-Bus signed 16 bit type.\n    Int16(i16),\n\n    /// A D-Bus signed 32 bit type.\n    Int32(i32),\n\n    /// A D-Bus signed 64 bit type.\n    Int64(i64),\n\n    /// A D-Bus unsigned 16 bit type.\n    UInt16(u16),\n\n    /// A D-Bus unsigned 32 bit type.\n    UInt32(u32),\n\n    /// A D-Bus unsigned 64 bit type.\n    UInt64(u64),\n\n    /// A D-Bus IEEE-754 double-precision floating point type.\n    Double(f64),\n\n    /// D-Bus allows for sending file descriptors, which can be used to\n    /// set up SHM, unix pipes, or other communication channels.\n    UnixFd(OwnedFd),\n}","parent":null,"children":[{"krate":0,"index":4230},{"krate":0,"index":4233},{"krate":0,"index":4236},{"krate":0,"index":4239},{"krate":0,"index":4242},{"krate":0,"index":4245},{"krate":0,"index":4248},{"krate":0,"index":4251},{"krate":0,"index":4254},{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278}],"decl_id":null,"docs":" MessageItem - used as parameters and return values from\n method calls, or as data added to a signal (old, enum version).","sig":null,"attributes":[{"value":"/ MessageItem - used as parameters and return values from","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242342,"byte_end":242401,"line_start":136,"line_end":136,"column_start":1,"column_end":60}},{"value":"/ method calls, or as data added to a signal (old, enum version).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242402,"byte_end":242469,"line_start":137,"line_end":137,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242470,"byte_end":242473,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ Note that the newer generic design (see `arg` module) is both faster","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242474,"byte_end":242546,"line_start":139,"line_end":139,"column_start":1,"column_end":73}},{"value":"/ and less error prone than MessageItem, and should be your first hand choice","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242547,"byte_end":242626,"line_start":140,"line_end":140,"column_start":1,"column_end":80}},{"value":"/ whenever applicable.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":242627,"byte_end":242651,"line_start":141,"line_end":141,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1579},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244494,"byte_end":244503,"line_start":189,"line_end":189,"column_start":12,"column_end":21},"name":"signature","qualname":"<MessageItem>::signature","value":"pub fn signature(&Self) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Get the D-Bus Signature for this MessageItem.\n","sig":null,"attributes":[{"value":"/ Get the D-Bus Signature for this MessageItem.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244433,"byte_end":244482,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1581},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":245846,"byte_end":245854,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"arg_type","qualname":"<MessageItem>::arg_type","value":"pub fn arg_type(&Self) -> arg::ArgType","parent":null,"children":[],"decl_id":null,"docs":" Get the arg type of this MessageItem.\n","sig":null,"attributes":[{"value":"/ Get the arg type of this MessageItem.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":245793,"byte_end":245834,"line_start":212,"line_end":212,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1582},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":246989,"byte_end":246998,"line_start":236,"line_end":236,"column_start":12,"column_end":21},"name":"from_dict","qualname":"<MessageItem>::from_dict","value":"pub fn from_dict<E, I: Iterator<Item = Result<(String, MessageItem), E>>>(I)\n-> Result<MessageItem, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)\n","sig":null,"attributes":[{"value":"/ Creates a (String, Variant) dictionary from an iterator with Result passthrough (an Err will abort and return that Err)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":246854,"byte_end":246977,"line_start":235,"line_end":235,"column_start":5,"column_end":128}}]},{"kind":"Method","id":{"krate":0,"index":1585},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247582,"byte_end":247591,"line_start":249,"line_end":249,"column_start":12,"column_end":21},"name":"new_array","qualname":"<MessageItem>::new_array","value":"pub fn new_array(Vec<MessageItem>) -> Result<MessageItem, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an MessageItem::Array from a list of MessageItems.","sig":null,"attributes":[{"value":"/ Creates an MessageItem::Array from a list of MessageItems.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247368,"byte_end":247430,"line_start":245,"line_end":245,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247435,"byte_end":247438,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ Note: This requires `v` to be non-empty. See also","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247443,"byte_end":247496,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/ `MessageItem::from(&[T])`, which can handle empty arrays as well.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247501,"byte_end":247570,"line_start":248,"line_end":248,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1586},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248082,"byte_end":248090,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"new_dict","qualname":"<MessageItem>::new_dict","value":"pub fn new_dict(Vec<(MessageItem, MessageItem)>)\n-> Result<MessageItem, ArrayError>","parent":null,"children":[],"decl_id":null,"docs":" Creates an MessageItem::Dict from a list of MessageItem pairs.","sig":null,"attributes":[{"value":"/ Creates an MessageItem::Dict from a list of MessageItem pairs.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247857,"byte_end":247923,"line_start":257,"line_end":257,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247928,"byte_end":247931,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ Note: This requires `v` to be non-empty. See also","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247936,"byte_end":247989,"line_start":259,"line_end":259,"column_start":5,"column_end":58}},{"value":"/ `MessageItem::from(&[(T1, T2)])`, which can handle empty arrays as well.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":247994,"byte_end":248070,"line_start":260,"line_end":260,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248653,"byte_end":248658,"line_start":278,"line_end":278,"column_start":12,"column_end":17},"name":"inner","qualname":"<MessageItem>::inner","value":"pub fn inner<'a, T: TryFrom<&'a MessageItem>>(&'a Self) -> Result<T, T::Error>","parent":null,"children":[],"decl_id":null,"docs":" Get the inner value of a `MessageItem`","sig":null,"attributes":[{"value":"/ Get the inner value of a `MessageItem`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248388,"byte_end":248430,"line_start":269,"line_end":269,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248435,"byte_end":248438,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248443,"byte_end":248456,"line_start":271,"line_end":271,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248461,"byte_end":248468,"line_start":272,"line_end":272,"column_start":5,"column_end":12}},{"value":"/ use dbus::arg::messageitem::MessageItem;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248473,"byte_end":248517,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ let m: MessageItem = 5i64.into();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248522,"byte_end":248559,"line_start":274,"line_end":274,"column_start":5,"column_end":42}},{"value":"/ let s: i64 = m.inner().unwrap();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248564,"byte_end":248600,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(s, 5i64);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248605,"byte_end":248629,"line_start":276,"line_end":276,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248634,"byte_end":248641,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249241,"byte_end":249245,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"peel","qualname":"<MessageItem>::peel","value":"pub fn peel(&Self) -> &Self","parent":null,"children":[],"decl_id":null,"docs":" Get the underlying `MessageItem` of a `MessageItem::Variant`","sig":null,"attributes":[{"value":"/ Get the underlying `MessageItem` of a `MessageItem::Variant`","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248764,"byte_end":248828,"line_start":282,"line_end":282,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248833,"byte_end":248836,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ Nested `MessageItem::Variant`s are unwrapped recursively until a","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248841,"byte_end":248909,"line_start":284,"line_end":284,"column_start":5,"column_end":73}},{"value":"/ non-`Variant` is found.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248914,"byte_end":248941,"line_start":285,"line_end":285,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248946,"byte_end":248949,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248954,"byte_end":248967,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248972,"byte_end":248979,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ use dbus::arg::messageitem::MessageItem;","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":248984,"byte_end":249028,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ let nested = MessageItem::Variant(Box::new(6i64.into()));","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249033,"byte_end":249094,"line_start":290,"line_end":290,"column_start":5,"column_end":66}},{"value":"/ let flat: MessageItem = 6i64.into();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249099,"byte_end":249139,"line_start":291,"line_end":291,"column_start":5,"column_end":45}},{"value":"/ assert_ne!(&nested, &flat);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249144,"byte_end":249175,"line_start":292,"line_end":292,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(nested.peel(), &flat);","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249180,"byte_end":249217,"line_start":293,"line_end":293,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":249222,"byte_end":249229,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":1677},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259481,"byte_end":259486,"line_start":548,"line_end":548,"column_start":12,"column_end":17},"name":"Props","qualname":"::arg::messageitem::Props","value":"Props {  }","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680},{"krate":0,"index":1681},{"krate":0,"index":1682},{"krate":0,"index":1683}],"decl_id":null,"docs":" Client side properties - get and set properties on a remote application.\n","sig":null,"attributes":[{"value":"/ Client side properties - get and set properties on a remote application.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259393,"byte_end":259469,"line_start":547,"line_end":547,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259676,"byte_end":259679,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"new","qualname":"<Props>::new","value":"pub fn new<N, P, I>(&'a Connection, N, P, I, i32) -> Props where\nN: Into<BusName>, P: Into<Path>, I: Into<Interface>","parent":null,"children":[],"decl_id":null,"docs":" Create a new Props.\n","sig":null,"attributes":[{"value":"/ Create a new Props.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259641,"byte_end":259664,"line_start":557,"line_end":557,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1690},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":260095,"byte_end":260098,"line_start":570,"line_end":570,"column_start":12,"column_end":15},"name":"get","qualname":"<Props>::get","value":"pub fn get(&Self, &str) -> Result<MessageItem, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a single property's value.\n","sig":null,"attributes":[{"value":"/ Get a single property's value.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":260049,"byte_end":260083,"line_start":569,"line_end":569,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1691},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":260854,"byte_end":260857,"line_start":586,"line_end":586,"column_start":12,"column_end":15},"name":"set","qualname":"<Props>::set","value":"pub fn set(&Self, &str, MessageItem) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a single property's value.\n","sig":null,"attributes":[{"value":"/ Set a single property's value.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":260808,"byte_end":260842,"line_start":585,"line_end":585,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1692},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":261375,"byte_end":261382,"line_start":596,"line_end":596,"column_start":12,"column_end":19},"name":"get_all","qualname":"<Props>::get_all","value":"pub fn get_all(&Self) -> Result<BTreeMap<String, MessageItem>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a map of all the properties' names and their values.\n","sig":null,"attributes":[{"value":"/ Get a map of all the properties' names and their values.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":261303,"byte_end":261363,"line_start":595,"line_end":595,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":1695},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262411,"byte_end":262422,"line_start":620,"line_end":620,"column_start":12,"column_end":23},"name":"PropHandler","qualname":"::arg::messageitem::PropHandler","value":"PropHandler {  }","parent":null,"children":[{"krate":0,"index":1697},{"krate":0,"index":1698}],"decl_id":null,"docs":" Wrapper around Props that keeps a map of fetched properties.\n","sig":null,"attributes":[{"value":"/ Wrapper around Props that keeps a map of fetched properties.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262335,"byte_end":262399,"line_start":619,"line_end":619,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1701},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262575,"byte_end":262578,"line_start":627,"line_end":627,"column_start":12,"column_end":15},"name":"new","qualname":"<PropHandler>::new","value":"pub fn new(Props) -> PropHandler","parent":null,"children":[],"decl_id":null,"docs":" Create a new PropHandler from a Props.\n","sig":null,"attributes":[{"value":"/ Create a new PropHandler from a Props.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262521,"byte_end":262563,"line_start":626,"line_end":626,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1702},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262740,"byte_end":262747,"line_start":632,"line_end":632,"column_start":12,"column_end":19},"name":"get_all","qualname":"<PropHandler>::get_all","value":"pub fn get_all(&mut Self) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a map of all the properties' names and their values.\n","sig":null,"attributes":[{"value":"/ Get a map of all the properties' names and their values.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262668,"byte_end":262728,"line_start":631,"line_end":631,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1703},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262926,"byte_end":262933,"line_start":638,"line_end":638,"column_start":12,"column_end":19},"name":"map_mut","qualname":"<PropHandler>::map_mut","value":"pub fn map_mut(&mut Self) -> &mut BTreeMap<String, MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to the PropHandler's fetched properties.\n","sig":null,"attributes":[{"value":"/ Get a mutable reference to the PropHandler's fetched properties.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262846,"byte_end":262914,"line_start":637,"line_end":637,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1704},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263078,"byte_end":263081,"line_start":641,"line_end":641,"column_start":12,"column_end":15},"name":"map","qualname":"<PropHandler>::map","value":"pub fn map(&Self) -> &BTreeMap<String, MessageItem>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to the PropHandler's fetched properties.\n","sig":null,"attributes":[{"value":"/ Get a reference to the PropHandler's fetched properties.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263006,"byte_end":263066,"line_start":640,"line_end":640,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263188,"byte_end":263191,"line_start":644,"line_end":644,"column_start":12,"column_end":15},"name":"get","qualname":"<PropHandler>::get","value":"pub fn get(&mut Self, &str) -> Result<&MessageItem, Error>","parent":null,"children":[],"decl_id":null,"docs":" Get a single property's value.\n","sig":null,"attributes":[{"value":"/ Get a single property's value.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263142,"byte_end":263176,"line_start":643,"line_end":643,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263442,"byte_end":263445,"line_start":651,"line_end":651,"column_start":12,"column_end":15},"name":"set","qualname":"<PropHandler>::set","value":"pub fn set(&mut Self, &str, MessageItem) -> Result<(), Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a single property's value.\n","sig":null,"attributes":[{"value":"/ Set a single property's value.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":263396,"byte_end":263430,"line_start":650,"line_end":650,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4350},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156745,"byte_end":156752,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"OwnedFd","qualname":"::arg::OwnedFd","value":"OwnedFd {  }","parent":null,"children":[{"krate":0,"index":4351}],"decl_id":null,"docs":" An RAII wrapper around Fd to ensure that file descriptor is closed\n when the scope ends.\n","sig":null,"attributes":[{"value":"/ An RAII wrapper around Fd to ensure that file descriptor is closed","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156598,"byte_end":156668,"line_start":87,"line_end":87,"column_start":1,"column_end":71}},{"value":"/ when the scope ends.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156669,"byte_end":156693,"line_start":88,"line_end":88,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1750},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157046,"byte_end":157049,"line_start":99,"line_end":99,"column_start":19,"column_end":22},"name":"new","qualname":"<OwnedFd>::new","value":"pub unsafe fn new(RawFd) -> OwnedFd","parent":null,"children":[],"decl_id":null,"docs":" Create a new OwnedFd from a RawFd.","sig":null,"attributes":[{"value":"/ Create a new OwnedFd from a RawFd.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156791,"byte_end":156829,"line_start":95,"line_end":95,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156834,"byte_end":156837,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe, because you could potentially send in an invalid file descriptor,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156842,"byte_end":156936,"line_start":97,"line_end":97,"column_start":5,"column_end":99}},{"value":"/ or close it during the lifetime of this struct. This could potentially be unsound.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156941,"byte_end":157027,"line_start":98,"line_end":98,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1751},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157165,"byte_end":157172,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"into_fd","qualname":"<OwnedFd>::into_fd","value":"pub fn into_fd(Self) -> RawFd","parent":null,"children":[],"decl_id":null,"docs":" Convert an OwnedFD back into a RawFd.\n","sig":null,"attributes":[{"value":"/ Convert an OwnedFD back into a RawFd.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157112,"byte_end":157153,"line_start":103,"line_end":103,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4364},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157968,"byte_end":157978,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"IterAppend","qualname":"::arg::IterAppend","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper struct for appending one or more arguments to a Message.\n","sig":null,"attributes":[{"value":"/ Helper struct for appending one or more arguments to a Message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157889,"byte_end":157956,"line_start":142,"line_end":142,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1764},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158098,"byte_end":158101,"line_start":147,"line_end":147,"column_start":12,"column_end":15},"name":"new","qualname":"<IterAppend>::new","value":"pub fn new(&'a mut Message) -> IterAppend","parent":null,"children":[],"decl_id":null,"docs":" Creates a new IterAppend struct.\n","sig":null,"attributes":[{"value":"/ Creates a new IterAppend struct.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158050,"byte_end":158086,"line_start":146,"line_end":146,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1765},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158319,"byte_end":158325,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"append","qualname":"<IterAppend>::append","value":"pub fn append<T: Append>(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Appends the argument.\n","sig":null,"attributes":[{"value":"/ Appends the argument.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158282,"byte_end":158307,"line_start":153,"line_end":153,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":1770},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159377,"byte_end":159391,"line_start":174,"line_end":174,"column_start":12,"column_end":26},"name":"append_variant","qualname":"<IterAppend>::append_variant","value":"pub fn append_variant<F: FnOnce(&mut IterAppend) ->\n                      ()>(&mut Self, &Signature, F)","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a variant.","sig":null,"attributes":[{"value":"/ Low-level function to append a variant.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158930,"byte_end":158973,"line_start":166,"line_end":166,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158978,"byte_end":158981,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Variant` struct is not flexible enough -","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158986,"byte_end":159047,"line_start":168,"line_end":168,"column_start":5,"column_end":66}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Variant` parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159052,"byte_end":159147,"line_start":169,"line_end":169,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159152,"byte_end":159155,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\" you need to call \"append\" on","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159160,"byte_end":159249,"line_start":171,"line_end":171,"column_start":5,"column_end":94}},{"value":"/ the supplied `IterAppend` exactly once,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159254,"byte_end":159297,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/ and with a value which has the same signature as inner_sig.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159302,"byte_end":159365,"line_start":173,"line_end":173,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1772},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159976,"byte_end":159988,"line_start":185,"line_end":185,"column_start":12,"column_end":24},"name":"append_array","qualname":"<IterAppend>::append_array","value":"pub fn append_array<F: FnOnce(&mut IterAppend) ->\n                    ()>(&mut Self, &Signature, F)","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append an array.","sig":null,"attributes":[{"value":"/ Low-level function to append an array.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159555,"byte_end":159597,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159602,"byte_end":159605,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Array` struct is not flexible enough -","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159610,"byte_end":159669,"line_start":180,"line_end":180,"column_start":5,"column_end":64}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply an `Array` parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159674,"byte_end":159768,"line_start":181,"line_end":181,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159773,"byte_end":159776,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should only call \"append\" on","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159781,"byte_end":159875,"line_start":183,"line_end":183,"column_start":5,"column_end":99}},{"value":"/ the supplied `IterAppend` with values which has the same signature as inner_sig.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":159880,"byte_end":159964,"line_start":184,"line_end":184,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1774},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160361,"byte_end":160374,"line_start":193,"line_end":193,"column_start":12,"column_end":25},"name":"append_struct","qualname":"<IterAppend>::append_struct","value":"pub fn append_struct<F: FnOnce(&mut IterAppend) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a struct.","sig":null,"attributes":[{"value":"/ Low-level function to append a struct.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160150,"byte_end":160192,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160197,"byte_end":160200,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ Use in case tuples are not flexible enough -","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160205,"byte_end":160253,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a tuple parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160258,"byte_end":160349,"line_start":192,"line_end":192,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":1776},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161032,"byte_end":161049,"line_start":205,"line_end":205,"column_start":12,"column_end":29},"name":"append_dict_entry","qualname":"<IterAppend>::append_dict_entry","value":"pub fn append_dict_entry<F: FnOnce(&mut IterAppend) -> ()>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a dict entry.","sig":null,"attributes":[{"value":"/ Low-level function to append a dict entry.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160493,"byte_end":160539,"line_start":197,"line_end":197,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160544,"byte_end":160547,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Dict` struct is not flexible enough -","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160552,"byte_end":160610,"line_start":199,"line_end":199,"column_start":5,"column_end":63}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Dict` parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160615,"byte_end":160707,"line_start":200,"line_end":200,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160712,"byte_end":160715,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should call \"append\" once","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160720,"byte_end":160811,"line_start":202,"line_end":202,"column_start":5,"column_end":96}},{"value":"/ for the key, then once for the value. You should only call this function for a subiterator","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160816,"byte_end":160910,"line_start":203,"line_end":203,"column_start":5,"column_end":99}},{"value":"/ you got from calling \"append_dict\", and signatures need to match what you specified in \"append_dict\".","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":160915,"byte_end":161020,"line_start":204,"line_end":204,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":1778},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161589,"byte_end":161600,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"append_dict","qualname":"<IterAppend>::append_dict","value":"pub fn append_dict<F: FnOnce(&mut IterAppend) ->\n                   ()>(&mut Self, &Signature, &Signature, F)","parent":null,"children":[],"decl_id":null,"docs":" Low-level function to append a dict.","sig":null,"attributes":[{"value":"/ Low-level function to append a dict.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161171,"byte_end":161211,"line_start":209,"line_end":209,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161216,"byte_end":161219,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ Use in case the `Dict` struct is not flexible enough -","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161224,"byte_end":161282,"line_start":211,"line_end":211,"column_start":5,"column_end":63}},{"value":"/ the easier way is to just call e g \"append1\" on a message and supply a `Dict` parameter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161287,"byte_end":161379,"line_start":212,"line_end":212,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161384,"byte_end":161387,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ In order not to get D-Bus errors: during the call to \"f\", you should only call \"append_dict_entry\"","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161392,"byte_end":161494,"line_start":214,"line_end":214,"column_start":5,"column_end":107}},{"value":"/ for the subiterator - do this as many times as the number of dict entries.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161499,"byte_end":161577,"line_start":215,"line_end":215,"column_start":5,"column_end":83}}]},{"kind":"Struct","id":{"krate":0,"index":4374},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161966,"byte_end":161970,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"Iter","qualname":"::arg::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper struct for retrieve one or more arguments from a Message.\n","sig":null,"attributes":[{"value":"/ Helper struct for retrieve one or more arguments from a Message.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":161886,"byte_end":161954,"line_start":225,"line_end":225,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1782},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162158,"byte_end":162161,"line_start":230,"line_end":230,"column_start":12,"column_end":15},"name":"new","qualname":"<Iter>::new","value":"pub fn new(&'a Message) -> Iter","parent":null,"children":[],"decl_id":null,"docs":" Creates a new struct for iterating over the arguments of a message, starting with the first argument.\n","sig":null,"attributes":[{"value":"/ Creates a new struct for iterating over the arguments of a message, starting with the first argument.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162041,"byte_end":162146,"line_start":229,"line_end":229,"column_start":5,"column_end":110}}]},{"kind":"Method","id":{"krate":0,"index":1783},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162418,"byte_end":162421,"line_start":237,"line_end":237,"column_start":12,"column_end":15},"name":"get","qualname":"<Iter>::get","value":"pub fn get<T: Get>(&mut Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current argument, if T is the argument type. Otherwise returns None.\n","sig":null,"attributes":[{"value":"/ Returns the current argument, if T is the argument type. Otherwise returns None.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162322,"byte_end":162406,"line_start":236,"line_end":236,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":163010,"byte_end":163020,"line_start":249,"line_end":249,"column_start":12,"column_end":22},"name":"get_refarg","qualname":"<Iter>::get_refarg","value":"pub fn get_refarg(&mut Self) -> Option<Box<RefArg + 'static>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the current argument as a trait object.","sig":null,"attributes":[{"value":"/ Returns the current argument as a trait object.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162492,"byte_end":162543,"line_start":241,"line_end":241,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162548,"byte_end":162551,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Note: For the more complex arguments (arrays / dicts / structs, and especially","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162556,"byte_end":162638,"line_start":243,"line_end":243,"column_start":5,"column_end":87}},{"value":"/ combinations thereof), their internal representations are still a bit in flux.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162643,"byte_end":162725,"line_start":244,"line_end":244,"column_start":5,"column_end":87}},{"value":"/ Instead, use as_iter() to read the values of those.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162730,"byte_end":162785,"line_start":245,"line_end":245,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162790,"byte_end":162793,"line_start":246,"line_end":246,"column_start":5,"column_end":8}},{"value":"/ The rest are unlikely to change - Variants are `Variant<Box<dyn RefArg>>`, strings are `String`,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162798,"byte_end":162898,"line_start":247,"line_end":247,"column_start":5,"column_end":105}},{"value":"/ paths are `Path<'static>`, signatures are `Signature<'static>`, Int32 are `i32s` and so on.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162903,"byte_end":162998,"line_start":248,"line_end":248,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":164487,"byte_end":164496,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"signature","qualname":"<Iter>::signature","value":"pub fn signature(&mut Self) -> Signature","parent":null,"children":[],"decl_id":null,"docs":" Returns the type signature for the current argument.\n","sig":null,"attributes":[{"value":"/ Returns the type signature for the current argument.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":164419,"byte_end":164475,"line_start":272,"line_end":272,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165213,"byte_end":165221,"line_start":289,"line_end":289,"column_start":12,"column_end":20},"name":"arg_type","qualname":"<Iter>::arg_type","value":"pub fn arg_type(&mut Self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The raw arg_type for the current item.","sig":null,"attributes":[{"value":"/ The raw arg_type for the current item.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":164874,"byte_end":164916,"line_start":284,"line_end":284,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":164921,"byte_end":164924,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Unlike Arg::arg_type, this requires access to self and is not a static method.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":164929,"byte_end":165011,"line_start":286,"line_end":286,"column_start":5,"column_end":87}},{"value":"/ You can match this against Arg::arg_type for different types to understand what type the current item is.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165016,"byte_end":165125,"line_start":287,"line_end":287,"column_start":5,"column_end":114}},{"value":"/ In case you're past the last argument, this function will return 0.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165130,"byte_end":165201,"line_start":288,"line_end":288,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165436,"byte_end":165440,"line_start":295,"line_end":295,"column_start":12,"column_end":16},"name":"next","qualname":"<Iter>::next","value":"pub fn next(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns false if there are no more items.\n","sig":null,"attributes":[{"value":"/ Returns false if there are no more items.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165379,"byte_end":165424,"line_start":294,"line_end":294,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1789},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166475,"byte_end":166479,"line_start":327,"line_end":327,"column_start":12,"column_end":16},"name":"read","qualname":"<Iter>::read","value":"pub fn read<T: Arg + Get>(&mut Self) -> Result<T, TypeMismatchError>","parent":null,"children":[],"decl_id":null,"docs":" Wrapper around `get` and `next`. Calls `get`, and then `next` if `get` succeeded.","sig":null,"attributes":[{"value":"/ Wrapper around `get` and `next`. Calls `get`, and then `next` if `get` succeeded.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165559,"byte_end":165644,"line_start":300,"line_end":300,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165649,"byte_end":165652,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Also returns a `Result` rather than an `Option` to give an error if successful.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165657,"byte_end":165740,"line_start":302,"line_end":302,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165745,"byte_end":165748,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165753,"byte_end":165766,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ ```ignore","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165771,"byte_end":165784,"line_start":305,"line_end":305,"column_start":5,"column_end":18}},{"value":"/ struct ServiceBrowserItemNew {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165789,"byte_end":165823,"line_start":306,"line_end":306,"column_start":5,"column_end":39}},{"value":"/     interface: i32,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165828,"byte_end":165851,"line_start":307,"line_end":307,"column_start":5,"column_end":28}},{"value":"/     protocol: i32,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165856,"byte_end":165878,"line_start":308,"line_end":308,"column_start":5,"column_end":27}},{"value":"/     name: String,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165883,"byte_end":165904,"line_start":309,"line_end":309,"column_start":5,"column_end":26}},{"value":"/     item_type: String,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165909,"byte_end":165935,"line_start":310,"line_end":310,"column_start":5,"column_end":31}},{"value":"/     domain: String,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165940,"byte_end":165963,"line_start":311,"line_end":311,"column_start":5,"column_end":28}},{"value":"/     flags: u32,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165968,"byte_end":165987,"line_start":312,"line_end":312,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":165992,"byte_end":165997,"line_start":313,"line_end":313,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166002,"byte_end":166005,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ fn service_browser_item_new_msg(m: &Message) -> Result<ServiceBrowserItemNew, TypeMismatchError> {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166010,"byte_end":166112,"line_start":315,"line_end":315,"column_start":5,"column_end":107}},{"value":"/     let mut iter = m.iter_init();","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166117,"byte_end":166154,"line_start":316,"line_end":316,"column_start":5,"column_end":42}},{"value":"/     Ok(ServiceBrowserItemNew {","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166159,"byte_end":166193,"line_start":317,"line_end":317,"column_start":5,"column_end":39}},{"value":"/         interface: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166198,"byte_end":166234,"line_start":318,"line_end":318,"column_start":5,"column_end":41}},{"value":"/         protocol: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166239,"byte_end":166274,"line_start":319,"line_end":319,"column_start":5,"column_end":40}},{"value":"/         name: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166279,"byte_end":166310,"line_start":320,"line_end":320,"column_start":5,"column_end":36}},{"value":"/         item_type: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166315,"byte_end":166351,"line_start":321,"line_end":321,"column_start":5,"column_end":41}},{"value":"/         domain: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166356,"byte_end":166389,"line_start":322,"line_end":322,"column_start":5,"column_end":38}},{"value":"/         flags: iter.read()?,","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166394,"byte_end":166426,"line_start":323,"line_end":323,"column_start":5,"column_end":37}},{"value":"/     })","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166431,"byte_end":166441,"line_start":324,"line_end":324,"column_start":5,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166446,"byte_end":166451,"line_start":325,"line_end":325,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166456,"byte_end":166463,"line_start":326,"line_end":326,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167073,"byte_end":167080,"line_start":339,"line_end":339,"column_start":12,"column_end":19},"name":"recurse","qualname":"<Iter>::recurse","value":"pub fn recurse(&mut Self, ArgType) -> Option<Iter>","parent":null,"children":[],"decl_id":null,"docs":" If the current argument is a container of the specified arg_type, then a new\n Iter is returned which is for iterating over the contents inside the container.","sig":null,"attributes":[{"value":"/ If the current argument is a container of the specified arg_type, then a new","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166732,"byte_end":166812,"line_start":334,"line_end":334,"column_start":5,"column_end":85}},{"value":"/ Iter is returned which is for iterating over the contents inside the container.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166817,"byte_end":166900,"line_start":335,"line_end":335,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166905,"byte_end":166908,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ Primarily for internal use (the \"get\" function is more ergonomic), but could be","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":166913,"byte_end":166996,"line_start":337,"line_end":337,"column_start":5,"column_end":88}},{"value":"/ useful for recursing into containers with unknown types.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167001,"byte_end":167061,"line_start":338,"line_end":338,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4386},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168404,"byte_end":168409,"line_start":380,"line_end":380,"column_start":5,"column_end":10},"name":"Array","qualname":"::arg::ArgType::Array","value":"ArgType::Array","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Dicts are Arrays of dict entries, so Dict types will have Array as ArgType.\n","sig":null,"attributes":[{"value":"/ Dicts are Arrays of dict entries, so Dict types will have Array as ArgType.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168320,"byte_end":168399,"line_start":379,"line_end":379,"column_start":5,"column_end":84}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4389},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168460,"byte_end":168467,"line_start":382,"line_end":382,"column_start":5,"column_end":12},"name":"Variant","qualname":"::arg::ArgType::Variant","value":"ArgType::Variant","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Variant\n","sig":null,"attributes":[{"value":"/ Variant","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168444,"byte_end":168455,"line_start":381,"line_end":381,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4392},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168517,"byte_end":168524,"line_start":384,"line_end":384,"column_start":5,"column_end":12},"name":"Boolean","qualname":"::arg::ArgType::Boolean","value":"ArgType::Boolean","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" bool\n","sig":null,"attributes":[{"value":"/ bool","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168504,"byte_end":168512,"line_start":383,"line_end":383,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4395},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168666,"byte_end":168673,"line_start":386,"line_end":386,"column_start":5,"column_end":12},"name":"Invalid","qualname":"::arg::ArgType::Invalid","value":"ArgType::Invalid","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Invalid arg type - this is also the ArgType returned when there are no more arguments available.\n","sig":null,"attributes":[{"value":"/ Invalid arg type - this is also the ArgType returned when there are no more arguments available.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168561,"byte_end":168661,"line_start":385,"line_end":385,"column_start":5,"column_end":105}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4398},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168725,"byte_end":168731,"line_start":388,"line_end":388,"column_start":5,"column_end":11},"name":"String","qualname":"::arg::ArgType::String","value":"ArgType::String","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" String\n","sig":null,"attributes":[{"value":"/ String","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168710,"byte_end":168720,"line_start":387,"line_end":387,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4401},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168862,"byte_end":168871,"line_start":390,"line_end":390,"column_start":5,"column_end":14},"name":"DictEntry","qualname":"::arg::ArgType::DictEntry","value":"ArgType::DictEntry","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Dict entry; you'll usually not encounter this one as dicts are arrays of dict entries.\n","sig":null,"attributes":[{"value":"/ Dict entry; you'll usually not encounter this one as dicts are arrays of dict entries.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168767,"byte_end":168857,"line_start":389,"line_end":389,"column_start":5,"column_end":95}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4404},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168922,"byte_end":168926,"line_start":392,"line_end":392,"column_start":5,"column_end":9},"name":"Byte","qualname":"::arg::ArgType::Byte","value":"ArgType::Byte","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" u8\n","sig":null,"attributes":[{"value":"/ u8","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168911,"byte_end":168917,"line_start":391,"line_end":391,"column_start":5,"column_end":11}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4407},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168972,"byte_end":168977,"line_start":394,"line_end":394,"column_start":5,"column_end":10},"name":"Int16","qualname":"::arg::ArgType::Int16","value":"ArgType::Int16","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" i16\n","sig":null,"attributes":[{"value":"/ i16","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168960,"byte_end":168967,"line_start":393,"line_end":393,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4410},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169024,"byte_end":169030,"line_start":396,"line_end":396,"column_start":5,"column_end":11},"name":"UInt16","qualname":"::arg::ArgType::UInt16","value":"ArgType::UInt16","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" u16\n","sig":null,"attributes":[{"value":"/ u16","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169012,"byte_end":169019,"line_start":395,"line_end":395,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4413},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169078,"byte_end":169083,"line_start":398,"line_end":398,"column_start":5,"column_end":10},"name":"Int32","qualname":"::arg::ArgType::Int32","value":"ArgType::Int32","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" i32\n","sig":null,"attributes":[{"value":"/ i32","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169066,"byte_end":169073,"line_start":397,"line_end":397,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4416},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169130,"byte_end":169136,"line_start":400,"line_end":400,"column_start":5,"column_end":11},"name":"UInt32","qualname":"::arg::ArgType::UInt32","value":"ArgType::UInt32","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" u32\n","sig":null,"attributes":[{"value":"/ u32","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169118,"byte_end":169125,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4419},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169184,"byte_end":169189,"line_start":402,"line_end":402,"column_start":5,"column_end":10},"name":"Int64","qualname":"::arg::ArgType::Int64","value":"ArgType::Int64","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" i64\n","sig":null,"attributes":[{"value":"/ i64","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169172,"byte_end":169179,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4422},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169236,"byte_end":169242,"line_start":404,"line_end":404,"column_start":5,"column_end":11},"name":"UInt64","qualname":"::arg::ArgType::UInt64","value":"ArgType::UInt64","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" u64\n","sig":null,"attributes":[{"value":"/ u64","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169224,"byte_end":169231,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4425},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169290,"byte_end":169296,"line_start":406,"line_end":406,"column_start":5,"column_end":11},"name":"Double","qualname":"::arg::ArgType::Double","value":"ArgType::Double","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" f64\n","sig":null,"attributes":[{"value":"/ f64","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169278,"byte_end":169285,"line_start":405,"line_end":405,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4428},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169348,"byte_end":169354,"line_start":408,"line_end":408,"column_start":5,"column_end":11},"name":"UnixFd","qualname":"::arg::ArgType::UnixFd","value":"ArgType::UnixFd","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" OwnedFd\n","sig":null,"attributes":[{"value":"/ OwnedFd","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169332,"byte_end":169343,"line_start":407,"line_end":407,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4431},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169457,"byte_end":169463,"line_start":410,"line_end":410,"column_start":5,"column_end":11},"name":"Struct","qualname":"::arg::ArgType::Struct","value":"ArgType::Struct","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Use tuples or Vec<Box<dyn RefArg>> to read/write structs.\n","sig":null,"attributes":[{"value":"/ Use tuples or Vec<Box<dyn RefArg>> to read/write structs.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169391,"byte_end":169452,"line_start":409,"line_end":409,"column_start":5,"column_end":66}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4434},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169512,"byte_end":169522,"line_start":412,"line_end":412,"column_start":5,"column_end":15},"name":"ObjectPath","qualname":"::arg::ArgType::ObjectPath","value":"ArgType::ObjectPath","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Path\n","sig":null,"attributes":[{"value":"/ Path","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169499,"byte_end":169507,"line_start":411,"line_end":411,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4437},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169581,"byte_end":169590,"line_start":414,"line_end":414,"column_start":5,"column_end":14},"name":"Signature","qualname":"::arg::ArgType::Signature","value":"ArgType::Signature","parent":{"krate":0,"index":4385},"children":[],"decl_id":null,"docs":" Signature\n","sig":null,"attributes":[{"value":"/ Signature","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":169563,"byte_end":169576,"line_start":413,"line_end":413,"column_start":5,"column_end":18}}]},{"kind":"Enum","id":{"krate":0,"index":4385},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168306,"byte_end":168313,"line_start":378,"line_end":378,"column_start":10,"column_end":17},"name":"ArgType","qualname":"::arg::ArgType","value":"pub enum ArgType {\n\n    /// Dicts are Arrays of dict entries, so Dict types will have Array as ArgType.\n    Array = ,\n\n    /// Variant\n    Variant = ,\n\n    /// bool\n    Boolean = ,\n\n    /// Invalid arg type - this is also the ArgType returned when there are no more arguments available.\n    Invalid = ,\n\n    /// String\n    String = ,\n\n    /// Dict entry; you'll usually not encounter this one as dicts are arrays of dict entries.\n    DictEntry = ,\n\n    /// u8\n    Byte = ,\n\n    /// i16\n    Int16 = ,\n\n    /// u16\n    UInt16 = ,\n\n    /// i32\n    Int32 = ,\n\n    /// u32\n    UInt32 = ,\n\n    /// i64\n    Int64 = ,\n\n    /// u64\n    UInt64 = ,\n\n    /// f64\n    Double = ,\n\n    /// OwnedFd\n    UnixFd = ,\n\n    /// Use tuples or Vec<Box<dyn RefArg>> to read/write structs.\n    Struct = ,\n\n    /// Path\n    ObjectPath = ,\n\n    /// Signature\n    Signature = ,\n}","parent":null,"children":[{"krate":0,"index":4386},{"krate":0,"index":4389},{"krate":0,"index":4392},{"krate":0,"index":4395},{"krate":0,"index":4398},{"krate":0,"index":4401},{"krate":0,"index":4404},{"krate":0,"index":4407},{"krate":0,"index":4410},{"krate":0,"index":4413},{"krate":0,"index":4416},{"krate":0,"index":4419},{"krate":0,"index":4422},{"krate":0,"index":4425},{"krate":0,"index":4428},{"krate":0,"index":4431},{"krate":0,"index":4434},{"krate":0,"index":4437}],"decl_id":null,"docs":" Type of Argument","sig":null,"attributes":[{"value":"/ Type of Argument","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168100,"byte_end":168120,"line_start":373,"line_end":373,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168121,"byte_end":168124,"line_start":374,"line_end":374,"column_start":1,"column_end":4}},{"value":"/ use this to figure out, e g, which type of argument is at the current position of Iter.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168125,"byte_end":168216,"line_start":375,"line_end":375,"column_start":1,"column_end":92}},{"value":"repr(u8)","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":168217,"byte_end":168228,"line_start":376,"line_end":376,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1804},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170344,"byte_end":170350,"line_start":439,"line_end":439,"column_start":12,"column_end":18},"name":"as_str","qualname":"<ArgType>::as_str","value":"pub fn as_str(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" A str corresponding to the name of a Rust type.\n","sig":null,"attributes":[{"value":"/ A str corresponding to the name of a Rust type.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170281,"byte_end":170332,"line_start":438,"line_end":438,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1806},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170516,"byte_end":170519,"line_start":444,"line_end":444,"column_start":12,"column_end":15},"name":"all","qualname":"<ArgType>::all","value":"pub fn all() -> Vec<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns a Vec of all possible argtypes.\n","sig":null,"attributes":[{"value":"/ Returns a Vec of all possible argtypes.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170461,"byte_end":170504,"line_start":443,"line_end":443,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1808},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170660,"byte_end":170668,"line_start":449,"line_end":449,"column_start":12,"column_end":20},"name":"from_i32","qualname":"<ArgType>::from_i32","value":"pub fn from_i32(i32) -> Result<ArgType, String>","parent":null,"children":[],"decl_id":null,"docs":" Converts an i32 to an ArgType (or an error).\n","sig":null,"attributes":[{"value":"/ Converts an i32 to an ArgType (or an error).","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170600,"byte_end":170648,"line_start":448,"line_end":448,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":4458},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171045,"byte_end":171062,"line_start":462,"line_end":462,"column_start":12,"column_end":29},"name":"TypeMismatchError","qualname":"::arg::TypeMismatchError","value":"TypeMismatchError {  }","parent":null,"children":[{"krate":0,"index":4459},{"krate":0,"index":4460},{"krate":0,"index":4461}],"decl_id":null,"docs":" Error struct to indicate a D-Bus argument type mismatch.","sig":null,"attributes":[{"value":"/ Error struct to indicate a D-Bus argument type mismatch.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170881,"byte_end":170941,"line_start":458,"line_end":458,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170942,"byte_end":170945,"line_start":459,"line_end":459,"column_start":1,"column_end":4}},{"value":"/ Might be returned from `iter::read()`.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170946,"byte_end":170988,"line_start":460,"line_end":460,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1810},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171221,"byte_end":171238,"line_start":470,"line_end":470,"column_start":12,"column_end":29},"name":"expected_arg_type","qualname":"<TypeMismatchError>::expected_arg_type","value":"pub fn expected_arg_type(&Self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The ArgType we were trying to read, but failed\n","sig":null,"attributes":[{"value":"/ The ArgType we were trying to read, but failed","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171159,"byte_end":171209,"line_start":469,"line_end":469,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171376,"byte_end":171390,"line_start":473,"line_end":473,"column_start":12,"column_end":26},"name":"found_arg_type","qualname":"<TypeMismatchError>::found_arg_type","value":"pub fn found_arg_type(&Self) -> ArgType","parent":null,"children":[],"decl_id":null,"docs":" The ArgType we should have been trying to read, if we wanted the read to succeed\n","sig":null,"attributes":[{"value":"/ The ArgType we should have been trying to read, if we wanted the read to succeed","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171280,"byte_end":171364,"line_start":472,"line_end":472,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171556,"byte_end":171559,"line_start":478,"line_end":478,"column_start":12,"column_end":15},"name":"pos","qualname":"<TypeMismatchError>::pos","value":"pub fn pos(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" At what argument was the error found?","sig":null,"attributes":[{"value":"/ At what argument was the error found?","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171429,"byte_end":171470,"line_start":475,"line_end":475,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171475,"byte_end":171478,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ Returns 0 for first argument, 1 for second argument, etc.","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171483,"byte_end":171544,"line_start":477,"line_end":477,"column_start":5,"column_end":66}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28617,"byte_end":28626,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":69},{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3108,"byte_end":3115,"line_start":36,"line_end":36,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3125,"byte_end":3132,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":135},{"krate":0,"index":137},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":157},{"krate":0,"index":164},{"krate":0,"index":167},{"krate":0,"index":171},{"krate":0,"index":176},{"krate":0,"index":182},{"krate":0,"index":189},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":199},{"krate":0,"index":201},{"krate":0,"index":203},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":21262,"byte_end":21269,"line_start":463,"line_end":463,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":21400,"byte_end":21407,"line_start":471,"line_end":471,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44846,"byte_end":44854,"line_start":37,"line_end":37,"column_start":88,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45860,"byte_end":45868,"line_start":58,"line_end":58,"column_start":84,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":270},{"krate":0,"index":271},{"krate":0,"index":275},{"krate":0,"index":277}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47908,"byte_end":47935,"line_start":105,"line_end":105,"column_start":25,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48191,"byte_end":48218,"line_start":113,"line_end":113,"column_start":23,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48513,"byte_end":48540,"line_start":123,"line_end":123,"column_start":30,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":285},{"krate":0,"index":286}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":49173,"byte_end":49181,"line_start":134,"line_end":134,"column_start":87,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50330,"byte_end":50358,"line_start":155,"line_end":155,"column_start":25,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50536,"byte_end":50564,"line_start":162,"line_end":162,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":299}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50797,"byte_end":50825,"line_start":171,"line_end":171,"column_start":30,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":301},{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51330,"byte_end":51360,"line_start":184,"line_end":184,"column_start":25,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51538,"byte_end":51568,"line_start":191,"line_end":191,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51803,"byte_end":51833,"line_start":200,"line_end":200,"column_start":30,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52321,"byte_end":52329,"line_start":212,"line_end":212,"column_start":78,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":56026,"byte_end":56036,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403},{"krate":0,"index":404},{"krate":0,"index":405},{"krate":0,"index":406},{"krate":0,"index":410},{"krate":0,"index":411},{"krate":0,"index":412},{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":71644,"byte_end":71654,"line_start":458,"line_end":458,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":71844,"byte_end":71854,"line_start":467,"line_end":467,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72030,"byte_end":72040,"line_start":473,"line_end":473,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72171,"byte_end":72181,"line_start":477,"line_end":477,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73060,"byte_end":73075,"line_start":508,"line_end":508,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":434},{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74717,"byte_end":74732,"line_start":551,"line_end":551,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":438},{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76499,"byte_end":76507,"line_start":591,"line_end":591,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":443},{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33098,"byte_end":33106,"line_start":33,"line_end":33,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453},{"krate":0,"index":456},{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79824,"byte_end":79834,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80619,"byte_end":80624,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":81263,"byte_end":81268,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":81583,"byte_end":81592,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36177,"byte_end":36185,"line_start":104,"line_end":104,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":516}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36727,"byte_end":36741,"line_start":123,"line_end":123,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37579,"byte_end":37593,"line_start":152,"line_end":152,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":520}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":39186,"byte_end":39198,"line_start":195,"line_end":195,"column_start":66,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":533},{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87992,"byte_end":87997,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88218,"byte_end":88223,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88233,"byte_end":88238,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":554},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":561}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89530,"byte_end":89535,"line_start":65,"line_end":65,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89646,"byte_end":89651,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":565}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89862,"byte_end":89867,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":567}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89947,"byte_end":89952,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90172,"byte_end":90177,"line_start":90,"line_end":90,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":571}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90347,"byte_end":90352,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":573}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90707,"byte_end":90716,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":575},{"krate":0,"index":577},{"krate":0,"index":578},{"krate":0,"index":580},{"krate":0,"index":582},{"krate":0,"index":584},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":590},{"krate":0,"index":591},{"krate":0,"index":592}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93004,"byte_end":93013,"line_start":160,"line_end":160,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93150,"byte_end":93159,"line_start":166,"line_end":166,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93197,"byte_end":93206,"line_start":168,"line_end":168,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93394,"byte_end":93403,"line_start":172,"line_end":172,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93505,"byte_end":93514,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100778,"byte_end":100788,"line_start":14,"line_end":14,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100813,"byte_end":100823,"line_start":15,"line_end":15,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100842,"byte_end":100852,"line_start":17,"line_end":17,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101126,"byte_end":101137,"line_start":29,"line_end":29,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101162,"byte_end":101173,"line_start":30,"line_end":30,"column_start":22,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101626,"byte_end":101634,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":644}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":103583,"byte_end":103591,"line_start":96,"line_end":96,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":649}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104652,"byte_end":104659,"line_start":124,"line_end":124,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":651}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104796,"byte_end":104803,"line_start":130,"line_end":130,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":663},{"krate":0,"index":665},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":113250,"byte_end":113255,"line_start":352,"line_end":352,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95424,"byte_end":95431,"line_start":52,"line_end":52,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":680}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95671,"byte_end":95676,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":682}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96446,"byte_end":96453,"line_start":83,"line_end":83,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/filters.rs","byte_start":113979,"byte_end":113986,"line_start":12,"line_end":12,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/filters.rs","byte_start":114104,"byte_end":114111,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":132081,"byte_end":132086,"line_start":13,"line_end":13,"column_start":96,"column_end":101},"value":"","parent":null,"children":[{"krate":0,"index":754},{"krate":0,"index":758},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133095,"byte_end":133122,"line_start":37,"line_end":37,"column_start":25,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133378,"byte_end":133405,"line_start":45,"line_end":45,"column_start":23,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":765}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133706,"byte_end":133733,"line_start":55,"line_end":55,"column_start":36,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":767},{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134048,"byte_end":134053,"line_start":64,"line_end":64,"column_start":100,"column_end":105},"value":"","parent":null,"children":[{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134479,"byte_end":134484,"line_start":77,"line_end":77,"column_start":90,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135096,"byte_end":135101,"line_start":93,"line_end":93,"column_start":99,"column_end":104},"value":"","parent":null,"children":[{"krate":0,"index":793}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135705,"byte_end":135733,"line_start":107,"line_end":107,"column_start":25,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":796}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135911,"byte_end":135939,"line_start":114,"line_end":114,"column_start":23,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136178,"byte_end":136206,"line_start":123,"line_end":123,"column_start":36,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":800},{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136494,"byte_end":136524,"line_start":134,"line_end":134,"column_start":25,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136702,"byte_end":136732,"line_start":141,"line_end":141,"column_start":23,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136973,"byte_end":137003,"line_start":150,"line_end":150,"column_start":36,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":139244,"byte_end":139249,"line_start":31,"line_end":31,"column_start":90,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":845},{"krate":0,"index":847},{"krate":0,"index":848},{"krate":0,"index":850},{"krate":0,"index":852},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856},{"krate":0,"index":858},{"krate":0,"index":860},{"krate":0,"index":862},{"krate":0,"index":864},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":871},{"krate":0,"index":873},{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":143747,"byte_end":143767,"line_start":140,"line_end":140,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":876}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":143981,"byte_end":144001,"line_start":148,"line_end":148,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":878}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144253,"byte_end":144273,"line_start":158,"line_end":158,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":880},{"krate":0,"index":881}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144482,"byte_end":144494,"line_start":168,"line_end":168,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144620,"byte_end":144632,"line_start":174,"line_end":174,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144818,"byte_end":144830,"line_start":182,"line_end":182,"column_start":36,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145035,"byte_end":145051,"line_start":192,"line_end":192,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145177,"byte_end":145193,"line_start":198,"line_end":198,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":892}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145383,"byte_end":145399,"line_start":206,"line_end":206,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124217,"byte_end":124227,"line_start":254,"line_end":254,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124334,"byte_end":124349,"line_start":258,"line_end":258,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":929}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124461,"byte_end":124475,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":931}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125022,"byte_end":125029,"line_start":274,"line_end":274,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125942,"byte_end":125947,"line_start":297,"line_end":297,"column_start":13,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126261,"byte_end":126266,"line_start":304,"line_end":304,"column_start":59,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":953},{"krate":0,"index":955},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151021,"byte_end":151030,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":983}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151489,"byte_end":151493,"line_start":190,"line_end":190,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":987}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177900,"byte_end":177903,"line_start":134,"line_end":134,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1040}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":182512,"byte_end":182515,"line_start":253,"line_end":253,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203387,"byte_end":203393,"line_start":186,"line_end":186,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203560,"byte_end":203566,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1163},{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203813,"byte_end":203819,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203844,"byte_end":203850,"line_start":201,"line_end":201,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1169}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204598,"byte_end":204605,"line_start":227,"line_end":227,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204768,"byte_end":204775,"line_start":231,"line_end":231,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204923,"byte_end":204930,"line_start":236,"line_end":236,"column_start":18,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204955,"byte_end":204962,"line_start":237,"line_end":237,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1187}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207451,"byte_end":207458,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207729,"byte_end":207736,"line_start":19,"line_end":19,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207813,"byte_end":207820,"line_start":24,"line_end":24,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1204},{"krate":0,"index":1205}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208005,"byte_end":208012,"line_start":29,"line_end":29,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1208}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208220,"byte_end":208227,"line_start":36,"line_end":36,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208458,"byte_end":208465,"line_start":43,"line_end":43,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1216}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208631,"byte_end":208638,"line_start":49,"line_end":49,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":209015,"byte_end":209022,"line_start":61,"line_end":61,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1223},{"krate":0,"index":1224},{"krate":0,"index":1225},{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229},{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1233},{"krate":0,"index":1236},{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":213303,"byte_end":213311,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1240},{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1244},{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1249},{"krate":0,"index":1251}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":217500,"byte_end":217503,"line_start":81,"line_end":81,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1310},{"krate":0,"index":1311},{"krate":0,"index":1312},{"krate":0,"index":1314},{"krate":0,"index":1315},{"krate":0,"index":1316},{"krate":0,"index":1319},{"krate":0,"index":1321}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219485,"byte_end":219489,"line_start":131,"line_end":131,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1332}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219667,"byte_end":219671,"line_start":135,"line_end":135,"column_start":75,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":1338}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219896,"byte_end":219900,"line_start":140,"line_end":140,"column_start":41,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1345},{"krate":0,"index":1346}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220171,"byte_end":220175,"line_start":146,"line_end":146,"column_start":103,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1352}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220623,"byte_end":220627,"line_start":159,"line_end":159,"column_start":62,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220882,"byte_end":220886,"line_start":166,"line_end":166,"column_start":63,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1365},{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221373,"byte_end":221380,"line_start":182,"line_end":182,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1372},{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221646,"byte_end":221653,"line_start":188,"line_end":188,"column_start":83,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":1378}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221872,"byte_end":221879,"line_start":194,"line_end":194,"column_start":100,"column_end":107},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":222142,"byte_end":222149,"line_start":201,"line_end":201,"column_start":97,"column_end":104},"value":"","parent":null,"children":[{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1400}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223377,"byte_end":223380,"line_start":229,"line_end":229,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223561,"byte_end":223564,"line_start":234,"line_end":234,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1408}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223711,"byte_end":223714,"line_start":240,"line_end":240,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1412}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224150,"byte_end":224155,"line_start":253,"line_end":253,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1418}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224360,"byte_end":224365,"line_start":258,"line_end":258,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224591,"byte_end":224596,"line_start":263,"line_end":263,"column_start":72,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224858,"byte_end":224863,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1435}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":225106,"byte_end":225111,"line_start":277,"line_end":277,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":225536,"byte_end":225541,"line_start":289,"line_end":289,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1450},{"krate":0,"index":1451},{"krate":0,"index":1452}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":228298,"byte_end":228310,"line_start":373,"line_end":373,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1482}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":229792,"byte_end":229804,"line_start":407,"line_end":407,"column_start":56,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488},{"krate":0,"index":1491},{"krate":0,"index":1492},{"krate":0,"index":1493},{"krate":0,"index":1496},{"krate":0,"index":1497}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":231740,"byte_end":231753,"line_start":457,"line_end":457,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502},{"krate":0,"index":1503},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1510},{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238855,"byte_end":238871,"line_start":40,"line_end":40,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1555},{"krate":0,"index":1556},{"krate":0,"index":1557},{"krate":0,"index":1558},{"krate":0,"index":1559}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240128,"byte_end":240144,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240253,"byte_end":240269,"line_start":77,"line_end":77,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1564}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240737,"byte_end":240752,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1569},{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241813,"byte_end":241828,"line_start":118,"line_end":118,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241952,"byte_end":241967,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1575}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244415,"byte_end":244426,"line_start":187,"line_end":187,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1579},{"krate":0,"index":1581},{"krate":0,"index":1582},{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1595}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251142,"byte_end":251153,"line_start":354,"line_end":354,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251378,"byte_end":251389,"line_start":362,"line_end":362,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1609}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251613,"byte_end":251624,"line_start":369,"line_end":369,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251720,"byte_end":251731,"line_start":371,"line_end":371,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251824,"byte_end":251835,"line_start":373,"line_end":373,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251947,"byte_end":251958,"line_start":375,"line_end":375,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1618}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":252063,"byte_end":252074,"line_start":377,"line_end":377,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1620}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":252210,"byte_end":252221,"line_start":380,"line_end":380,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":254559,"byte_end":254570,"line_start":445,"line_end":445,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1661}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":255870,"byte_end":255881,"line_start":473,"line_end":473,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1666}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":258590,"byte_end":258601,"line_start":524,"line_end":524,"column_start":22,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1668},{"krate":0,"index":1669},{"krate":0,"index":1670},{"krate":0,"index":1671},{"krate":0,"index":1672},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259135,"byte_end":259142,"line_start":537,"line_end":537,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1675}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259625,"byte_end":259630,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262499,"byte_end":262510,"line_start":625,"line_end":625,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1701},{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156777,"byte_end":156784,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1750},{"krate":0,"index":1751}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157282,"byte_end":157289,"line_start":111,"line_end":111,"column_start":15,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1753}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157382,"byte_end":157389,"line_start":117,"line_end":117,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1755}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157601,"byte_end":157608,"line_start":125,"line_end":125,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157690,"byte_end":157697,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1759}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157787,"byte_end":157794,"line_start":137,"line_end":137,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1761}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158029,"byte_end":158039,"line_start":145,"line_end":145,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1767},{"krate":0,"index":1770},{"krate":0,"index":1772},{"krate":0,"index":1774},{"krate":0,"index":1776},{"krate":0,"index":1778}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162026,"byte_end":162030,"line_start":228,"line_end":228,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167612,"byte_end":167616,"line_start":352,"line_end":352,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1796}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167905,"byte_end":167909,"line_start":364,"line_end":364,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1799},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170267,"byte_end":170274,"line_start":437,"line_end":437,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1804},{"krate":0,"index":1806},{"krate":0,"index":1808}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Inherent","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171135,"byte_end":171152,"line_start":468,"line_end":468,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1810},{"krate":0,"index":1811},{"krate":0,"index":1812}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171617,"byte_end":171634,"line_start":481,"line_end":481,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171789,"byte_end":171806,"line_start":486,"line_end":486,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1089,"byte_end":1096,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":8}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1107,"byte_end":1114,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":223}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":32431,"byte_end":32438,"line_start":12,"line_end":12,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":240}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1172,"byte_end":1179,"line_start":34,"line_end":34,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":607}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1204,"byte_end":1212,"line_start":38,"line_end":38,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":713}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1270,"byte_end":1277,"line_start":43,"line_end":43,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":965}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/lib.rs","byte_start":1331,"byte_end":1334,"line_start":46,"line_end":46,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":991}},{"kind":"Mod","span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":155849,"byte_end":155860,"line_start":66,"line_end":66,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":1531}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message/matchrule.rs","byte_start":28617,"byte_end":28626,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1859},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3108,"byte_end":3115,"line_start":36,"line_end":36,"column_start":22,"column_end":29},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":3125,"byte_end":3132,"line_start":38,"line_end":38,"column_start":6,"column_end":13},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":84},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":21262,"byte_end":21269,"line_start":463,"line_end":463,"column_start":15,"column_end":22},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/message.rs","byte_start":21400,"byte_end":21407,"line_start":471,"line_end":471,"column_start":21,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":84},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":44846,"byte_end":44854,"line_start":37,"line_end":37,"column_start":88,"column_end":96},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":250}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":45860,"byte_end":45868,"line_start":58,"line_end":58,"column_start":84,"column_end":92},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":259}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":47908,"byte_end":47935,"line_start":105,"line_end":105,"column_start":25,"column_end":52},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48191,"byte_end":48218,"line_start":113,"line_end":113,"column_start":23,"column_end":50},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":48513,"byte_end":48540,"line_start":123,"line_end":123,"column_start":30,"column_end":57},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1879},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":49173,"byte_end":49181,"line_start":134,"line_end":134,"column_start":87,"column_end":95},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":287}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50330,"byte_end":50358,"line_start":155,"line_end":155,"column_start":25,"column_end":53},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50536,"byte_end":50564,"line_start":162,"line_end":162,"column_start":23,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":50797,"byte_end":50825,"line_start":171,"line_end":171,"column_start":30,"column_end":58},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":1887},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51330,"byte_end":51360,"line_start":184,"line_end":184,"column_start":25,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1894},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51538,"byte_end":51568,"line_start":191,"line_end":191,"column_start":23,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1894},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":51803,"byte_end":51833,"line_start":200,"line_end":200,"column_start":30,"column_end":60},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1894},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/stdintf.rs","byte_start":52321,"byte_end":52329,"line_start":212,"line_end":212,"column_start":78,"column_end":86},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1911},"to":{"krate":0,"index":310}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":56026,"byte_end":56036,"line_start":84,"line_end":84,"column_start":6,"column_end":16},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":71644,"byte_end":71654,"line_start":458,"line_end":458,"column_start":15,"column_end":25},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":71844,"byte_end":71854,"line_start":467,"line_end":467,"column_start":21,"column_end":31},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":369},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72030,"byte_end":72040,"line_start":473,"line_end":473,"column_start":33,"column_end":43},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":72171,"byte_end":72181,"line_start":477,"line_end":477,"column_start":42,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":369},"to":{"krate":0,"index":932}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":73060,"byte_end":73075,"line_start":508,"line_end":508,"column_start":10,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":423},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":74717,"byte_end":74732,"line_start":551,"line_end":551,"column_start":23,"column_end":38},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":423},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/connection.rs","byte_start":76499,"byte_end":76507,"line_start":591,"line_end":591,"column_start":55,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1901},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":33098,"byte_end":33106,"line_start":33,"line_end":33,"column_start":51,"column_end":59},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1911},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":79824,"byte_end":79834,"line_start":53,"line_end":53,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1926},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":80619,"byte_end":80624,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":81263,"byte_end":81268,"line_start":88,"line_end":88,"column_start":18,"column_end":23},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1947},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp/watch.rs","byte_start":81583,"byte_end":81592,"line_start":99,"line_end":99,"column_start":6,"column_end":15},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":494},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36177,"byte_end":36185,"line_start":104,"line_end":104,"column_start":6,"column_end":14},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1979},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":36727,"byte_end":36741,"line_start":123,"line_end":123,"column_start":24,"column_end":38},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2004},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":37579,"byte_end":37593,"line_start":152,"line_end":152,"column_start":6,"column_end":20},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2018},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/ffidisp.rs","byte_start":39186,"byte_end":39198,"line_start":195,"line_end":195,"column_start":66,"column_end":78},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":525},"to":{"krate":0,"index":521}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":87992,"byte_end":87997,"line_start":15,"line_end":15,"column_start":22,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88218,"byte_end":88223,"line_start":21,"line_end":21,"column_start":22,"column_end":27},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":88233,"byte_end":88238,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89530,"byte_end":89535,"line_start":65,"line_end":65,"column_start":15,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89646,"byte_end":89651,"line_start":71,"line_end":71,"column_start":21,"column_end":26},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89862,"byte_end":89867,"line_start":78,"line_end":78,"column_start":19,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":549},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":89947,"byte_end":89952,"line_start":82,"line_end":82,"column_start":23,"column_end":28},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90172,"byte_end":90177,"line_start":90,"line_end":90,"column_start":39,"column_end":44},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90347,"byte_end":90352,"line_start":97,"line_end":97,"column_start":26,"column_end":31},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":549},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":90707,"byte_end":90716,"line_start":110,"line_end":110,"column_start":6,"column_end":15},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2039},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93004,"byte_end":93013,"line_start":160,"line_end":160,"column_start":23,"column_end":32},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2039},"to":{"krate":2,"index":6560}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93150,"byte_end":93159,"line_start":166,"line_end":166,"column_start":19,"column_end":28},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2039},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93197,"byte_end":93206,"line_start":168,"line_end":168,"column_start":34,"column_end":43},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2039},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93394,"byte_end":93403,"line_start":172,"line_end":172,"column_start":69,"column_end":78},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2039},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/error.rs","byte_start":93505,"byte_end":93514,"line_start":176,"line_end":176,"column_start":22,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2039},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100778,"byte_end":100788,"line_start":14,"line_end":14,"column_start":22,"column_end":32},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100813,"byte_end":100823,"line_start":15,"line_end":15,"column_start":22,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":100842,"byte_end":100852,"line_start":17,"line_end":17,"column_start":15,"column_end":25},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2066},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101126,"byte_end":101137,"line_start":29,"line_end":29,"column_start":22,"column_end":33},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2034}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101162,"byte_end":101173,"line_start":30,"line_end":30,"column_start":22,"column_end":33},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2072},"to":{"krate":2,"index":2046}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":101626,"byte_end":101634,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2087},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":103583,"byte_end":103591,"line_start":96,"line_end":96,"column_start":15,"column_end":23},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2087},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104652,"byte_end":104659,"line_start":124,"line_end":124,"column_start":15,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2094},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":104796,"byte_end":104803,"line_start":130,"line_end":130,"column_start":6,"column_end":13},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":2094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel/ffichannel.rs","byte_start":113250,"byte_end":113255,"line_start":352,"line_end":352,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2127},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95424,"byte_end":95431,"line_start":52,"line_end":52,"column_start":28,"column_end":35},"kind":{"Impl":{"id":60}},"from":{"krate":2,"index":2967},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":95671,"byte_end":95676,"line_start":60,"line_end":60,"column_start":28,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":1,"index":5213},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/channel.rs","byte_start":96446,"byte_end":96453,"line_start":83,"line_end":83,"column_start":17,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2094},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/filters.rs","byte_start":113979,"byte_end":113986,"line_start":12,"line_end":12,"column_start":21,"column_end":28},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":698},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/filters.rs","byte_start":114104,"byte_end":114111,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":698},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":132081,"byte_end":132086,"line_start":13,"line_end":13,"column_start":96,"column_end":101},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":743}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133095,"byte_end":133122,"line_start":37,"line_end":37,"column_start":25,"column_end":52},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2183},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133378,"byte_end":133405,"line_start":45,"line_end":45,"column_start":23,"column_end":50},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2183},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":133706,"byte_end":133733,"line_start":55,"line_end":55,"column_start":36,"column_end":63},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2183},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134048,"byte_end":134053,"line_start":64,"line_end":64,"column_start":100,"column_end":105},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":769}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":134479,"byte_end":134484,"line_start":77,"line_end":77,"column_start":90,"column_end":95},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":777}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135096,"byte_end":135101,"line_start":93,"line_end":93,"column_start":99,"column_end":104},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":787}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135705,"byte_end":135733,"line_start":107,"line_end":107,"column_start":25,"column_end":53},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":135911,"byte_end":135939,"line_start":114,"line_end":114,"column_start":23,"column_end":51},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136178,"byte_end":136206,"line_start":123,"line_end":123,"column_start":36,"column_end":64},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2189},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136494,"byte_end":136524,"line_start":134,"line_end":134,"column_start":25,"column_end":55},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136702,"byte_end":136732,"line_start":141,"line_end":141,"column_start":23,"column_end":53},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_standard_interfaces.rs","byte_start":136973,"byte_end":137003,"line_start":150,"line_end":150,"column_start":36,"column_end":66},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2194},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":139244,"byte_end":139249,"line_start":31,"line_end":31,"column_start":90,"column_end":95},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2393},"to":{"krate":0,"index":813}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":143747,"byte_end":143767,"line_start":140,"line_end":140,"column_start":25,"column_end":45},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2199},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":143981,"byte_end":144001,"line_start":148,"line_end":148,"column_start":23,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2199},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144253,"byte_end":144273,"line_start":158,"line_end":158,"column_start":36,"column_end":56},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":2199},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144482,"byte_end":144494,"line_start":168,"line_end":168,"column_start":25,"column_end":37},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":2205},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144620,"byte_end":144632,"line_start":174,"line_end":174,"column_start":23,"column_end":35},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":2205},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":144818,"byte_end":144830,"line_start":182,"line_end":182,"column_start":36,"column_end":48},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":2205},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145035,"byte_end":145051,"line_start":192,"line_end":192,"column_start":25,"column_end":41},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":2209},"to":{"krate":0,"index":1016}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145177,"byte_end":145193,"line_start":198,"line_end":198,"column_start":23,"column_end":39},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":2209},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking/generated_org_freedesktop_dbus.rs","byte_start":145383,"byte_end":145399,"line_start":206,"line_end":206,"column_start":36,"column_end":52},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":2209},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124217,"byte_end":124227,"line_start":254,"line_end":254,"column_start":6,"column_end":16},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":918},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124334,"byte_end":124349,"line_start":258,"line_end":258,"column_start":6,"column_end":21},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":915},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":124461,"byte_end":124475,"line_start":262,"line_end":262,"column_start":6,"column_end":20},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125022,"byte_end":125029,"line_start":274,"line_end":274,"column_start":25,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":2094},"to":{"krate":0,"index":932}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":125942,"byte_end":125947,"line_start":297,"line_end":297,"column_start":13,"column_end":18},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":2393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/blocking.rs","byte_start":126261,"byte_end":126266,"line_start":304,"line_end":304,"column_start":59,"column_end":64},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":2393},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151021,"byte_end":151030,"line_start":177,"line_end":177,"column_start":6,"column_end":15},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":2408},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/strings.rs","byte_start":151489,"byte_end":151493,"line_start":190,"line_end":190,"column_start":31,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":2484},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174058,"byte_end":174063,"line_start":46,"line_end":46,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174225,"byte_end":174230,"line_start":52,"line_end":52,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":2039},"to":{"krate":0,"index":1021}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174406,"byte_end":174411,"line_start":59,"line_end":59,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":6555},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174414,"byte_end":174418,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":"SuperTrait","from":{"krate":2,"index":2034},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":174421,"byte_end":174425,"line_start":59,"line_end":59,"column_start":39,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":2046},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":177900,"byte_end":177903,"line_start":134,"line_end":134,"column_start":22,"column_end":25},"kind":{"Impl":{"id":96}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179303,"byte_end":179306,"line_start":165,"line_end":165,"column_start":30,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":1006},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179319,"byte_end":179324,"line_start":165,"line_end":165,"column_start":46,"column_end":51},"kind":"SuperTrait","from":{"krate":2,"index":1732},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179327,"byte_end":179331,"line_start":165,"line_end":165,"column_start":54,"column_end":58},"kind":"SuperTrait","from":{"krate":2,"index":2044},"to":{"krate":0,"index":1052}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":179427,"byte_end":179430,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":1006},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/msgarg.rs","byte_start":182512,"byte_end":182515,"line_start":253,"line_end":253,"column_start":28,"column_end":31},"kind":{"Impl":{"id":97}},"from":{"krate":5,"index":85},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203387,"byte_end":203393,"line_start":186,"line_end":186,"column_start":18,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203560,"byte_end":203566,"line_start":190,"line_end":190,"column_start":21,"column_end":27},"kind":{"Impl":{"id":110}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203813,"byte_end":203819,"line_start":200,"line_end":200,"column_start":22,"column_end":28},"kind":{"Impl":{"id":111}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":203844,"byte_end":203850,"line_start":201,"line_end":201,"column_start":22,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":5,"index":5311},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204598,"byte_end":204605,"line_start":227,"line_end":227,"column_start":14,"column_end":21},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":4350},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204768,"byte_end":204775,"line_start":231,"line_end":231,"column_start":17,"column_end":24},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":4350},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204923,"byte_end":204930,"line_start":236,"line_end":236,"column_start":18,"column_end":25},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":4350},"to":{"krate":0,"index":1053}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/basic_impl.rs","byte_start":204955,"byte_end":204962,"line_start":237,"line_end":237,"column_start":22,"column_end":29},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":4350},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207451,"byte_end":207458,"line_start":12,"line_end":12,"column_start":6,"column_end":13},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207729,"byte_end":207736,"line_start":19,"line_end":19,"column_start":29,"column_end":36},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3515},"to":{"krate":2,"index":2022}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":207813,"byte_end":207820,"line_start":24,"line_end":24,"column_start":17,"column_end":24},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208005,"byte_end":208012,"line_start":29,"line_end":29,"column_start":34,"column_end":41},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208220,"byte_end":208227,"line_start":36,"line_end":36,"column_start":17,"column_end":24},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208458,"byte_end":208465,"line_start":43,"line_end":43,"column_start":34,"column_end":41},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":208631,"byte_end":208638,"line_start":49,"line_end":49,"column_start":22,"column_end":29},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":209015,"byte_end":209022,"line_start":61,"line_end":61,"column_start":28,"column_end":35},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/variantstruct_impl.rs","byte_start":213303,"byte_end":213311,"line_start":183,"line_end":183,"column_start":17,"column_end":25},"kind":{"Impl":{"id":127}},"from":{"krate":5,"index":2825},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":217500,"byte_end":217503,"line_start":81,"line_end":81,"column_start":34,"column_end":37},"kind":{"Impl":{"id":128}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219485,"byte_end":219489,"line_start":131,"line_end":131,"column_start":33,"column_end":37},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":4117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219667,"byte_end":219671,"line_start":135,"line_end":135,"column_start":75,"column_end":79},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":4117},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":219896,"byte_end":219900,"line_start":140,"line_end":140,"column_start":41,"column_end":45},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":4117},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220171,"byte_end":220175,"line_start":146,"line_end":146,"column_start":103,"column_end":107},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":4117},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220623,"byte_end":220627,"line_start":159,"line_end":159,"column_start":62,"column_end":66},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":4117},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":220882,"byte_end":220886,"line_start":166,"line_end":166,"column_start":63,"column_end":67},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":4117},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221373,"byte_end":221380,"line_start":182,"line_end":182,"column_start":50,"column_end":57},"kind":{"Impl":{"id":135}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221646,"byte_end":221653,"line_start":188,"line_end":188,"column_start":83,"column_end":90},"kind":{"Impl":{"id":136}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":221872,"byte_end":221879,"line_start":194,"line_end":194,"column_start":100,"column_end":107},"kind":{"Impl":{"id":137}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":222142,"byte_end":222149,"line_start":201,"line_end":201,"column_start":97,"column_end":104},"kind":{"Impl":{"id":138}},"from":{"krate":1,"index":6696},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223377,"byte_end":223380,"line_start":229,"line_end":229,"column_start":22,"column_end":25},"kind":{"Impl":{"id":139}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223561,"byte_end":223564,"line_start":234,"line_end":234,"column_start":34,"column_end":37},"kind":{"Impl":{"id":140}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":223711,"byte_end":223714,"line_start":240,"line_end":240,"column_start":40,"column_end":43},"kind":{"Impl":{"id":141}},"from":{"krate":5,"index":4551},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224150,"byte_end":224155,"line_start":253,"line_end":253,"column_start":38,"column_end":43},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":4142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224360,"byte_end":224365,"line_start":258,"line_end":258,"column_start":29,"column_end":34},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1006}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224591,"byte_end":224596,"line_start":263,"line_end":263,"column_start":72,"column_end":77},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":224858,"byte_end":224863,"line_start":270,"line_end":270,"column_start":40,"column_end":45},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":225106,"byte_end":225111,"line_start":277,"line_end":277,"column_start":35,"column_end":40},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":4142},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":225536,"byte_end":225541,"line_start":289,"line_end":289,"column_start":27,"column_end":32},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4142},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":228298,"byte_end":228310,"line_start":373,"line_end":373,"column_start":17,"column_end":29},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":229792,"byte_end":229804,"line_start":407,"line_end":407,"column_start":56,"column_end":68},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":4163},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/array_impl.rs","byte_start":231740,"byte_end":231753,"line_start":457,"line_end":457,"column_start":17,"column_end":30},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":4170},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":238855,"byte_end":238871,"line_start":40,"line_end":40,"column_start":6,"column_end":22},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":4187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240128,"byte_end":240144,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":4187},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240253,"byte_end":240269,"line_start":77,"line_end":77,"column_start":22,"column_end":38},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":4187},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":240737,"byte_end":240752,"line_start":93,"line_end":93,"column_start":6,"column_end":21},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":4208},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241813,"byte_end":241828,"line_start":118,"line_end":118,"column_start":21,"column_end":36},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":4208},"to":{"krate":2,"index":2231}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":241952,"byte_end":241967,"line_start":123,"line_end":123,"column_start":22,"column_end":37},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":4208},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":244415,"byte_end":244426,"line_start":187,"line_end":187,"column_start":6,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":4229},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251142,"byte_end":251153,"line_start":354,"line_end":354,"column_start":31,"column_end":42},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251378,"byte_end":251389,"line_start":362,"line_end":362,"column_start":43,"column_end":54},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251613,"byte_end":251624,"line_start":369,"line_end":369,"column_start":28,"column_end":39},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251720,"byte_end":251731,"line_start":371,"line_end":371,"column_start":23,"column_end":34},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251824,"byte_end":251835,"line_start":373,"line_end":373,"column_start":30,"column_end":41},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":251947,"byte_end":251958,"line_start":375,"line_end":375,"column_start":35,"column_end":46},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":252063,"byte_end":252074,"line_start":377,"line_end":377,"column_start":24,"column_end":35},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":252210,"byte_end":252221,"line_start":380,"line_end":380,"column_start":33,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":4229},"to":{"krate":2,"index":1952}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":254559,"byte_end":254570,"line_start":445,"line_end":445,"column_start":22,"column_end":33},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":4229},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":255870,"byte_end":255881,"line_start":473,"line_end":473,"column_start":27,"column_end":38},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":4229},"to":{"krate":0,"index":1018}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":258590,"byte_end":258601,"line_start":524,"line_end":524,"column_start":22,"column_end":33},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4229},"to":{"krate":0,"index":1023}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259135,"byte_end":259142,"line_start":537,"line_end":537,"column_start":27,"column_end":34},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3515},"to":{"krate":0,"index":1013}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":259625,"byte_end":259630,"line_start":556,"line_end":556,"column_start":10,"column_end":15},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":1677},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/messageitem.rs","byte_start":262499,"byte_end":262510,"line_start":625,"line_end":625,"column_start":10,"column_end":21},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1695},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":156777,"byte_end":156784,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":4350},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157282,"byte_end":157289,"line_start":111,"line_end":111,"column_start":15,"column_end":22},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":2255}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157382,"byte_end":157389,"line_start":117,"line_end":117,"column_start":16,"column_end":23},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":4350},"to":{"krate":2,"index":1732}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157601,"byte_end":157608,"line_start":125,"line_end":125,"column_start":18,"column_end":25},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":4350},"to":{"krate":1,"index":8750}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157690,"byte_end":157697,"line_start":131,"line_end":131,"column_start":20,"column_end":27},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4350},"to":{"krate":1,"index":8754}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":157787,"byte_end":157794,"line_start":137,"line_end":137,"column_start":20,"column_end":27},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4350},"to":{"krate":1,"index":8752}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":158029,"byte_end":158039,"line_start":145,"line_end":145,"column_start":10,"column_end":20},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":162026,"byte_end":162030,"line_start":228,"line_end":228,"column_start":10,"column_end":14},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":4374},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167612,"byte_end":167616,"line_start":352,"line_end":352,"column_start":25,"column_end":29},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":4374},"to":{"krate":2,"index":6555}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":167905,"byte_end":167909,"line_start":364,"line_end":364,"column_start":23,"column_end":27},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":4374},"to":{"krate":2,"index":5281}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":170267,"byte_end":170274,"line_start":437,"line_end":437,"column_start":6,"column_end":13},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":4385},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171135,"byte_end":171152,"line_start":468,"line_end":468,"column_start":6,"column_end":23},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":4458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171617,"byte_end":171634,"line_start":481,"line_end":481,"column_start":23,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4458},"to":{"krate":1,"index":1720}},{"span":{"file_name":"/home/hangleang/.cargo/registry/src/github.com-1ecc6299db9ec823/dbus-0.9.1/src/arg/mod.rs","byte_start":171789,"byte_end":171806,"line_start":486,"line_end":486,"column_start":23,"column_end":40},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4458},"to":{"krate":2,"index":6560}}]}